{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../../src/Logo1.svelte","../../../src/Logo2.svelte","../../../src/Logo3.svelte","../../../src/Logo4.svelte","../../../src/Logo5.svelte","../../../src/Logo6.svelte","../../../src/Logo7.svelte","../../../src/Logo8.svelte","../../../src/Logo9.svelte","../../../src/Logo10.svelte","../../../src/Logo11.svelte","../../../src/Logo12.svelte","../../../src/Logo13.svelte","../../../src/Logo14.svelte","../../../src/Logo15.svelte","../../../src/Logo16.svelte","../../../src/Logo17.svelte","../../../src/Logo18.svelte","../../../src/Logo19.svelte","../../../src/Logo20.svelte","../../../src/Logo21.svelte","../../../src/Logo22.svelte","../../../src/Logo23.svelte","../../../src/Logo24.svelte","../../../src/Logo25.svelte","../../../src/Logo26.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   data-name=\"logoipsum\"\n   viewBox=\"0 0 126.71866 29.54048\">\n  <title\n     id=\"title75\">logoipsum-1</title>\n  <path\n     d=\"M 35.99,9.0304791 H 39.2 V 22.030479 h -3.21 z m 4.49,8.1099999 c 0,-3.22 2,-5.15 5,-5.15 3,0 5,1.93 5,5.15 0,3.22 -1.93,5.17 -5,5.17 -3.07,0 -5,-1.88 -5,-5.17 z m 6.82,0 c 0,-1.77 -0.69,-2.81 -1.79,-2.81 -1.1,0 -1.78,1 -1.78,2.81 0,1.81 0.68,2.8 1.78,2.8 1.1,0 1.81,-0.99 1.81,-2.79 z m 4.46,5.56 h 3.1 a 1.66,1.66 0 0 0 1.74,1 c 1.23,0 1.87,-0.66 1.87,-1.64 v -1.8 h 0.01 a 3.07,3.07 0 0 1 -3,1.75 c -2.35,0 -3.91,-1.79 -3.91,-4.87 0,-3.08 1.49,-5 4,-5 a 3.07,3.07 0 0 1 3,1.89 h -0.09 v -1.81 h 3.18 v 9.74 c 0,2.35 -2.08,3.82 -5.14,3.82 -2.78,-0.01 -4.56,-1.28 -4.74,-3.07 z m 6.72,-5.56 c 0,-1.57 -0.72,-2.56 -1.86,-2.56 -1.14,0 -1.84,1 -1.84,2.56 0,1.56 0.69,2.48 1.84,2.48 1.15,0 1.86,-0.85 1.86,-2.48 z m 4.45,0 c 0,-3.22 2,-5.15 5,-5.15 3,0 5,1.93 5,5.15 0,3.22 -1.94,5.17 -5,5.17 -3.06,0 -4.98,-1.88 -4.98,-5.17 z m 6.82,0 c 0,-1.77 -0.7,-2.81 -1.79,-2.81 -1.09,0 -1.78,1 -1.78,2.81 0,1.81 0.68,2.8 1.78,2.8 1.1,0 1.81,-0.99 1.81,-2.79 z m 4.48,-7.2899999 a 1.64,1.64 0 1 1 1.64,1.5699999 1.58,1.58 0 0 1 -1.62,-1.5599999 z m 0,2.3599999 h 3.25 v 9.86 h -3.2 z m 14.94,4.93 c 0,3.21 -1.44,5.07 -3.89,5.07 a 3.07,3.07 0 0 1 -3,-1.83 h -0.06 v 4.86 h -3.21 v -13 h 3.19 v 1.76 h 0.06 a 3.09,3.09 0 0 1 3,-1.9 c 2.52,-0.02 3.97,1.83 3.97,5.05 z m -3.27,0 c 0,-1.56 -0.73,-2.57 -1.86,-2.57 -1.13,0 -1.84,1 -1.85,2.57 -0.01,1.57 0.72,2.56 1.85,2.56 1.13,0 1.92,-0.93 1.92,-2.55 z m 8.75,-5.16 c 2.69,0 4.36,1.27 4.38,3.31 H 96.1 c 0,-0.71 -0.59,-1.15 -1.47,-1.15 -0.88,0 -1.3,0.34 -1.3,0.85 0,0.51 0.37,0.67 1.11,0.82 l 2.06,0.42 c 2,0.42 2.8,1.22 2.8,2.71 0,2 -1.85,3.36 -4.6,3.36 -2.75,0 -4.54,-1.32 -4.67,-3.33 h 3.11 c 0.09,0.73 0.67,1.16 1.61,1.16 0.94,0 1.38,-0.3 1.38,-0.83 0,-0.53 -0.3,-0.62 -1.07,-0.78 l -1.86,-0.39 c -1.93,-0.41 -2.94,-1.42 -2.94,-2.93 0.06,-1.96 1.74,-3.21 4.45,-3.21 z m 15.4,10.08 h -3.11 v -1.85 h -0.06 a 2.82,2.82 0 0 1 -2.87,2.05 3.43,3.43 0 0 1 -3.53,-3.71 v -6.33 h 3.21 v 5.64 c 0,1.16 0.61,1.79 1.61,1.79 a 1.64,1.64 0 0 0 1.61,-1.88 v -5.55 h 3.2 z m 1.55,-9.85 h 3.12 v 1.9 h 0.07 a 2.86,2.86 0 0 1 2.81,-2.08 2.56,2.56 0 0 1 2.74,2.09 h 0.14 a 3,3 0 0 1 3,-2.09 3.12,3.12 0 0 1 3.23,3.35 v 6.69 h -3.23 v -5.87 c 0,-1 -0.47,-1.56 -1.38,-1.56 a 1.4,1.4 0 0 0 -1.41,1.59 v 5.84 h -3.06 v -5.9 c 0,-1 -0.49,-1.53 -1.37,-1.53 a 1.43,1.43 0 0 0 -1.43,1.61 v 5.82 h -3.21 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"M 29.64,9.8804789 A 9.88,9.88 0 0 0 12.48,3.2004791 H 0 V 29.540479 h 26.35 v -12.31 a 9.87,9.87 0 0 0 3.29,-7.3500001 z m -5.07,0 A 4.82,4.82 0 1 1 19.75,5.0704791 4.82,4.82 0 0 1 24.57,9.8804789 Z M 21.28,24.470479 H 5.07 V 8.2704791 h 4.94 a 9.55,9.55 0 0 0 -0.15,1.6099998 9.9,9.9 0 0 0 9.89,9.8900001 9.67,9.67 0 0 0 1.53,-0.13 z\"\n     style=\"fill:{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   data-name=\"logoipsum\"\n   viewBox=\"0 0 123.36 28.49\">\n  <title\n     id=\"title142\">logoipsum-2</title>\n  <path\n     d=\"M 26.52,9.9500002 C 26.88,9.9500002 27,10.08 27,10.43 v 7.92 h 4.07 c 0.35,0 0.48,0.13 0.48,0.48 v 0.7 c 0,0.35 -0.13,0.48 -0.48,0.48 h -5.36 c -0.35,0 -0.49,-0.13 -0.49,-0.48 v -9.1 c 0,-0.35 0.14,-0.4799998 0.49,-0.4799998 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 35.1,13.44 c 0,-2.31 1.46,-3.7 4,-3.7 2.54,0 4,1.39 4,3.7 v 3.08 c 0,2.31 -1.47,3.7 -4,3.7 -2.53,0 -4,-1.39 -4,-3.7 z m 6.32,0 c 0,-1.3 -0.81,-2 -2.27,-2 -1.46,0 -2.26,0.71 -2.26,2 v 3.1 c 0,1.31 0.8,2 2.26,2 1.46,0 2.27,-0.72 2.27,-2 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 55.01,14.5 c 0.39,0 0.48,0.13 0.48,0.48 v 1.9 a 3,3 0 0 1 -1.06,2.36 4.36,4.36 0 0 1 -3,0.94 c -2.59,0 -4,-1.39 -4,-3.7 v -3.1 c 0,-2.28 1.46,-3.68 4,-3.68 2,0 3.3,0.79 3.85,2.37 a 0.43,0.43 0 0 1 -0.3,0.62 l -0.78,0.27 c -0.34,0.12 -0.48,0.05 -0.6,-0.3 a 2.06,2.06 0 0 0 -2.17,-1.3 c -1.47,0 -2.27,0.71 -2.27,2 v 3.18 c 0,1.31 0.81,2 2.27,2 1.46,0 2.36,-0.67 2.36,-1.65 v -0.74 h -2.17 c -0.36,0 -0.49,-0.14 -0.49,-0.49 v -0.68 c 0,-0.35 0.13,-0.48 0.49,-0.48 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 59.62,13.44 c 0,-2.31 1.46,-3.7 4,-3.7 2.54,0 4,1.39 4,3.7 v 3.08 c 0,2.31 -1.47,3.7 -4,3.7 -2.53,0 -4,-1.39 -4,-3.7 z m 6.31,0 c 0,-1.3 -0.81,-2 -2.26,-2 -1.45,0 -2.27,0.71 -2.27,2 v 3.1 c 0,1.31 0.81,2 2.27,2 1.46,0 2.26,-0.72 2.26,-2 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 72.33,10.24 c 0,-0.22 0.07,-0.2899998 0.29,-0.2899998 h 0.46 c 0.22,0 0.27,0.07 0.27,0.2899998 v 9.48 c 0,0.22 0,0.29 -0.27,0.29 h -0.46 c -0.22,0 -0.29,-0.07 -0.29,-0.29 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 82.46,9.9500002 a 3.14,3.14 0 1 1 0,6.2799998 h -3 v 3.49 c 0,0.22 -0.05,0.29 -0.26,0.29 h -0.47 c -0.21,0 -0.29,-0.07 -0.29,-0.29 v -9.48 c 0,-0.22 0.08,-0.2899998 0.29,-0.2899998 z M 82.37,15.24 a 2.18,2.18 0 1 0 0,-4.36 h -3 v 4.36 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 93.41,9.75 a 3.61,3.61 0 0 1 3.72,2.18 c 0.08,0.16 0,0.29 -0.16,0.37 l -0.44,0.2 c -0.18,0.07 -0.25,0.06 -0.36,-0.13 a 2.72,2.72 0 0 0 -2.76,-1.64 c -1.69,0 -2.61,0.67 -2.61,1.87 a 1.52,1.52 0 0 0 1.27,1.54 6.79,6.79 0 0 0 1.66,0.32 6.88,6.88 0 0 1 2,0.41 2.25,2.25 0 0 1 1.56,2.37 c 0,1.87 -1.36,3 -3.86,3 a 3.61,3.61 0 0 1 -3.83,-2.43 0.27,0.27 0 0 1 0.17,-0.38 l 0.44,-0.16 a 0.27,0.27 0 0 1 0.36,0.17 2.86,2.86 0 0 0 2.86,1.8 c 1.89,0 2.82,-0.66 2.82,-2 a 1.49,1.49 0 0 0 -1.17,-1.53 7,7 0 0 0 -1.59,-0.28 l -1.08,-0.14 a 9.5,9.5 0 0 1 -1,-0.27 2.63,2.63 0 0 1 -0.89,-0.47 2.44,2.44 0 0 1 -0.8,-1.91 c 0.07,-1.75 1.38,-2.89 3.69,-2.89 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 102.68,16.59 a 2.78,2.78 0 0 0 5.55,0 v -6.35 c 0,-0.22 0.07,-0.2899998 0.29,-0.2899998 h 0.46 c 0.22,0 0.29,0.07 0.29,0.2899998 v 6.34 c 0,2.27 -1.34,3.64 -3.81,3.64 -2.47,0 -3.81,-1.37 -3.81,-3.64 v -6.34 c 0,-0.22 0.07,-0.2899998 0.28,-0.2899998 h 0.47 c 0.21,0 0.28,0.07 0.28,0.2899998 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 123.07,9.9500002 c 0.22,0 0.29,0.07 0.29,0.2899998 v 9.48 c 0,0.22 -0.07,0.29 -0.29,0.29 h -0.42 c -0.21,0 -0.28,-0.07 -0.28,-0.29 v -5.77 a 18.55,18.55 0 0 1 0.17,-2.51 h -0.06 a 18,18 0 0 1 -1.09,2.21 l -2.15,3.79 a 0.35,0.35 0 0 1 -0.33,0.22 h -0.28 a 0.37,0.37 0 0 1 -0.34,-0.22 l -2.18,-3.83 a 16.07,16.07 0 0 1 -1,-2.18 h -0.06 a 21.76,21.76 0 0 1 0.16,2.53 v 5.76 c 0,0.22 -0.07,0.29 -0.29,0.29 h -0.39 c -0.22,0 -0.29,-0.07 -0.29,-0.29 v -9.48 c 0,-0.22 0.07,-0.2899998 0.29,-0.2899998 h 0.36 A 0.4,0.4 0 0 1 115.29,10.18 l 3.5,6.22 3.48,-6.16 c 0.11,-0.21 0.17,-0.24 0.39,-0.24 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 8.73,17.79 v 7.23 a 1.045,1.045 0 0 1 -2.09,0 V 17.8 a 1.77,1.77 0 0 0 1,0.34 1.72,1.72 0 0 0 1.09,-0.35 z m 8.9,-2.09 a 1,1 0 0 0 -1,1 v 1.26 a 1.045,1.045 0 1 0 2.09,0 V 16.75 A 1,1 0 0 0 17.63,15.7 Z M 4.37,20.53 a 1.8,1.8 0 0 1 -1,-0.34 v 7.25 a 1.05,1.05 0 0 0 2.1,0 v -7.2 a 1.83,1.83 0 0 1 -1.1,0.29 z m 10,-7 a 1,1 0 0 0 -1.05,1 v 5.57 a 1.05,1.05 0 1 0 2.1,0 v -5.5 a 1,1 0 0 0 -1.1,-1.05 z m -3.32,2.14 A 1.83,1.83 0 0 1 9.9999997,15.33 V 22.6 A 1.05,1.05 0 1 0 12.1,22.6 V 15.34 A 1.77,1.77 0 0 1 11,15.69 Z M 2.1,21.24 V 0.92999995 A 0.94,0.94 0 0 0 1.16,0 H 0.93999996 A 0.94,0.94 0 0 0 0,0.92999995 V 21.24 a 0.94,0.94 0 0 0 0.93999996,0.94 H 1.16 A 0.94,0.94 0 0 0 2.1,21.24 Z M 4.48,19.76 H 4.26 A 0.94,0.94 0 0 1 3.32,18.82 V 3.35 A 0.94,0.94 0 0 1 4.26,2.42 H 4.48 A 0.94,0.94 0 0 1 5.42,3.35 V 18.84 A 0.94,0.94 0 0 1 4.48,19.78 Z M 7.79,17.38 H 7.56 A 0.93,0.93 0 0 1 6.63,16.45 V 5.75 A 0.93,0.93 0 0 1 7.56,4.81 h 0.23 a 0.94,0.94 0 0 1 0.93,0.94 v 10.7 A 0.93,0.93 0 0 1 7.79,17.38 Z M 11.1,14.93 H 10.89 A 0.94,0.94 0 0 1 9.9499997,14 V 8.24 A 0.94,0.94 0 0 1 10.89,7.24 h 0.22 a 0.94,0.94 0 0 1 0.94,0.94 v 5.8 a 0.94,0.94 0 0 1 -0.94,0.95 z m 3.32,-2.15 H 14.2 A 0.94,0.94 0 0 1 13.26,11.84 V 10.35 A 0.94,0.94 0 0 1 14.2,9.42 h 0.22 a 0.94,0.94 0 0 1 0.94,0.93 v 1.49 a 0.94,0.94 0 0 1 -0.93,0.94 z\"\n     style=\"fill:{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   data-name=\"logoipsum\"\n   viewBox=\"0 0 117.67738 23.614685\">\n  <title\n     id=\"title225\">logoipsum-3</title>\n  <path\n     d=\"m 37.83,19.20472 a 2.65,2.65 0 0 1 -1.67,-0.48 1.56,1.56 0 0 1 -0.63,-1.31 V 8.1447201 a 0.26,0.26 0 0 1 0.29,-0.29 h 1.68 c 0.19,0 0.28,0.1 0.28,0.29 V 16.69472 c 0,0.38 0.17,0.57 0.52,0.57 a 1.44,1.44 0 0 0 0.44,-0.05 c 0.2,0 0.31,0.06 0.32,0.24 l 0.15,1.25 a 0.26,0.26 0 0 1 -0.24,0.31 3.77,3.77 0 0 1 -1.14,0.19 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 47.28,18.13472 a 4.71,4.71 0 0 1 -6,0 4,4 0 0 1 0,-5.63 4.73,4.73 0 0 1 6,0 4.06,4.06 0 0 1 0,5.62 z m -4.42,-1.32 a 2.13,2.13 0 0 0 2.86,0 2.24,2.24 0 0 0 0,-2.94 2.13,2.13 0 0 0 -2.86,0 2.24,2.24 0 0 0 0,2.94 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 57.66,11.68472 c 0.19,0 0.28,0.1 0.28,0.29 v 7.17 a 3.26,3.26 0 0 1 -1.11,2.57 4.2,4.2 0 0 1 -2.91,1 4.68,4.68 0 0 1 -2.71,-0.75 3,3 0 0 1 -1.31,-2 c 0,-0.2 0,-0.29 0.27,-0.29 h 1.68 a 0.37,0.37 0 0 1 0.33,0.23 1.31,1.31 0 0 0 0.61,0.71 2.34,2.34 0 0 0 1.12,0.26 1.77,1.77 0 0 0 1.29,-0.46 1.7,1.7 0 0 0 0.47,-1.25 v -0.63 a 3.35,3.35 0 0 1 -2.08,0.65 3.88,3.88 0 0 1 -2.84,-1.09 4,4 0 0 1 0,-5.56 3.91,3.91 0 0 1 2.84,-1.08 3.36,3.36 0 0 1 2.13,0.69 v -0.16 a 0.26,0.26 0 0 1 0.28,-0.29 z m -3.88,5.72 a 1.76,1.76 0 0 0 1.37,-0.59 2.45,2.45 0 0 0 0,-3 1.75,1.75 0 0 0 -1.36,-0.58 1.8,1.8 0 0 0 -1.39,0.59 2.12,2.12 0 0 0 -0.54,1.5 2.16,2.16 0 0 0 0.53,1.49 1.81,1.81 0 0 0 1.39,0.59 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 66.57,18.13472 a 4.73,4.73 0 0 1 -6,0 4.07,4.07 0 0 1 0,-5.63 4.74,4.74 0 0 1 6,0 4.06,4.06 0 0 1 0,5.62 z m -4.43,-1.32 a 2,2 0 0 0 1.44,0.55 2,2 0 0 0 1.43,-0.55 2.27,2.27 0 0 0 0,-2.94 2,2 0 0 0 -1.43,-0.55 2,2 0 0 0 -1.44,0.55 2.27,2.27 0 0 0 0,2.94 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 71.31,9.9847201 a 1.45,1.45 0 0 1 -1.91,0 1.21,1.21 0 0 1 0,-1.76 1.48,1.48 0 0 1 1.91,0 1.21,1.21 0 0 1 0,1.76 z m 0.21,9.2199999 a 2.69,2.69 0 0 1 -1.67,-0.48 1.58,1.58 0 0 1 -0.62,-1.31 v -5.44 a 0.26,0.26 0 0 1 0.29,-0.29 h 1.68 c 0.19,0 0.28,0.1 0.28,0.29 v 4.72 q 0,0.57 0.51,0.57 a 1.55,1.55 0 0 0 0.45,-0.05 c 0.2,0 0.31,0.06 0.32,0.24 l 0.15,1.25 a 0.26,0.26 0 0 1 -0.24,0.31 3.79,3.79 0 0 1 -1.15,0.19 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 79.09,11.44472 a 3.92,3.92 0 0 1 2.86,1.08 4.1,4.1 0 0 1 0,5.59 3.89,3.89 0 0 1 -2.86,1.09 3.44,3.44 0 0 1 -2.09,-0.65 v 3.61 c 0,0.19 -0.1,0.28 -0.29,0.28 h -1.68 a 0.24,0.24 0 0 1 -0.28,-0.28 v -8.2 a 0.52,0.52 0 0 0 -0.59,-0.59 h -0.33 q -0.33,0 -0.33,-0.24 v -1.18 a 0.32,0.32 0 0 1 0.23,-0.33 3,3 0 0 1 1.08,-0.18 1.85,1.85 0 0 1 1.81,1 3.37,3.37 0 0 1 2.47,-1 z m -1.56,5.37 a 1.91,1.91 0 0 0 2.76,0 2.16,2.16 0 0 0 0.55,-1.53 2.13,2.13 0 0 0 -0.55,-1.53 1.91,1.91 0 0 0 -2.76,0 2.21,2.21 0 0 0 -0.53,1.53 2.24,2.24 0 0 0 0.53,1.53 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 87.77,19.20472 a 4.82,4.82 0 0 1 -2.57,-0.62 2.44,2.44 0 0 1 -1.16,-1.77 c 0,-0.2 0.07,-0.3 0.29,-0.3 h 1.47 a 0.38,0.38 0 0 1 0.33,0.22 c 0.21,0.54 0.76,0.81 1.64,0.81 a 1.87,1.87 0 0 0 0.89,-0.18 0.58,0.58 0 0 0 0.34,-0.49 c 0,-0.26 -0.16,-0.44 -0.48,-0.56 a 5.41,5.41 0 0 0 -1.17,-0.25 11.12,11.12 0 0 1 -1.4,-0.25 2.3,2.3 0 0 1 -1.17,-0.67 2.14,2.14 0 0 1 0.43,-3.1 4.12,4.12 0 0 1 2.42,-0.64 4.42,4.42 0 0 1 2.36,0.59 2.23,2.23 0 0 1 1.1,1.57 q 0,0.3 -0.27,0.3 h -1.48 a 0.31,0.31 0 0 1 -0.3,-0.18 1,1 0 0 0 -0.52,-0.53 1.76,1.76 0 0 0 -0.86,-0.2 1.74,1.74 0 0 0 -0.85,0.17 0.5,0.5 0 0 0 -0.32,0.46 0.64,0.64 0 0 0 0.48,0.59 5.42,5.42 0 0 0 1.19,0.3 13.08,13.08 0 0 1 1.39,0.26 2.3,2.3 0 0 1 1.17,0.67 1.89,1.89 0 0 1 0.49,1.37 2,2 0 0 1 -0.93,1.74 4.37,4.37 0 0 1 -2.51,0.69 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 101.78,18.70472 a 0.27,0.27 0 0 1 -0.23,0.31 3.86,3.86 0 0 1 -1.13,0.19 2.22,2.22 0 0 1 -2,-0.87 3.62,3.62 0 0 1 -2.55,0.87 3.1,3.1 0 0 1 -2.34,-0.91 3.28,3.28 0 0 1 -0.89,-2.41 v -3.91 c 0,-0.19 0.09,-0.29 0.28,-0.29 h 1.68 c 0.19,0 0.28,0.1 0.28,0.29 v 3.61 a 1.77,1.77 0 0 0 0.43,1.23 1.5,1.5 0 0 0 1.15,0.47 1.66,1.66 0 0 0 1.2,-0.44 1.6,1.6 0 0 0 0.45,-1.19 v -3.68 c 0,-0.19 0.09,-0.29 0.28,-0.29 h 1.7 c 0.19,0 0.28,0.1 0.28,0.29 v 4.71 c 0,0.39 0.17,0.58 0.5,0.58 a 1.58,1.58 0 0 0 0.46,-0.05 0.26,0.26 0 0 1 0.33,0.24 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 117.67,18.70472 a 0.25,0.25 0 0 1 -0.23,0.31 3.88,3.88 0 0 1 -1.15,0.19 2.67,2.67 0 0 1 -1.67,-0.48 1.56,1.56 0 0 1 -0.67,-1.31 v -2.35 a 1.77,1.77 0 0 0 -0.42,-1.23 1.42,1.42 0 0 0 -1.12,-0.47 1.25,1.25 0 0 0 -1,0.44 1.78,1.78 0 0 0 -0.38,1.18 v 3.69 c 0,0.19 -0.09,0.29 -0.28,0.29 h -1.69 a 0.26,0.26 0 0 1 -0.29,-0.29 v -3.61 a 1.85,1.85 0 0 0 -0.39,-1.23 1.3,1.3 0 0 0 -1,-0.47 1.45,1.45 0 0 0 -1.1,0.44 1.65,1.65 0 0 0 -0.41,1.18 v 3.69 a 0.26,0.26 0 0 1 -0.29,0.29 h -1.63 c -0.19,0 -0.28,-0.1 -0.28,-0.29 v -4.71 a 0.52,0.52 0 0 0 -0.59,-0.59 h -0.33 q -0.33,0 -0.33,-0.24 v -1.18 a 0.32,0.32 0 0 1 0.23,-0.33 3,3 0 0 1 1.08,-0.18 1.88,1.88 0 0 1 1.78,0.92 3.38,3.38 0 0 1 2.54,-0.92 2.87,2.87 0 0 1 2.37,1.06 3.3,3.3 0 0 1 2.62,-1.06 3.16,3.16 0 0 1 2.37,0.91 3.26,3.26 0 0 1 0.89,2.41 v 1.93 c 0,0.38 0.17,0.57 0.49,0.57 a 1.5,1.5 0 0 0 0.46,-0.05 q 0.31,0 0.33,0.24 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 0.41,10.38472 a 13.69,13.69 0 0 1 26.57,0 h -1.2 a 9.69,9.69 0 0 0 -5.67,1.73 2.86,2.86 0 0 1 -0.3,0.19 h -0.14 a 2.86,2.86 0 0 1 -0.3,-0.19 10.17,10.17 0 0 0 -11.35,0 2.86,2.86 0 0 1 -0.3,0.19 H 7.58 a 2.86,2.86 0 0 1 -0.3,-0.19 9.69,9.69 0 0 0 -5.67,-1.73 z m 23.21,6.27 a 3.37,3.37 0 0 1 2.16,-0.71 h 1.61 v -3.21 h -1.61 a 6.38,6.38 0 0 0 -3.83,1.22 3.64,3.64 0 0 1 -4.32,0 6.8,6.8 0 0 0 -7.77,0 3.64,3.64 0 0 1 -4.32,0 6.38,6.38 0 0 0 -3.88,-1.22 H 0 v 3.21 h 1.61 a 3.37,3.37 0 0 1 2.16,0.71 6.78,6.78 0 0 0 7.76,0 3.39,3.39 0 0 1 2.16,-0.71 3.35,3.35 0 0 1 2.16,0.71 6.8,6.8 0 0 0 7.77,0 z m 0,5.74 a 3.37,3.37 0 0 1 2.16,-0.71 h 1.61 v -3.21 h -1.61 a 6.38,6.38 0 0 0 -3.83,1.22 3.64,3.64 0 0 1 -4.32,0 6.8,6.8 0 0 0 -7.77,0 3.64,3.64 0 0 1 -4.32,0 6.38,6.38 0 0 0 -3.88,-1.22 H 0 v 3.21 h 1.61 a 3.37,3.37 0 0 1 2.16,0.71 6.78,6.78 0 0 0 7.76,0 3.39,3.39 0 0 1 2.16,-0.71 3.35,3.35 0 0 1 2.16,0.71 6.8,6.8 0 0 0 7.77,0 z\"\n     style=\"fill:{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   data-name=\"logoipsum\"\n   viewBox=\"0 0 100.19 47.654182\">\n  <title\n     id=\"title314\">logoipsum-4</title>\n  <path\n     d=\"m 0,28.610002 h 3 v 14.71 H 0 Z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 4.74,38.280002 a 5.34,5.34 0 1 1 5.34,5.33 5.28,5.28 0 0 1 -5.34,-5.33 z m 7.66,0 a 2.32,2.32 0 1 0 -2.32,2.38 2.26,2.26 0 0 0 2.32,-2.38 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 27.48,33.240002 v 9.58 c 0,3.39 -2.65,4.82 -5.33,4.82 a 5.15,5.15 0 0 1 -4.77,-2.44 l 2.58,-1.49 a 2.3,2.3 0 0 0 2.25,1.27 2,2 0 0 0 2.32,-2.16 v -0.93 a 3.56,3.56 0 0 1 -2.94,1.31 5.12,5.12 0 0 1 0,-10.24 3.59,3.59 0 0 1 2.94,1.31 v -1 z m -2.95,4.84 a 2.44,2.44 0 1 0 -2.44,2.34 2.28,2.28 0 0 0 2.44,-2.34 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 29.21,38.280002 a 5.34,5.34 0 1 1 5.34,5.33 5.28,5.28 0 0 1 -5.34,-5.33 z m 7.66,0 a 2.32,2.32 0 1 0 -2.32,2.38 2.26,2.26 0 0 0 2.3,-2.38 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 41.28,30.540002 a 1.82,1.82 0 1 1 1.82,1.82 1.83,1.83 0 0 1 -1.82,-1.82 z m 0.31,2.7 h 3 v 10.08 h -3 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 57.67,38.280002 a 5.06,5.06 0 0 1 -4.81,5.33 3.83,3.83 0 0 1 -3,-1.23 v 5 h -3 v -14.14 h 3 v 0.95 a 3.83,3.83 0 0 1 3,-1.23 5.06,5.06 0 0 1 4.81,5.32 z m -3,0 a 2.4,2.4 0 1 0 -2.46,2.46 2.3,2.3 0 0 0 2.44,-2.46 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 67.01,40.300002 c 0,2.32 -2,3.31 -4.2,3.31 a 4.42,4.42 0 0 1 -4.33,-2.4 l 2.62,-1.49 a 1.66,1.66 0 0 0 1.71,1.19 c 0.73,0 1.09,-0.23 1.09,-0.63 0,-1.11 -5,-0.52 -5,-4 0,-2.2 1.86,-3.31 4,-3.31 a 4.43,4.43 0 0 1 3.94,2.16 l -2.63,1.38 a 1.49,1.49 0 0 0 -1.36,-0.89 c -0.52,0 -0.84,0.2 -0.84,0.57 0.04,1.15 5,0.38 5,4.11 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 78.05,33.240002 v 10.08 h -3 v -0.94 a 3.45,3.45 0 0 1 -2.88,1.23 c -2,0 -3.77,-1.45 -3.77,-4.18 v -6.19 h 3 v 5.75 a 1.66,1.66 0 0 0 1.81,1.83 c 1.1,0 1.87,-0.64 1.87,-2.07 v -5.51 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 95.39,37.140002 v 6.18 h -3 v -5.92 c 0,-1 -0.49,-1.66 -1.45,-1.66 -0.96,0 -1.58,0.71 -1.58,1.9 v 5.68 h -3 v -5.92 c 0,-1 -0.48,-1.66 -1.45,-1.66 -0.97,0 -1.57,0.71 -1.57,1.9 v 5.68 h -3 v -10.08 h 3 v 0.93 a 3.1,3.1 0 0 1 2.7,-1.21 3,3 0 0 1 2.64,1.33 3.32,3.32 0 0 1 2.92,-1.33 c 2.28,0 3.79,1.66 3.79,4.18 z\"\n     style=\"fill:{color}\" />\n  <circle\n     cx=\"97.950005\"\n     cy=\"30.940001\"\n     r=\"2.24\"\n     style=\"fill:{color}\" />\n  <circle\n     cx=\"33.949997\"\n     cy=\"10.49\"\n     r=\"10.49\"\n     style=\"fill:{color}\" />\n  <circle\n     cx=\"57.400002\"\n     cy=\"10.49\"\n     r=\"10.49\"\n     style=\"fill:{color}\" />\n  <rect\n     x=\"0.020001374\"\n     y=\"1.9073486e-06\"\n     width=\"20.969999\"\n     height=\"20.969999\"\n     style=\"fill:{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   data-name=\"Layer 1\"\n   viewBox=\"0 0 126.29 32.919998\">\n  <title\n     id=\"title418\">logo-5</title>\n  <path\n     d=\"m 20.48,7.83 h 2 v 13.92 h 6 v 2 h -8 z m 14.23,0 a 6,6 0 1 1 -6,6 6,6 0 0 1 6,-6 z m 0,10 a 4,4 0 1 0 -4,-4 4,4 0 0 0 4,3.98 z m -4,3.94 h 8 v 2 h -8 z m 25.6,2 h -2 v -1.43 a 7.69,7.69 0 0 1 -4.4,1.39 8,8 0 1 1 6,-13.23 l -1.47,1.31 a 6,6 0 1 0 -4.46,10 5.77,5.77 0 0 0 4.38,-2 h -5.4 v -2 h 7.37 z m 7.36,-15.9 a 6,6 0 1 1 -6,6 6,6 0 0 1 6.02,-6.04 z m 0,10 a 4,4 0 1 0 -4,-4 4,4 0 0 0 4.02,3.94 z m -4,3.94 h 8 v 2 h -8 z M 71.8,7.83 h 2 v 15.9 h -2 z m 4.77,0 h 2 a 1.47,1.47 0 0 1 0.31,0 6,6 0 1 1 0,11.93 h -0.31 v 4 h -2 z m 2,2 v 7.91 h 0.31 a 4,4 0 1 0 0,-7.93 1.47,1.47 0 0 0 -0.32,0.07 z M 92.98,8.98 91.5,10.15 a 1.94,1.94 0 0 0 -3.33,1.13 v 0.16 c 0,0.88 0.61,1.47 1.8,1.55 4.58,0.28 6.68,2.43 6.68,5.27 v 0.18 a 5.9,5.9 0 0 1 -10.17,3.42 l 1.53,-1.18 a 3.6,3.6 0 0 0 2.8,1.14 3.74,3.74 0 0 0 3.92,-3.38 V 18.3 c 0,-2.67 -2.62,-3.16 -4.89,-3.38 -2.1,-0.2 -3.61,-1.51 -3.61,-3.4 v -0.08 a 3.85,3.85 0 0 1 3.93,-3.56 3.74,3.74 0 0 1 2.81,1.15 z m 11.5,12.72 c 2.49,0 4.46,-2.69 4.46,-6 v -8 h 2 v 8 c 0,4.4 -2.88,7.95 -6.42,7.95 -3.54,0 -6.42,-3.55 -6.42,-7.95 v -8 h 2 v 8 c -0.08,3.36 1.89,6.05 4.37,6.05 z m 21.81,2 h -2 v -9.9 l -4.61,6 -4.61,-6 v 9.93 h -2 V 7.83 l 6.6,8.69 6.6,-8.69 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"M 10.88,5.44 A 5.44,5.44 0 0 0 0,5.44 v 16.45 l 4.48,3.21 v 7.82 H 6.4 V 25.1 l 4.48,-3.21 z M 8.96,14.64 6.4,17.2 v -2.4 l 2.56,-2.56 z m -7,-2.4 2.56,2.56 v 2.4 L 1.96,14.64 Z m 7,-2.72 -3.52,3.52 -3.52,-3.6 V 7.04 L 5.44,10.56 8.96,7.04 Z M 5.44,1.92 a 3.54,3.54 0 0 1 3.4,2.61 L 5.44,7.92 2.04,4.53 a 3.54,3.54 0 0 1 3.4,-2.65 z m -3.52,19 v -3.6 l 2.56,2.56 v 2.86 z m 4.48,1.83 v -2.87 l 2.56,-2.56 v 3.59 z\"\n     style=\"fill:{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   data-name=\"Layer 1\"\n   viewBox=\"0 0 129.67 29.200001\">\n  <title\n     id=\"title489\">logo-5</title>\n  <path\n     d=\"m 31.27,6.85 h 3 V 21.3 h -3 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 35.95,16.35 a 5.25,5.25 0 1 1 5.22,5.25 5.18,5.18 0 0 1 -5.22,-5.25 z m 7.52,0 a 2.28,2.28 0 1 0 -2.28,2.34 2.22,2.22 0 0 0 2.26,-2.34 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 58.26,11.4 v 9.41 c 0,3.32 -2.6,4.73 -5.23,4.73 a 5,5 0 0 1 -4.69,-2.4 l 2.53,-1.46 a 2.27,2.27 0 0 0 2.26,1.25 2,2 0 0 0 2.24,-2.12 V 19.9 a 3.53,3.53 0 0 1 -2.89,1.28 5,5 0 0 1 0,-10 3.53,3.53 0 0 1 2.89,1.28 v -1 z m -2.89,4.75 a 2.4,2.4 0 1 0 -2.4,2.3 2.24,2.24 0 0 0 2.4,-2.3 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 59.95,16.35 a 5.25,5.25 0 1 1 5.24,5.25 5.19,5.19 0 0 1 -5.24,-5.25 z m 7.52,0 a 2.28,2.28 0 1 0 -2.27,2.34 2.22,2.22 0 0 0 2.26,-2.34 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 71.82,8.75 a 1.78,1.78 0 1 1 1.78,1.78 1.8,1.8 0 0 1 -1.78,-1.78 z m 0.29,2.65 h 3 v 9.9 h -3 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 87.95,16.35 a 5,5 0 0 1 -4.77,5.25 3.72,3.72 0 0 1 -3,-1.21 v 4.89 h -3 V 11.4 h 3 v 0.93 a 3.71,3.71 0 0 1 3,-1.2 5,5 0 0 1 4.77,5.22 z m -3,0 a 2.36,2.36 0 1 0 -2.35,2.42 2.26,2.26 0 0 0 2.35,-2.42 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 97.08,18.33 c 0,2.28 -2,3.25 -4.12,3.25 A 4.34,4.34 0 0 1 88.7,19.22 l 2.58,-1.46 a 1.62,1.62 0 0 0 1.67,1.17 c 0.71,0 1.07,-0.22 1.07,-0.62 0,-1.09 -4.87,-0.51 -4.87,-3.94 0,-2.16 1.82,-3.24 3.88,-3.24 a 4.34,4.34 0 0 1 3.92,2.11 l -2.58,1.36 a 1.46,1.46 0 0 0 -1.33,-0.87 c -0.52,0 -0.83,0.2 -0.83,0.55 0,1.14 4.87,0.39 4.87,4.05 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 107.95,11.4 v 9.9 h -3 v -0.93 a 3.41,3.41 0 0 1 -2.82,1.23 c -2,0 -3.71,-1.43 -3.71,-4.1 v -6.1 h 3 v 5.65 a 1.64,1.64 0 0 0 1.73,1.8 c 1.08,0 1.84,-0.64 1.84,-2 V 11.4 Z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 124.95,15.22 v 6.08 h -3 v -5.82 c 0,-1 -0.47,-1.62 -1.42,-1.62 -0.95,0 -1.55,0.69 -1.55,1.86 v 5.58 h -3 v -5.82 c 0,-1 -0.47,-1.62 -1.42,-1.62 -0.95,0 -1.55,0.69 -1.55,1.86 v 5.58 h -3 v -9.9 h 3 v 0.91 a 3.06,3.06 0 0 1 2.66,-1.18 2.93,2.93 0 0 1 2.59,1.3 3.26,3.26 0 0 1 2.87,-1.3 c 2.34,0 3.82,1.62 3.82,4.09 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"M 13.4,4.25 V 0 H 0 v 29.2 h 13.4 v -4.25 a 10.35,10.35 0 0 1 0,-20.7 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 13.4,4.25 v 20.7 a 10.35,10.35 0 0 0 0,-20.7 z\"\n     style=\"fill:{color}\" />\n  <circle\n     cx=\"127.47\"\n     cy=\"9.1400013\"\n     r=\"2.2\"\n     style=\"fill:{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   data-name=\"Layer 1\"\n   viewBox=\"0 0 118.77661 27.121178\">\n  <title\n     id=\"title577\">logo-5</title>\n  <path\n     d=\"m 34.398906,7.6411782 h 3 V 19.771178 h -3 z m 4.19,7.5499998 c 0,-3 1.84,-4.79 4.68,-4.79 2.84,0 4.68,1.79 4.68,4.79 0,3 -1.8,4.8 -4.68,4.8 -2.88,0 -4.68,-1.75 -4.68,-4.8 z m 6.35,0 c 0,-1.65 -0.65,-2.62 -1.67,-2.62 -1.02,0 -1.66,1 -1.66,2.62 0,1.62 0.63,2.6 1.66,2.6 1.03,0 1.67,-0.92 1.67,-2.59 z m 4.14,5.17 h 2.88 a 1.55,1.55 0 0 0 1.62,0.9 c 1.14,0 1.74,-0.62 1.74,-1.52 v -1.68 h -0.06 a 2.84,2.84 0 0 1 -2.73,1.64 c -2.19,0 -3.64,-1.67 -3.64,-4.54 0,-2.87 1.38,-4.68 3.68,-4.68 a 2.87,2.87 0 0 1 2.76,1.76 v 0 -1.67 h 3 v 9.1 c 0,2.19 -1.93,3.55 -4.78,3.55 -2.65,0 -4.3,-1.19 -4.47,-2.85 z m 6.25,-5.18 c 0,-1.46 -0.67,-2.38 -1.73,-2.38 -1.06,0 -1.71,0.91 -1.71,2.38 0,1.47 0.64,2.3 1.71,2.3 1.07,0 1.73,-0.81 1.73,-2.29 z m 4.13,0 c 0,-3 1.84,-4.79 4.68,-4.79 2.84,0 4.69,1.79 4.69,4.79 0,3 -1.8,4.8 -4.69,4.8 -2.89,0 -4.68,-1.74 -4.68,-4.79 z m 6.35,0 c 0,-1.65 -0.65,-2.62 -1.67,-2.62 -1.02,0 -1.61,1.01 -1.61,2.64 0,1.63 0.63,2.6 1.65,2.6 1.02,0 1.63,-0.93 1.63,-2.6 z m 4.16,-6.7899998 a 1.53,1.53 0 1 1 1.56,1.49 1.46,1.46 0 0 1 -1.56,-1.47 z m 0,2.1999998 h 3 v 9.18 h -3 z m 13.89,4.59 c 0,3 -1.33,4.71 -3.61,4.71 a 2.86,2.86 0 0 1 -2.8,-1.7 h -0.06 v 4.52 h -3 v -12.14 h 3 v 1.64 h 0.06 a 2.87,2.87 0 0 1 2.78,-1.77 c 2.3,0.04 3.67,1.76 3.67,4.76 z m -3,0 c 0,-1.46 -0.67,-2.39 -1.72,-2.39 -1.05,0 -1.72,0.94 -1.73,2.39 -0.01,1.45 0.68,2.38 1.73,2.38 1.05,0 1.72,-0.91 1.72,-2.36 z m 8.15,-4.8 c 2.49,0 4,1.18 4.07,3.07 h -2.73 c 0,-0.65 -0.54,-1.06 -1.37,-1.06 -0.83,0 -1.2,0.32 -1.2,0.79 0,0.47 0.33,0.62 1,0.76 l 1.92,0.39 c 1.83,0.39 2.61,1.13 2.61,2.52 0,1.9 -1.73,3.12 -4.28,3.12 -2.55,0 -4.22,-1.22 -4.35,-3.09 h 2.89 c 0.09,0.68 0.63,1.08 1.51,1.08 0.88,0 1.28,-0.29 1.28,-0.77 0,-0.48 -0.28,-0.58 -1,-0.73 l -1.73,-0.37 c -1.79,-0.37 -2.73,-1.32 -2.73,-2.72 0.02,-1.8 1.63,-2.97 4.11,-2.97 z m 14.310004,9.37 h -2.89 v -1.71 h -0.06 a 2.61,2.61 0 0 1 -2.660004,1.91 3.19,3.19 0 0 1 -3.36,-3.45 v -5.93 h 3 v 5.24 c 0,1.09 0.56,1.67 1.49,1.67 a 1.53,1.53 0 0 0 1.520004,-1.73 v -5.18 h 3 z m 1.45,-9.18 h 2.9 v 1.77 h 0.06 a 2.66,2.66 0 0 1 2.61,-1.94 2.39,2.39 0 0 1 2.55,2 h 0.06 a 2.82,2.82 0 0 1 2.82,-2 2.91,2.91 0 0 1 3,3.12 v 6.25 h -3 v -5.45 c 0,-1 -0.45,-1.46 -1.29,-1.46 a 1.31,1.31 0 0 0 -1.31,1.48 v 5.43 h -2.85 v -5.49 c 0,-0.92 -0.45,-1.42 -1.27,-1.42 a 1.34,1.34 0 0 0 -1.33,1.5 v 5.41 h -3 z\"\n     style=\"fill:{color}\" />\n  <path\n     d=\"m 26.008906,8.1911782 a 13.25,13.25 0 0 0 -2,-3.22 13.53,13.53 0 1 0 -18.6800001,19.3199998 13.09,13.09 0 0 0 3.2,1.83 13.39,13.39 0 0 0 5.0700001,1 13.56,13.56 0 0 0 13.53,-13.55 13.39,13.39 0 0 0 -1.12,-5.3799998 z m -12.42,-5.43 a 10.71,10.71 0 0 1 4.52,1 v 0 a 4.39,4.39 0 0 1 -1.08,0.31 5.73,5.73 0 0 0 -4.85,4.85 3,3 0 0 1 -2.7100001,2.6499998 5.73,5.73 0 0 0 -4.85,4.85 2.91,2.91 0 0 1 -0.79,1.74 v 0 A 10.8,10.8 0 0 1 13.598906,2.7411782 Z M 5.3189059,20.571178 c 0.12,-0.11 0.24,-0.21 0.36,-0.33 a 5.48,5.48 0 0 0 1.62,-3.23 2.92,2.92 0 0 1 0.87,-1.82 2.83,2.83 0 0 1 1.81,-0.86 5.73,5.73 0 0 0 4.8500001,-4.8499998 2.92,2.92 0 0 1 0.87,-1.91 2.87,2.87 0 0 1 1.83,-0.83 5.48,5.48 0 0 0 3,-1.43 10.51,10.51 0 0 1 2.36,2.78 0.86,0.86 0 0 1 -0.13,0.14 2.87,2.87 0 0 1 -1.81,0.88 5.71,5.71 0 0 0 -4.85,4.8499998 3,3 0 0 1 -2.69,2.68 5.76,5.76 0 0 0 -4.8800001,4.85 3.14,3.14 0 0 1 -0.49,1.37 10.89,10.89 0 0 1 -2.72,-2.29 z m 8.2700001,3.86 a 10.84,10.84 0 0 1 -3,-0.42 5.78,5.78 0 0 0 0.64,-2 3,3 0 0 1 2.68,-2.68 5.73,5.73 0 0 0 4.86,-4.85 3,3 0 0 1 2.68,-2.68 5.71,5.71 0 0 0 2.56,-1 10.82,10.82 0 0 1 -10.42,13.58 z\"\n     style=\"fill:{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 135.64589 26.666142\">\n  <path\n     d=\"m 20.348895,11.70297 a 3.656,3.656 0 0 0 -1.046,2.929 l -0.018,-0.018 a 4.344,4.344 0 0 1 -4.694,4.694 l 0.018,0.018 a 3.678,3.678 0 1 0 3.321,3.318 l 0.019,0.018 a 4.344,4.344 0 0 1 4.694,-4.694 l -0.019,-0.018 a 3.671,3.671 0 1 0 -2.272,-6.247 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 12.971895,16.96797 -0.019,-0.018 a 3.631,3.631 0 0 0 3.977,-3.974 l 0.019,0.018 a 4.344,4.344 0 0 1 4.694,-4.6940001 l -0.019,-0.018 a 3.678,3.678 0 1 0 -3.318,-3.318 l -0.018,-0.019 a 4.343,4.343 0 0 1 -4.694,4.694 l 0.018,0.019 A 3.631,3.631 0 0 0 9.6348948,13.63197 l -0.018,-0.018 a 4.345,4.345 0 0 1 -4.694,4.694 l 0.018,0.018 a 3.678,3.678 0 1 0 3.318,3.318 l 0.019,0.018 a 4.344,4.344 0 0 1 4.6940002,-4.694 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 6.2698948,14.96097 a 3.652,3.652 0 0 0 1.045,-2.929 l 0.019,0.018 A 4.344,4.344 0 0 1 12.029895,7.3559699 l -0.019,-0.018 a 3.677,3.677 0 1 0 -3.3180002,-3.318 l -0.018,-0.018 a 4.344,4.344 0 0 1 -4.694,4.694 l 0.018,0.018 a 3.671,3.671 0 1 0 2.273,6.2470001 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 37.246895,4.9869699 h 2.97 V 19.43997 h -2.97 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 41.898895,14.49097 a 5.247,5.247 0 1 1 5.247,5.226 5.188,5.188 0 0 1 -5.247,-5.226 z m 7.524,0 a 2.278,2.278 0 1 0 -2.277,2.341 2.221,2.221 0 0 0 2.277,-2.341 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 64.229895,9.5409699 V 18.94097 c 0,3.326 -2.594,4.732 -5.227,4.732 a 5.062,5.062 0 0 1 -4.692,-2.4 l 2.534,-1.465 a 2.262,2.262 0 0 0 2.257,1.247 1.973,1.973 0 0 0 2.237,-2.118 v -0.905 a 3.516,3.516 0 0 1 -2.891,1.287 5.031,5.031 0 0 1 0,-10.0570001 3.516,3.516 0 0 1 2.891,1.2870001 V 9.5389699 Z m -2.89,4.7510001 a 2.4,2.4 0 1 0 -2.395,2.3 2.24,2.24 0 0 0 2.395,-2.3 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 65.911895,14.49097 a 5.247,5.247 0 1 1 5.247,5.226 5.188,5.188 0 0 1 -5.247,-5.226 z m 7.524,0 a 2.278,2.278 0 1 0 -2.277,2.341 2.221,2.221 0 0 0 2.277,-2.341 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 77.790895,6.8879699 a 1.782,1.782 0 1 1 1.782,1.782 1.8,1.8 0 0 1 -1.782,-1.782 z m 0.3,2.653 h 2.971 V 19.44097 h -2.975 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 93.885895,14.49097 a 4.971,4.971 0 0 1 -4.732,5.226 3.715,3.715 0 0 1 -2.949,-1.208 v 4.891 h -2.97 V 9.5409699 h 2.97 V 10.47097 a 3.717,3.717 0 0 1 2.949,-1.2070001 4.97,4.97 0 0 1 4.732,5.2270001 z m -2.97,0 a 2.356,2.356 0 1 0 -2.355,2.415 2.26,2.26 0 0 0 2.355,-2.415 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 103.05089,16.46997 c 0,2.277 -1.979,3.247 -4.116995,3.247 a 4.335,4.335 0 0 1 -4.257,-2.356 l 2.573,-1.465 a 1.627,1.627 0 0 0 1.68,1.168 c 0.712,0 1.069,-0.218 1.069,-0.613 0,-1.09 -4.871,-0.515 -4.871,-3.94 0,-2.159 1.822,-3.2470001 3.881,-3.2470001 a 4.329,4.329 0 0 1 3.859995,2.1180001 l -2.534,1.366 a 1.437,1.437 0 0 0 -1.325995,-0.871 c -0.515,0 -0.832,0.2 -0.832,0.554 0.004,1.129 4.873995,0.376 4.873995,4.039 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 113.89989,9.5409699 V 19.44097 h -2.97 v -0.931 a 3.382,3.382 0 0 1 -2.83,1.208 c -2,0 -3.7,-1.425 -3.7,-4.1 V 9.5409699 h 2.97 V 15.18297 a 1.632,1.632 0 0 0 1.722,1.8 c 1.089,0 1.841,-0.633 1.841,-2.039 V 9.5439699 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 130.92989,13.36197 v 6.078 h -2.97 v -5.821 c 0,-0.99 -0.475,-1.623 -1.425,-1.623 -0.99,0 -1.545,0.693 -1.545,1.861 v 5.583 h -2.969 v -5.821 c 0,-0.99 -0.475,-1.623 -1.426,-1.623 -0.99,0 -1.544,0.693 -1.544,1.861 v 5.583 h -2.97 V 9.5399699 h 2.97 V 10.44997 a 3.039,3.039 0 0 1 2.653,-1.1870001 2.945,2.945 0 0 1 2.593,1.3060001 3.262,3.262 0 0 1 2.871,-1.3060001 c 2.273,10e-4 3.762,1.6240001 3.762,4.0990001 z\"\n     fill=\"{color}\" />\n  <circle\n     cx=\"133.44189\"\n     cy=\"7.27597\"\n     r=\"2.204\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 148.978 14.091\">\n  <path\n     d=\"m 74.193,13.889 h -5.12 V 0.201 h 5.12 z m -4.62,-0.5 h 4.12 V 0.701 h -4.12 z m 11.744,0.5 H 76.3 V 0.201 h 10.482 a 6.288,6.288 0 0 1 4.214,1.188 4.609,4.609 0 0 1 1.479,3.817 4.863,4.863 0 0 1 -1.089,3.375 c -0.917,1.052 -2.443,1.594 -4.535,1.613 -0.527,0.014 -4.476,0 -5.531,0 z m -4.52,-0.5 h 4.02 v -3.7 h 0.251 c 0.051,0 5.178,0.016 5.771,0 1.949,-0.017 3.35,-0.5 4.169,-1.443 v 0 A 4.391,4.391 0 0 0 91.968,5.205 4.145,4.145 0 0 0 90.668,1.772 5.827,5.827 0 0 0 86.775,0.7 H 76.8 Z M 85.72,7.119 H 80.783 V 3.393 h 4.97 a 2.111,2.111 0 0 1 1.9,0.727 2,2 0 0 1 0.282,1.153 2.123,2.123 0 0 1 -0.235,1.082 2.165,2.165 0 0 1 -1.98,0.76 z m -4.437,-0.5 h 4.437 c 0.82,0 1.328,-0.171 1.553,-0.523 A 1.66,1.66 0 0 0 87.436,5.273 1.552,1.552 0 0 0 87.25,4.415 L 87.244,4.406 C 87.006,4.056 86.533,3.893 85.753,3.893 h -4.47 z m 20.317,7.472 c -4.49,0 -7.17,-1.115 -8.191,-3.408 A 5.935,5.935 0 0 1 93.071,9.309 L 93.027,9.021 h 5.342 l 0.035,0.21 a 1.393,1.393 0 0 0 0.264,0.586 c 0.211,0.255 0.915,0.683 3.251,0.683 2.808,0 2.808,-0.493 2.808,-0.758 0,-0.447 -0.325,-0.6 -2.615,-0.844 L 101.677,8.857 C 100.815,8.776 99.725,8.673 99.227,8.63 95.027,8.25 93.152,6.945 93.152,4.4 c 0,-2.673 3.191,-4.4 8.13,-4.4 4.029,0 6.625,1.062 7.714,3.159 a 4.863,4.863 0 0 1 0.513,1.562 l 0.035,0.281 h -5.348 l -0.022,-0.226 a 0.855,0.855 0 0 0 -0.216,-0.474 c -0.2,-0.268 -0.832,-0.711 -2.794,-0.711 -2.409,0 -2.741,0.308 -2.741,0.64 0,0.443 0.761,0.6 3.2,0.861 1.017,0.083 2.652,0.251 3.212,0.319 3.521,0.382 5.092,1.655 5.092,4.129 10e-4,2.075 -1.444,4.551 -8.327,4.551 z m -7.989,-4.57 a 4.557,4.557 0 0 0 0.257,0.964 c 0.93,2.089 3.46,3.106 7.732,3.106 3.572,0 7.831,-0.7 7.831,-4.051 0,-2.193 -1.39,-3.279 -4.649,-3.632 -0.56,-0.068 -2.185,-0.235 -3.2,-0.319 -2.6,-0.282 -3.657,-0.432 -3.657,-1.358 0,-0.958 1.139,-1.14 3.241,-1.14 1.661,0 2.734,0.3 3.189,0.905 a 1.487,1.487 0 0 1 0.276,0.506 h 4.334 a 4.508,4.508 0 0 0 -0.41,-1.111 c -1,-1.919 -3.443,-2.891 -7.271,-2.891 -4.635,0 -7.63,1.531 -7.63,3.9 0,2.26 1.681,3.376 5.619,3.732 0.5,0.043 1.589,0.146 2.453,0.228 l 0.438,0.041 c 2.127,0.224 3.065,0.364 3.065,1.341 0,1.052 -1.213,1.258 -3.308,1.258 -1.938,0 -3.162,-0.291 -3.635,-0.864 A 1.852,1.852 0 0 1 97.962,9.521 Z m 25.816,4.553 c -5.22,0 -8.1,-2.111 -8.1,-5.945 V 0.201 h 5.052 v 7.928 c 0,1.315 1.177,2.069 3.228,2.069 1.96,0 3.177,-0.787 3.177,-2.052 V 0.201 h 5 v 8.348 c 0.005,3.511 -3.044,5.525 -8.36,5.525 z m -7.6,-13.373 v 7.428 c 0,4.738 4.758,5.445 7.6,5.445 2.938,0 7.865,-0.653 7.865,-5.025 V 0.701 h -4 v 7.445 c 0,1.55 -1.444,2.552 -3.677,2.552 -2.334,0 -3.728,-0.96 -3.728,-2.569 V 0.701 Z m 37.145,13.188 h -4.768 v -6.18 l -2.704,6.18 h -4.159 l -2.676,-6.168 v 6.168 H 129.88 V 0.201 h 6.294 l 3.27,7.547 3.428,-7.547 h 6.106 z m -4.268,-0.5 h 3.768 V 0.701 h -5.282 l -3.762,8.279 -3.586,-8.279 h -5.466 v 12.688 h 3.785 V 5.315 l 3.5,8.077 h 3.5 l 3.537,-8.065 z M 4.554,0.451 H 0 v 13.188 h 12.584 v -3.511 h -8.03 z m 17.222,-0.3 c -5.813,0 -8.87,2.755 -8.87,6.8 0,4.57 3.209,6.888 8.87,6.888 6.232,0 8.853,-2.688 8.853,-6.888 0,-4.265 -2.957,-6.802 -8.853,-6.802 z m -0.017,3.427 a 9.432,9.432 0 0 1 1.184,0.069 L 17.852,8.738 A 4.041,4.041 0 0 1 17.508,7.006 c 0,-2.069 1.042,-3.43 4.251,-3.43 z m 0.017,6.888 a 9.459,9.459 0 0 1 -1.141,-0.064 l 5.1,-5.1 a 3.973,3.973 0 0 1 0.325,1.7 c 0,2.013 -0.96,3.462 -4.284,3.462 z m 17.876,-1.8 h 4.687 a 2.14,2.14 0 0 1 -0.42,0.89 4.855,4.855 0 0 1 -3.461,1.075 4.412,4.412 0 0 1 -3.477,-1.159 3.733,3.733 0 0 1 -0.639,-2.369 3.647,3.647 0 0 1 0.689,-2.469 c 0.655,-0.74 1.764,-1.059 3.394,-1.059 a 4.626,4.626 0 0 1 2.94,0.756 1.8,1.8 0 0 1 0.588,0.84 H 48.3 A 4.48,4.48 0 0 0 47.913,3.592 C 46.872,1.475 44.452,0.215 40.337,0.215 c -3.579,0 -5.981,1.092 -7.308,2.739 A 6.569,6.569 0 0 0 31.752,7.07 6.932,6.932 0 0 0 33,11.305 c 1.311,1.7 3.646,2.536 6.452,2.536 a 8.062,8.062 0 0 0 5.241,-1.478 l 0.118,1.276 h 3.611 V 5.827 h -8.77 z M 58.671,0.148 c -5.812,0 -8.87,2.755 -8.87,6.8 0,4.57 3.208,6.888 8.87,6.888 6.233,0 8.854,-2.688 8.854,-6.888 0,-4.262 -2.957,-6.799 -8.854,-6.799 z m -0.016,3.427 a 9.607,9.607 0 0 1 1.153,0.066 L 54.737,8.715 A 4.057,4.057 0 0 1 54.404,7.006 C 54.4,4.937 55.446,3.576 58.655,3.576 Z m 0.016,6.888 A 9.432,9.432 0 0 1 57.5,10.395 l 5.117,-5.118 a 3.952,3.952 0 0 1 0.337,1.727 c 0.002,2.011 -0.954,3.46 -4.283,3.46 z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#394149';\n   export let color2 = '#ffffff';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 158.578 35.452999\">\n  <path\n     d=\"M 0,0 V 35.453 H 158.578 V 0 Z m 156.578,33.453 h -81 V 2 h 81 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"M 8.429,23.666 V 11.879 h 4.068 v 8.648 h 7.176 v 3.139 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 35.711,17.69 c 0,3.753 -2.342,6.156 -7.913,6.156 -5.06,0 -7.928,-2.072 -7.928,-6.156 0,-3.619 2.734,-6.081 7.928,-6.081 5.275,0 7.913,2.267 7.913,6.081 z m -4.084,0.045 c 0,-1.7 -0.706,-3.063 -3.844,-3.063 -2.868,0 -3.8,1.216 -3.8,3.063 0,1.877 0.855,3.093 3.813,3.093 2.977,0 3.831,-1.291 3.831,-3.093 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"M 48.295,23.666 48.19,22.524 a 7.2,7.2 0 0 1 -4.685,1.322 c -2.507,0 -4.595,-0.751 -5.766,-2.267 a 6.2,6.2 0 0 1 -1.111,-3.784 5.861,5.861 0 0 1 1.145,-3.679 c 1.185,-1.471 3.333,-2.447 6.531,-2.447 3.679,0 5.841,1.126 6.771,3.018 a 4.039,4.039 0 0 1 0.346,1.411 h -3.892 a 1.6,1.6 0 0 0 -0.525,-0.751 4.138,4.138 0 0 0 -2.628,-0.675 3.87,3.87 0 0 0 -3.033,0.946 3.259,3.259 0 0 0 -0.615,2.207 3.336,3.336 0 0 0 0.57,2.117 3.945,3.945 0 0 0 3.108,1.036 4.34,4.34 0 0 0 3.093,-0.961 1.886,1.886 0 0 0 0.375,-0.8 h -4.188 v -2.533 h 7.837 v 6.982 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 68.505,17.69 c 0,3.753 -2.343,6.156 -7.913,6.156 -5.06,0 -7.928,-2.072 -7.928,-6.156 0,-3.619 2.734,-6.081 7.928,-6.081 5.271,0 7.913,2.267 7.913,6.081 z m -4.084,0.045 c 0,-1.7 -0.706,-3.063 -3.844,-3.063 -2.868,0 -3.8,1.216 -3.8,3.063 0,1.877 0.856,3.093 3.813,3.093 2.976,0 3.831,-1.291 3.831,-3.093 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"M 82.43,23.621 V 11.834 h 2.9 v 11.787 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 100.222,18.696 c -0.735,0.961 -2,1.4 -3.783,1.411 -0.376,0 -5.361,-0.015 -5.361,-0.015 v 3.529 H 88.24 V 11.834 h 8.2 a 4.707,4.707 0 0 1 3.648,1.186 4.344,4.344 0 0 1 0.886,2.958 4.248,4.248 0 0 1 -0.752,2.718 z m -2.327,-3.843 c -0.3,-0.45 -0.947,-0.7 -2.042,-0.7 h -4.79 v 3.588 h 4.759 c 1.171,0 1.788,-0.24 2.073,-0.706 a 1.952,1.952 0 0 0 0.21,-1.066 2.279,2.279 0 0 0 -0.21,-1.116 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 109.337,23.801 c -5.346,0 -6.982,-2 -6.982,-3.979 h 3.033 c 0,0.976 1.336,1.712 4.084,1.712 2.732,0 3.453,-0.481 3.453,-1.262 0,-0.871 -0.54,-1.141 -3.078,-1.426 -0.5,-0.045 -1.861,-0.21 -2.372,-0.285 -3.6,-0.406 -4.986,-1.472 -4.986,-3.379 0,-2.012 2.028,-3.528 6.427,-3.528 4.775,0 6.607,1.877 6.607,3.829 h -3 c 0,-0.991 -1.126,-1.562 -3.784,-1.562 -2.733,0 -3.318,0.375 -3.318,1.111 0,0.766 0.6,1.006 3.5,1.351 0.661,0.091 2.132,0.256 2.537,0.3 3.064,0.315 4.445,1.426 4.445,3.393 -0.005,2.343 -2.107,3.725 -6.566,3.725 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 124.443,23.786 c -3.918,0 -6.471,-1.547 -6.471,-4.8 v -7.152 h 2.867 v 7.192 c 0,1.487 1.217,2.477 3.724,2.477 2.267,0 3.619,-0.93 3.619,-2.477 v -7.192 h 2.838 v 7.419 c 0,2.957 -2.373,4.533 -6.577,4.533 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 146.56,23.621 v -7.868 l -3.679,7.868 h -2.792 l -3.574,-7.868 v 7.868 h -2.7 V 11.834 h 3.658 l 4.054,8.979 4.144,-8.979 h 3.6 v 11.787 z\"\n     fill=\"{color1}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 113.896 25.65\">\n  <path\n     d=\"M 0,25.65 H 25.65 V 3.8986357e-8 H 0 Z M 20.713,10.357 h -5.42 v -5.42 h 5.42 z M 4.936,4.937 h 5.423 v 10.356 h 10.354 v 5.42 H 4.936 Z M 42.353,3.8986357e-8 A 12.825,12.825 0 1 0 55.178,12.825 12.84,12.84 0 0 0 42.353,3.8986357e-8 Z M 42.353,20.713 a 7.888,7.888 0 1 1 7.888,-7.888 7.9,7.9 0 0 1 -7.888,7.888 z M 101.072,3.8986357e-8 A 12.825,12.825 0 1 0 113.896,12.825 12.84,12.84 0 0 0 101.072,3.8986357e-8 Z M 101.072,20.713 a 7.888,7.888 0 1 1 7.887,-7.888 7.9,7.9 0 0 1 -7.887,7.888 z M 71.712,3.8986357e-8 A 12.825,12.825 0 1 0 84.537,12.825 12.84,12.84 0 0 0 71.712,3.8986357e-8 Z M 71.712,20.713 A 7.888,7.888 0 1 1 79.2,10.357 h -7.488 v 4.936 H 79.2 a 7.9,7.9 0 0 1 -7.488,5.42 z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#e9327c';\n   export let color2 = '#1dace3';\n   export let color3 = '001a49';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 133.8017 26.810577\">\n  <path\n     d=\"M 19.002696,22.189281 1.0626964,9.8142813 c -1.81799998,-1.254 -1.19999998,-3.865 1.067,-4.479 L 21.196696,0.16028127 a 2.7,2.7 0 0 1 3.616,2.49200003 l -1.13,17.5489997 c -0.134,2.083 -2.862,3.242 -4.68,1.988 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"M 13.312696,25.244281 2.7436964,4.5752813 a 2.883,2.883 0 0 1 3.007,-4.16100003 L 25.337696,3.4372813 a 2.883,2.883 0 0 1 2.127,4.162 l -9.023,17.6459997 a 2.883,2.883 0 0 1 -5.129,-10e-4 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 24.764696,3.3482813 -9.764,-1.507 -11.9879996,3.255 4.785,9.3609997 11.2049996,7.732 a 2.888,2.888 0 0 0 0.806,0.383 l 4.256,-8.323 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 74.221696,5.7642813 a 1.835,1.835 0 1 1 1.835,1.835 1.854,1.854 0 0 1 -1.835,-1.835 z m 0.306,2.732 h 3.059 V 18.690281 h -3.059 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 90.796696,13.593281 a 5.119,5.119 0 0 1 -4.872,5.383 3.829,3.829 0 0 1 -3.038,-1.244 v 5.036 h -3.058 V 8.4962813 h 3.058 v 0.958 a 3.829,3.829 0 0 1 3.038,-1.243 5.118,5.118 0 0 1 4.872,5.3819997 z m -3.058,0 a 2.427,2.427 0 1 0 -2.426,2.488 2.327,2.327 0 0 0 2.426,-2.488 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 100.2357,15.630281 c 0,2.345 -2.039004,3.344 -4.241004,3.344 a 4.463,4.463 0 0 1 -4.383,-2.427 l 2.65,-1.508 a 1.675,1.675 0 0 0 1.733,1.2 c 0.734,0 1.1,-0.225 1.1,-0.632 0,-1.122 -5.015,-0.53 -5.015,-4.058 0,-2.2219997 1.875,-3.3429997 4,-3.3429997 a 4.46,4.46 0 0 1 3.975004,2.1809997 l -2.609004,1.407 a 1.481,1.481 0 0 0 -1.366,-0.9 c -0.53,0 -0.856,0.2 -0.856,0.571 -0.003,1.17 5.012004,0.395 5.012004,4.165 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"M 111.4127,8.4962813 V 18.690281 h -3.058 v -0.96 a 3.489,3.489 0 0 1 -2.916,1.244 c -2.059,0 -3.812,-1.468 -3.812,-4.221 V 8.4962813 h 3.058 v 5.8109997 a 1.681,1.681 0 0 0 1.774,1.855 c 1.121,0 1.9,-0.652 1.9,-2.1 V 8.4962813 Z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 128.9407,12.430281 v 6.26 h -3.058 v -5.994 c 0,-1.019 -0.49,-1.672 -1.468,-1.672 -1.02,0 -1.59,0.714 -1.59,1.917 v 5.749 h -3.059 v -5.994 c 0,-1.019 -0.489,-1.672 -1.468,-1.672 -1.019,0 -1.59,0.714 -1.59,1.917 v 5.749 h -3.058 V 8.4962813 h 3.063 v 0.934 a 3.129,3.129 0 0 1 2.732,-1.223 3.034,3.034 0 0 1 2.671,1.345 3.359,3.359 0 0 1 2.957,-1.345 c 2.34,0.004 3.868,1.675 3.868,4.2229997 z\"\n     fill=\"{color3}\" />\n  <circle\n     cx=\"131.53169\"\n     cy=\"6.1632829\"\n     r=\"2.27\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 32.469696,3.8072813 h 3.059 V 18.690281 h -3.059 z m 4.791,9.7859997 a 5.4,5.4 0 1 1 5.4,5.383 5.343,5.343 0 0 1 -5.4,-5.383 z m 7.748,0 a 2.345,2.345 0 1 0 -2.345,2.406 2.287,2.287 0 0 0 2.349,-2.406 z m 15.249,-5.0999997 v 9.6849997 c 0,3.425 -2.671,4.872 -5.382,4.872 a 5.212,5.212 0 0 1 -4.832,-2.467 l 2.609,-1.509 a 2.331,2.331 0 0 0 2.325,1.285 2.032,2.032 0 0 0 2.3,-2.181 v -0.938 a 3.622,3.622 0 0 1 -2.977,1.325 5.181,5.181 0 0 1 0,-10.3569997 3.622,3.622 0 0 1 2.977,1.325 v -1.04 z m -2.976,4.8929997 a 2.47,2.47 0 1 0 -2.469,2.369 2.308,2.308 0 0 0 2.469,-2.366 z m 4.708,0.2 a 5.4,5.4 0 1 1 5.4,5.383 5.343,5.343 0 0 1 -5.4,-5.376 z m 7.748,0 a 2.346,2.346 0 1 0 -2.345,2.406 2.287,2.287 0 0 0 2.345,-2.399 z\"\n     fill=\"{color3}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#442781';\n   export let color2 = '#ff7917';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 45.031601 45\"\n   fill=\"none\">\n  <path\n     d=\"m 0,27.7899 c 0,-2.2601 0.4451,-4.498 1.31,-6.586 0.8649,-2.088 2.1326,-3.9852 3.7307,-5.5833 1.5981,-1.5982 3.4953,-2.8658 5.5833,-3.7307 2.088,-0.8649 4.326,-1.3101 6.586,-1.3101 v 17.2101 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 0,27.7899 c 0,2.2601 0.4451,4.498 1.31,6.586 0.8649,2.0881 2.1326,3.9853 3.7307,5.5834 1.5981,1.5981 3.4953,2.8658 5.5833,3.7306 C 12.712,44.5549 14.95,45 17.21,45 V 27.7899 Z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 34.4196,27.7899 c 0,2.2601 -0.4446,4.498 -1.3094,6.586 -0.8649,2.0881 -2.1326,3.9853 -3.7309,5.5834 -1.5981,1.5981 -3.4954,2.8658 -5.5834,3.7306 C 21.7079,44.5549 19.47,45 17.2099,45 V 27.7899 Z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 45.0316,12.922 c 0,7.1366 -5.786,12.922 -12.9224,12.922 H 19.1872 V 12.922 C 19.1872,5.7854 24.9726,0 32.1092,0 39.2456,0 45.0316,5.7854 45.0316,12.922 Z\"\n     fill=\"{color2}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#68dbff';\n   export let color2 = '#5d2c02';\n   export let color3 = '#ff7917';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 69.264297 45\"\n   fill=\"none\">\n  <path\n     d=\"M 45,22.5 C 45,34.9264 34.9264,45 22.5,45 10.0736,45 0,34.9264 0,22.5 0,10.0736 10.0736,0 22.5,0 34.9264,0 45,10.0736 45,22.5 Z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 69.2643,22.5 c 0,12.4264 -9.975,22.5 -22.279,22.5 C 34.6806,45 24.7058,34.9264 24.7058,22.5 24.7058,10.0736 34.6806,0 46.9853,0 c 12.304,0 22.279,10.0736 22.279,22.5 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 34.8028,41.3416 c 6.1404,-4.0176 10.1971,-10.9558 10.1971,-18.8415 0,-7.8857 -4.0567,-14.8239 -10.1971,-18.8415 -6.0801,4.0176 -10.097,10.9558 -10.097,18.8415 0,7.8857 4.0169,14.8239 10.097,18.8415 z\"\n     fill=\"{color2}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#17cf97';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 45 45\"\n   fill=\"none\">\n  <path\n     d=\"m 22.5,11.25 c 0,6.2132 -5.0368,11.25 -11.25,11.25 H 0 V 11.25 C 0,5.0368 5.0368,0 11.25,0 17.4632,0 22.5,5.0368 22.5,11.25 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 22.5,33.75 C 22.5,27.5368 27.5368,22.5 33.75,22.5 H 45 V 33.75 C 45,39.9632 39.963,45 33.75,45 27.5368,45 22.5,39.9632 22.5,33.75 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 0,33.75 C 0,39.9632 5.0368,45 11.25,45 H 22.5 V 33.75 C 22.5,27.5368 17.4632,22.5 11.25,22.5 5.0368,22.5 0,27.5368 0,33.75 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 45,11.25 C 45,5.0368 39.963,0 33.75,0 H 22.5 v 11.25 c 0,6.2132 5.0368,11.25 11.25,11.25 C 39.963,22.5 45,17.4632 45,11.25 Z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#ffd200';\n   export let color2 = '#06e07f';\n   export let color3 = '#e3073c';\n   export let color4 = '#1f84ef';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 104.5222 38.224201\"\n   fill=\"none\">\n  <path\n     d=\"M 62.6927,8.6526 C 59.9495,5.9094 56.6928,3.7333 53.1087,2.2487 49.5245,0.7641 45.6831,0 41.8036,0 37.9241,0 34.0827,0.7641 30.4985,2.2487 26.9144,3.7333 23.6577,5.9094 20.9145,8.6526 l 20.8891,20.889 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 41.8298,29.5717 c 2.7432,2.7432 5.9998,4.9192 9.584,6.4038 3.5841,1.4846 7.4256,2.2487 11.3051,2.2487 3.8793,0 7.7213,-0.7641 11.3053,-2.2487 3.584,-1.4846 6.841,-3.6606 9.584,-6.4038 L 62.7189,8.6826 Z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 41.7782,29.5671 c -2.7432,2.7432 -5.9999,4.9192 -9.584,6.4038 -3.5842,1.4846 -7.4256,2.2487 -11.3051,2.2487 -3.8795,0 -7.7209,-0.7641 -11.3051,-2.2487 C 5.9999,34.4863 2.7432,32.3103 0,29.5671 L 20.8891,8.678 Z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 62.7443,8.6572 c 2.7429,-2.7432 5.9999,-4.9192 9.5839,-6.4038 3.584,-1.4846 7.426,-2.2487 11.305,-2.2487 3.88,0 7.721,0.7641 11.305,2.2487 3.584,1.4846 6.841,3.6606 9.584,6.4038 l -20.889,20.8891 z\"\n     fill=\"{color4}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#0f52ff';\n   export let color2 = '#5bd0f4';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 122.74 35\"\n   fill=\"none\">\n  <path\n     d=\"M 17.5,0 C 15.2019,0 12.9262,0.4527 10.803,1.3321 8.6798,2.2116 6.7507,3.5006 5.1256,5.1256 3.5006,6.7507 2.2116,8.6798 1.3321,10.803 0.4527,12.9262 0,15.2019 0,17.5 c 0,2.2981 0.4527,4.5738 1.3321,6.697 0.8795,2.1232 2.1685,4.0523 3.7935,5.6774 1.6251,1.625 3.5542,2.914 5.6774,3.7935 C 12.9262,34.5473 15.2019,35 17.5,35 v -8.75 c -1.1491,0 -2.2869,-0.2263 -3.3485,-0.6661 C 13.0899,25.1442 12.1253,24.4997 11.3128,23.6872 10.5003,22.8747 9.8558,21.9101 9.4161,20.8485 8.9763,19.7869 8.75,18.6491 8.75,17.5 c 0,-1.1491 0.2263,-2.2869 0.6661,-3.3485 0.4397,-1.0616 1.0842,-2.0262 1.8967,-2.8387 0.8125,-0.8125 1.7771,-1.457 2.8387,-1.8967 C 15.2131,8.9763 16.3509,8.75 17.5,8.75 Z\"\n     fill=\"{color1}\" />\n  <circle\n     cx=\"17.500099\"\n     cy=\"17.5\"\n     r=\"5.8333302\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 0,17.5 c 0,2.2981 0.4527,4.5738 1.3321,6.697 0.8795,2.1232 2.1685,4.0523 3.7935,5.6774 1.6251,1.625 3.5542,2.914 5.6774,3.7935 C 12.9262,34.5473 15.2019,35 17.5,35 c 2.2981,0 4.5738,-0.4527 6.697,-1.3321 2.1232,-0.8795 4.0523,-2.1685 5.6774,-3.7935 1.625,-1.6251 2.914,-3.5542 3.7935,-5.6774 C 34.5473,22.0738 35,19.7981 35,17.5 h -8.75 c 0,1.1491 -0.2263,2.2869 -0.6661,3.3485 -0.4397,1.0616 -1.0842,2.0262 -1.8967,2.8387 -0.8125,0.8125 -1.7771,1.457 -2.8387,1.8967 C 19.7869,26.0237 18.6491,26.25 17.5,26.25 16.3509,26.25 15.2131,26.0237 14.1515,25.5839 13.0899,25.1442 12.1253,24.4997 11.3128,23.6872 10.5003,22.8747 9.8558,21.9101 9.4161,20.8485 8.9763,19.7869 8.75,18.6491 8.75,17.5 Z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 23.3334,17.5 c 0,-1.5471 -0.6146,-3.0308 -1.7085,-4.1248 -1.094,-1.094 -2.5777,-1.7086 -4.1248,-1.7086 -1.5471,0 -3.0308,0.6146 -4.1248,1.7086 -1.094,1.094 -1.7086,2.5777 -1.7086,4.1248 h 5.8334 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"M 44.1396,10.925 H 41.9661 V 23 h 2.1735 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 45.5589,18.722 c 0,2.7945 1.932,4.5195 4.485,4.5195 2.553,0 4.485,-1.725 4.485,-4.5195 0,-2.7945 -1.932,-4.5195 -4.485,-4.5195 -2.553,0 -4.485,1.725 -4.485,4.5195 z m 2.1735,0 c 0,-1.656 0.966,-2.622 2.3115,-2.622 1.3455,0 2.3115,0.966 2.3115,2.622 0,1.656 -0.966,2.622 -2.3115,2.622 -1.3455,0 -2.3115,-0.966 -2.3115,-2.622 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 62.296,14.444 v 1.1557 h -0.1725 c -0.5175,-0.7417 -1.3455,-1.3972 -2.829,-1.3972 -2.0355,0 -3.864,1.725 -3.864,4.3815 0,2.6565 1.8285,4.3815 3.864,4.3815 1.4835,0 2.3115,-0.6728 2.7945,-1.3455 h 0.1725 v 0.828 c 0,1.656 -0.966,2.415 -2.3805,2.415 -1.4145,0 -2.139,-0.759 -2.4323,-1.7423 l -1.9492,0.8453 c 0.4485,1.2937 1.7595,2.7255 4.416,2.7255 2.7255,0 4.5195,-1.4318 4.5195,-4.1918 V 14.444 Z m -2.346,6.6585 c -1.3455,0 -2.346,-0.966 -2.346,-2.5185 0,-1.5525 1.0005,-2.5185 2.346,-2.5185 1.3455,0 2.346,0.966 2.346,2.5185 0,1.5525 -1.0005,2.5185 -2.346,2.5185 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 65.8411,18.722 c 0,2.7945 1.932,4.5195 4.485,4.5195 2.553,0 4.4849,-1.725 4.4849,-4.5195 0,-2.7945 -1.9319,-4.5195 -4.4849,-4.5195 -2.553,0 -4.485,1.725 -4.485,4.5195 z m 2.1735,0 c 0,-1.656 0.966,-2.622 2.3115,-2.622 1.3455,0 2.3115,0.966 2.3115,2.622 0,1.656 -0.966,2.622 -2.3115,2.622 -1.3455,0 -2.3115,-0.966 -2.3115,-2.622 z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"m 76.517,11.96 c 0,0.8798 0.673,1.4835 1.536,1.4835 0.862,0 1.535,-0.6037 1.535,-1.4835 0,-0.8797 -0.673,-1.4835 -1.535,-1.4835 -0.863,0 -1.536,0.6038 -1.536,1.4835 z m 2.622,2.484 H 76.966 V 23 h 2.173 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 81.076,26.45 h 2.174 v -4.554 h 0.172 c 0.483,0.69 1.311,1.3455 2.795,1.3455 2.035,0 3.864,-1.725 3.864,-4.5195 0,-2.7945 -1.829,-4.5195 -3.864,-4.5195 -1.484,0 -2.312,0.6555 -2.829,1.3973 H 83.215 V 14.444 h -2.139 z m 4.485,-5.0715 c -1.345,0 -2.346,-0.966 -2.346,-2.6565 0,-1.6905 1.001,-2.6565 2.346,-2.6565 1.346,0 2.346,0.966 2.346,2.6565 0,1.6905 -1,2.6565 -2.346,2.6565 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 91.349,16.8418 c 0,1.6905 1.414,2.3115 3.208,2.6565 l 0.449,0.0862 c 1.069,0.207 1.552,0.4658 1.552,1.0178 0,0.552 -0.483,0.9832 -1.483,0.9832 -1.001,0 -1.811,-0.414 -2.036,-1.656 l -2.001,0.5175 c 0.294,1.794 1.794,2.7945 4.037,2.7945 2.173,0 3.588,-1.0177 3.588,-2.8117 0,-1.7941 -1.449,-2.277 -3.381,-2.6565 L 94.833,17.687 c -0.897,-0.1725 -1.38,-0.414 -1.38,-0.9832 0,-0.5175 0.449,-0.8453 1.277,-0.8453 0.828,0 1.414,0.345 1.621,1.2765 l 1.967,-0.6037 c -0.414,-1.38 -1.673,-2.3288 -3.588,-2.3288 -2.036,0 -3.381,0.9488 -3.381,2.6393 z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 108.426,23 v -8.556 h -2.173 v 4.416 c 0,1.587 -0.776,2.5185 -2.105,2.5185 -1.173,0 -1.828,-0.6382 -1.828,-1.932 V 14.444 h -2.174 v 5.106 c 0,2.1218 1.329,3.588 3.33,3.588 1.569,0 2.294,-0.69 2.639,-1.4145 h 0.172 V 23 Z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"M 110.354,14.444 V 23 h 2.174 v -5.106 c 0,-1.173 0.552,-1.8285 1.552,-1.8285 0.863,0 1.38,0.483 1.38,1.4145 V 23 h 2.174 v -5.106 c 0,-1.173 0.552,-1.8285 1.552,-1.8285 0.863,0 1.38,0.483 1.38,1.4145 V 23 h 2.174 v -5.6235 c 0,-2.07 -1.277,-3.0705 -2.864,-3.0705 -1.397,0 -2.035,0.621 -2.449,1.3455 h -0.173 c -0.397,-0.8107 -1.104,-1.3455 -2.346,-1.3455 -1.242,0 -1.915,0.552 -2.242,1.2075 h -0.173 V 14.444 Z\"\n     fill=\"{color2}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 141.726 58\"\n   fill=\"none\">\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 29,0 h 83.726 c 16.016,0 29,12.9837 29,29 0,16.0163 -12.984,29 -29,29 H 29 C 12.9837,58 0,45.0163 0,29 0,12.9837 12.9837,0 29,0 Z m 0,2.8065 C 14.5337,2.8065 2.8065,14.5337 2.8065,29 2.8065,43.4663 14.5337,55.1936 29,55.1936 h 83.726 c 14.466,0 26.193,-11.7273 26.193,-26.1936 0,-14.4663 -11.727,-26.1935 -26.193,-26.1935 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 119.597,44.1597 c 2.106,-3.7388 3.497,-9.0929 3.497,-15.1597 0,-6.0668 -1.391,-11.4208 -3.497,-15.1597 -2.156,-3.826 -4.695,-5.4209 -6.871,-5.4209 -2.176,0 -4.716,1.5949 -6.871,5.4209 -2.106,3.7389 -3.497,9.0929 -3.497,15.1597 0,6.0668 1.391,11.4209 3.497,15.1597 2.155,3.8261 4.695,5.421 6.871,5.421 2.176,0 4.715,-1.5949 6.871,-5.421 z m -6.871,8.2274 c 7.276,0 13.175,-10.4707 13.175,-23.3871 0,-12.9163 -5.899,-23.3871 -13.175,-23.3871 -7.276,0 -13.175,10.4708 -13.175,23.3871 0,12.9164 5.899,23.3871 13.175,23.3871 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"M 111.323,50.2043 V 7.328 h 2.806 v 42.8763 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 70.7299,18.4544 c 0.6045,-0.0085 1.1185,-0.1215 1.1101,-0.7429 v -0.0932 c 0.0084,-0.6186 -0.5056,-0.7316 -1.1101,-0.74 -0.6072,0.0084 -1.1213,0.1214 -1.1128,0.74 v 0.0932 c -0.0085,0.6214 0.5056,0.7344 1.1128,0.7429 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 48.3058,16.8811 c 0.1808,0 0.3248,0.144 0.3248,0.3248 0,0.0876 -0.0311,0.1638 -0.096,0.2288 -0.0622,0.0621 -0.1384,0.0932 -0.2288,0.0932 h -1.8049 v -0.6468 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 58.7905,16.8726 0.5198,1.1214 H 58.268 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 82.5,17.994 81.9801,16.8726 81.4576,17.994 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 45.0566,40.4855 -0.7682,-1.6576 -0.7725,1.6576 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 62.297,41.0367 c 0.5678,0 0.8893,-0.4635 0.8893,-1.0272 0,-0.5678 -0.3215,-1.0271 -0.8893,-1.0271 h -2.3967 v 2.0543 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 69.2574,38.8279 0.7683,1.6576 h -1.5408 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 79.0738,39.3206 c 0,-0.2672 -0.2129,-0.4802 -0.4801,-0.4802 h -2.6681 v 0.9562 h 2.6681 c 0.1336,0 0.2463,-0.0459 0.3382,-0.1378 0.096,-0.096 0.1419,-0.2088 0.1419,-0.3382 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 87.421,40.0095 c 0,0.5637 -0.322,1.0272 -0.89,1.0272 h -2.397 v -2.0543 h 2.397 c 0.568,0 0.89,0.4593 0.89,1.0271 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 32.1274,23.118 2.7846,6.4292 2.9211,-6.4292 h 4.6274 v 10.7153 h -3.4671 v -5.7876 l -2.5389,5.7876 h -3.1123 l -2.5116,-5.7876 v 5.7876 H 27.3499 V 23.118 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 56.6667,33.8333 v -2.6618 h -7.685 v -1.3923 h 7.3711 v -2.6071 h -7.3711 v -1.3787 h 7.5895 V 23.118 H 45.3781 v 10.7153 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 64.8445,33.9971 c -2.2796,0 -4.1769,-0.6825 -5.2416,-2.0612 -0.6279,-0.8053 -1.0101,-2.0202 -1.0101,-3.4398 0,-1.2831 0.3276,-2.4297 1.0374,-3.3442 1.0783,-1.3378 3.0303,-2.225 5.9378,-2.225 3.3442,0 5.3098,1.0237 6.1561,2.7437 0.1206,0.2496 0.2085,0.5591 0.2605,0.8392 0.0304,0.1639 0.0485,0.3179 0.0535,0.4439 h -3.5354 c -0.0409,-0.1911 -0.232,-0.4778 -0.4777,-0.6825 -0.3822,-0.3413 -1.2012,-0.6143 -2.3888,-0.6143 -1.3241,0 -2.225,0.2594 -2.7573,0.86 -0.3686,0.4231 -0.5597,1.0647 -0.5597,2.0065 0,0.9009 0.1911,1.5015 0.5187,1.9247 0.4914,0.5733 1.406,0.9418 2.8256,0.9418 1.365,0 2.4161,-0.4095 2.8119,-0.8736 0.0682,-0.0787 0.1304,-0.1775 0.1826,-0.2795 0.0837,-0.1633 0.1419,-0.3347 0.1587,-0.4439 H 65.0083 V 27.486 h 7.1253 v 6.3473 h -2.9347 l -0.0956,-1.0374 c -0.1283,0.1062 -0.2675,0.2072 -0.4179,0.3021 -0.8742,0.5514 -2.129,0.8991 -3.8409,0.8991 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 62.7631,28.5234 c 0,-0.8907 0.1821,-1.4058 0.4493,-1.7135 0.4019,-0.4523 1.1352,-0.7091 2.4238,-0.7091 1.1458,0 1.8314,0.2678 2.0931,0.5015 l 0.0057,0.005 0.0058,0.0049 c 0.09,0.075 0.1723,0.1674 0.2345,0.2575 0.0615,0.089 0.0861,0.1508 0.0922,0.1724 h -3.5031 v 3.1947 h 3.5659 c -0.1277,0.1443 -0.4018,0.3244 -0.8373,0.4691 -0.4335,0.144 -0.9898,0.2401 -1.6295,0.2401 -1.3488,0 -2.1074,-0.3491 -2.4813,-0.7785 -0.2444,-0.3204 -0.4191,-0.8118 -0.4191,-1.6441 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 80.3902,29.0077 1.017,-1.9416 0.9608,1.9416 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 84.243,31.854 0.942,1.9793 H 89.13 L 83.724,23.118 h -4.4087 l -5.7194,10.7153 h 3.863 l 0.9964,-1.9793 z m -4.5865,-2.4024 1.3514,-2.5798 0.4095,-0.9828 0.3822,0.9691 1.2834,2.5935 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 29,52.3871 c -7.3676,0 -13.9395,-3.4069 -18.2262,-8.7311 H 23.0752 V 42.0968 H 9.6212 C 7.6141,39.1328 6.2692,35.6839 5.7988,31.9624 H 23.0752 V 30.4033 H 5.6543 C 5.6268,29.939 5.6129,29.4711 5.6129,29 c 0,-3.0866 0.5979,-6.0334 1.6843,-8.7312 h 15.778 V 18.7097 H 7.9926 c 1.6528,-3.3678 4.0915,-6.28 7.0772,-8.4973 H 98.796 C 93.057,14.4742 89.339,21.3028 89.339,29 c 0,4.8526 1.478,9.3601 4.008,13.0968 h -1.436 v 1.5591 h 2.588 c 4.242,5.2679 10.72,8.6588 17.993,8.73 v 0.0012 z M 68.137,17.5279 c -0.0057,-1.4377 1.1637,-1.8501 2.5929,-1.8529 1.4292,0 2.5901,0.418 2.5901,1.8529 v 0.2768 c 0.0057,1.4349 -1.1637,1.8501 -2.5901,1.8529 -1.4292,-0.0028 -2.5986,-0.418 -2.5929,-1.8529 z m -41.8091,2.0365 v -3.7962 h 1.4801 v 3.7962 z m 4.3018,-3.7962 1.6665,2.0111 v -2.0111 h 1.4829 v 3.7962 h -1.6665 l -2.0393,-2.3189 v 2.3189 h -1.4801 v -3.7962 z m 6.9032,3.8019 v -2.593 h 1.7597 v -1.2032 h -4.9994 v 1.2032 h 1.7597 v 2.593 z m 6.6999,0 h -4.443 v -3.7962 h 4.443 v 0.9716 h -2.963 v 0.4858 h 2.963 v 0.8785 h -2.963 v 0.4858 h 2.963 z m 0.788,-3.7991 v 3.7962 h 1.4801 v -0.9264 h 1.3219 l 0.7146,0.9264 h 1.5761 l -0.8276,-1.0648 c 0.2486,-0.1158 0.4491,-0.291 0.5988,-0.5197 0.1525,-0.2317 0.2288,-0.4915 0.2288,-0.7768 0.0113,-0.7852 -0.6525,-1.4433 -1.4349,-1.4349 z m 7.5896,-0.0028 1.6665,2.0111 v -2.0111 h 1.4829 v 3.7962 H 54.0933 L 52.054,17.2455 v 2.3189 h -1.4801 v -3.7962 z m 3.2624,3.8019 h 1.6665 l 0.2994,-0.6497 h 1.9009 l 0.2994,0.6497 h 1.6665 L 59.669,15.7739 h -1.7597 z m 8.0923,-2.593 v 2.593 h -1.48 v -2.593 h -1.7597 v -1.2032 h 4.9994 v 1.2032 z m 2.2568,-1.2089 v 3.7962 H 67.702 V 15.7682 Z M 77.4665,17.7793 75.8,15.7682 h -2.0365 v 3.7962 h 1.4801 v -2.3189 l 2.0393,2.3189 h 1.6665 v -3.7962 h -1.4829 z m 3.2623,1.7908 h -1.6664 l 2.0365,-3.7962 h 1.7601 l 2.036,3.7962 h -1.666 l -0.3,-0.6497 h -1.9007 z m 4.2822,-3.8019 v 3.7962 h 4.443 V 18.3611 H 86.491 V 15.7682 Z M 28.6472,39.045 c 0,-0.4467 0.8351,-0.547 1.5157,-0.547 0.6848,0 1.2651,0.1044 1.5157,0.547 h 2.2923 c -0.2088,-1.7537 -1.8414,-1.975 -3.808,-1.9875 -1.9708,0 -3.808,0.3842 -3.808,1.9875 -0.0042,1.4001 2.1871,1.5111 3.7523,1.5904 l 0.0098,5e-4 c 0.881,0.0417 1.5616,0.0793 1.5616,0.3256 0,0.4343 -0.8351,0.547 -1.5157,0.547 -0.6848,0 -1.2652,-0.1127 -1.5157,-0.547 h -2.2923 c 0.2088,1.7412 1.8414,1.9792 3.808,1.9834 1.9708,0 3.808,-0.38 3.808,-1.9834 0.0041,-1.4042 -2.1872,-1.5152 -3.7524,-1.5945 l -0.0097,-5e-4 c -0.881,-0.0417 -1.5616,-0.0751 -1.5616,-0.3215 z m 10.1797,3.7704 v -3.833 h 2.6013 v -1.7787 h -7.3905 v 1.7787 h 2.6013 v 3.833 z m 3.6117,0 h -2.4635 l 3.0105,-5.6117 h 2.6013 l 3.0105,5.6117 h -2.4635 l -0.4426,-0.9603 h -2.8101 z m 11.804,-2.6472 -2.4635,-2.9729 h -3.0105 v 5.6118 h 2.1879 v -3.428 l 3.0147,3.428 h 2.4635 v -5.6118 h -2.1921 z m 3.4697,2.6472 v -5.6117 h 4.9939 c 1.5407,-0.0209 2.6848,1.2735 2.6722,2.8058 0.0126,1.5241 -1.1315,2.8268 -2.6722,2.8059 z m 7.2319,0 h 2.4635 l 0.4426,-0.9603 h 2.81 l 0.4426,0.9603 h 2.4635 L 70.556,37.2037 h -2.6013 z m 8.7934,-0.0041 v -5.6118 h 5.4072 c 1.1566,-0.0125 2.1378,0.9603 2.1211,2.1211 0,0.4217 -0.1127,0.8059 -0.3382,1.1482 -0.2213,0.3383 -0.5177,0.5971 -0.8852,0.7683 l 1.2234,1.5742 H 78.936 l -1.0563,-1.3696 h -1.9541 v 1.3696 z m 8.2089,-5.6076 v 5.6117 H 86.94 c 1.541,0.0209 2.685,-1.2818 2.673,-2.8059 0.012,-1.5323 -1.132,-2.8267 -2.673,-2.8058 z m -43.397,-2.9265 h 4.3549 V 22.6741 h -5.3572 l -2.6255,5.7786 -2.5028,-5.7786 H 26.906 v 11.6031 h 4.3685 v -4.0935 l 1.7765,4.0935 h 3.6935 l 1.805,-4.1146 z m 6.3847,0 h 12.1764 v -3.5496 h -7.685 v -0.5045 h 7.3711 v -3.4949 h -7.3711 v -0.4909 h 7.5895 V 22.6741 H 44.9342 Z m 23.8598,0 h 3.7836 v -7.2351 h -0.0917 l -0.0043,-0.1062 c -0.0156,-0.391 -0.1357,-0.9985 -0.3577,-1.4583 l -7e-4,-0.0015 -8e-4,-0.0015 C 71.1676,23.534 68.9879,22.483 65.568,22.483 c -2.9922,0 -5.094,0.9147 -6.2834,2.3903 l -0.0026,0.0031 -0.0025,0.0033 c -0.783,1.0088 -1.1306,2.2577 -1.1306,3.6164 0,1.4913 0.4003,2.81 1.1033,3.7121 1.1817,1.5293 3.2401,2.2328 5.5923,2.2328 1.6535,0 2.9375,-0.314 3.886,-0.8527 z m 8.9384,0 0.9964,-1.9793 h 5.2342 l 0.941,1.9793 h 4.947 L 83.998,22.6741 h -4.949 l -6.1932,11.6031 z m 12.0736,14.29 H 26.2715 V 47.008 H 89.806 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 101.186,8.6532 C 104.528,6.754 108.383,5.6543 112.492,5.614 V 5.6129 H 29 c -4.1963,0 -8.1345,1.1051 -11.5394,3.0403 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 112.726,49.5806 c 11.366,0 20.58,-9.2143 20.58,-20.5806 0,-11.3664 -9.214,-20.5807 -20.58,-20.5807 -7.618,0 -14.269,4.1388 -17.828,10.2904 h -2.987 v 1.5591 h 2.173 C 92.84,22.9194 92.145,25.8785 92.145,29 c 0,4.9754 1.766,9.5384 4.704,13.0968 H 93.347 C 90.817,38.3601 89.339,33.8526 89.339,29 c 0,-12.9164 10.47,-23.3871 23.387,-23.3871 12.916,0 23.387,10.4707 23.387,23.3871 0,12.9163 -10.471,23.3871 -23.387,23.3871 -7.368,0 -13.94,-3.4069 -18.227,-8.7312 h 3.778 c 3.716,3.6637 8.818,5.9247 14.449,5.9247 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 118.905,42.0967 H 94.562 v -2.8064 h 25.441 c -0.325,1.0056 -0.694,1.9443 -1.098,2.8064 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 120.614,42.0967 h 10.432 v -2.8064 h -9.408 c -0.302,0.9919 -0.646,1.93 -1.024,2.8064 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 121.509,30.4032 H 90.742 v -2.8065 h 30.767 c 0.017,0.4625 0.026,0.9304 0.026,1.4033 0,0.4729 -0.009,0.9408 -0.026,1.4032 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 123.069,30.4032 h 11.68 v -2.8065 h -11.68 c 0.017,0.4632 0.025,0.9311 0.025,1.4033 0,0.4722 -0.008,0.9401 -0.025,1.4032 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 120.004,18.7097 H 94.562 v -2.8064 h 24.343 c 0.404,0.8621 0.773,1.8008 1.099,2.8064 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 121.638,18.7097 h 9.408 v -2.8064 h -10.432 c 0.378,0.8764 0.722,1.8145 1.024,2.8064 z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 76 66.3564\"\n   fill=\"none\">\n  <path\n     d=\"m 18.9638,58.5853 h -3.5332 c -0.0127,0.2669 -0.0762,0.521 -0.2288,0.7371 -0.4194,0.61 -1.3726,0.8769 -2.707,0.8769 -1.1438,0 -2.2495,-0.2796 -2.7452,-1.0167 -0.2415,-0.3431 -0.3559,-0.8134 -0.3559,-1.4997 0,-0.6354 0.089,-1.1438 0.3177,-1.487 0.4449,-0.699 1.4235,-1.0421 2.7707,-1.0421 1.4869,0 2.3003,0.394 2.6689,0.9277 0.1525,0.2161 0.2415,0.5084 0.2542,0.7372 h 3.5332 c -0.0127,-0.3177 -0.0763,-0.9024 -0.2796,-1.4234 -0.5974,-1.487 -2.2242,-2.885 -6.1386,-2.885 -2.8723,0 -4.7024,0.7625 -5.7192,2.0334 -0.6354,0.7753 -0.9532,1.8302 -0.9532,3.1011 0,1.398 0.3432,2.491 1.0168,3.279 0.9786,1.1819 2.796,1.8809 5.5921,1.8809 3.495,0 5.3378,-0.9532 6.1385,-2.6689 0.2542,-0.4957 0.3305,-1.1947 0.3686,-1.5505 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 29.8772,62.6522 V 59.996 h -6.075 V 52.6755 H 20.358 v 9.9767 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 41.7409,62.6522 v -2.4783 h -7.1553 v -1.2963 h 6.863 v -2.4275 h -6.863 v -1.2836 h 7.0664 v -2.491 H 31.2304 v 9.9767 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 46.8253,60.8094 h 5.3887 l 0.877,1.8428 h 3.673 l -5.033,-9.9767 h -4.105 l -5.3252,9.9767 h 3.5967 z m 4.3087,-2.2368 h -3.1903 l 1.2583,-2.4021 0.3812,-0.9151 0.3559,0.9024 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 69.536,55.713 c 0,-0.9024 -0.216,-1.5506 -0.674,-2.0208 -0.597,-0.6355 -1.627,-1.0167 -3.202,-1.0167 h -7.944 v 9.9767 h 3.394 v -3.5204 h 3.088 l 2.478,3.5204 h 3.788 l -3.012,-4.0669 c 0.673,-0.1017 1.22,-0.5084 1.575,-0.9914 0.318,-0.4448 0.509,-1.1057 0.509,-1.8809 z m -3.305,0.3177 c 0,0.1652 -0.025,0.3686 -0.114,0.5211 -0.127,0.2542 -0.457,0.3559 -1.004,0.3559 h -3.991 v -1.8175 h 3.927 c 0.534,0 0.89,0.089 1.068,0.4194 0.089,0.1271 0.114,0.3305 0.114,0.5211 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 50.682,7.7584 c 0.089,-0.1525 0.114,-0.3558 0.114,-0.5211 0,-0.1906 -0.025,-0.3939 -0.114,-0.521 C 50.504,6.3858 50.148,6.2969 49.6141,6.2969 H 45.687 v 1.8174 h 3.9907 c 0.5463,0 0.8773,-0.1017 1.0043,-0.3559 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 60.732,9.7792 h 3.19 L 62.727,7.3644 62.371,6.4621 61.99,7.3772 Z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"M 8.0353,0 C 3.8749,0 0.453,3.1619 0.0415,7.2137 0.0141,7.4839 0,7.7579 0,8.0353 v 50.2858 c 0,4.4378 3.5975,8.0353 8.0353,8.0353 H 67.965 c 4.438,0 8.035,-3.5975 8.035,-8.0353 V 8.0353 C 76,3.5975 72.403,0 67.965,0 Z M 28.681,31.6085 1.674,22.4745 v 6.5233 l 25.9705,4.0764 c -0.3809,0.8327 -0.4564,1.7064 -0.215,2.5629 0.2042,0.7246 0.63,1.4182 1.2514,2.0487 L 1.674,46.8198 v 1.5769 h 12.5199 l 16.1357,-9.4523 c 0.6428,0.3765 1.3656,0.7009 2.1487,0.9658 l -8.3642,8.4865 h 7.2621 l 3.6042,-7.8795 c 1.7569,0.2757 3.6088,0.2763 5.3695,-1e-4 l 3.6048,7.8796 H 51.217 L 40.9558,37.9859 c -0.5007,0.1694 -1.0345,0.2984 -1.587,0.3851 l -5e-4,10e-5 c -0.6913,0.1085 -1.4119,0.1508 -2.1336,0.1231 -1.2989,-0.0499 -2.5434,-0.3243 -3.5761,-0.7884 -1.0326,-0.4642 -1.8072,-1.0974 -2.2256,-1.8194 -0.4184,-0.7221 -0.4619,-1.5006 -0.125,-2.2371 0.3369,-0.7365 1.0391,-1.398 2.0177,-1.9008 0.9787,-0.5027 2.1898,-0.8242 3.4803,-0.9237 1.2906,-0.0995 2.6025,0.0273 3.7699,0.3646 1.1675,0.3372 2.138,0.8697 2.7888,1.5301 L 74.326,22.2482 V 17.9598 H 66.152 L 45.0007,30.3502 c -0.7181,-0.4207 -1.5412,-0.7793 -2.4455,-1.0625 -0.7026,-0.22 -1.4426,-0.3907 -2.2048,-0.5104 l 4.9479,-10.8175 h -7.6328 v 10.6103 c -0.2261,0 -0.4526,0.0044 -0.6791,0.0131 -0.6809,0.0261 -1.3526,0.0914 -2.006,0.1939 L 30.0325,17.9598 h -8.8138 l 11.2597,11.4244 c -0.2934,0.0992 -0.5792,0.207 -0.8561,0.3233 -1.2044,0.5056 -2.2056,1.1545 -2.9413,1.901 z m 8.9845,3.0386 36.6605,12.399 V 40.4015 Z M 1.674,50.0707 h 72.652 v 8.2504 c 0,3.5132 -2.848,6.3612 -6.361,6.3612 H 8.0353 c -3.5133,0 -6.3613,-2.848 -6.3613,-6.3612 z M 19.5029,3.8821 v 6.1259 c 0,2.6943 -2.4401,3.9907 -6.1385,3.9907 -3.4569,0 -5.9353,-1.2837 -5.9353,-4.3085 V 3.8821 h 3.4442 v 5.8081 c 0,1.0803 0.9278,1.7539 2.6309,1.7539 1.6267,0 2.5926,-0.699 2.5926,-1.7412 V 3.8821 Z m 11.4709,7.3205 v 2.6563 H 21.4546 V 3.8821 h 3.4442 v 7.3205 z M 41.2096,6.3858 V 3.8821 H 29.3011 v 2.5037 h 4.2067 v 7.4731 h 3.4824 V 6.3858 Z M 53.427,4.8988 c 0.457,0.4703 0.673,1.1185 0.673,2.0208 0,0.7753 -0.19,1.4362 -0.508,1.881 -0.356,0.4829 -0.902,0.8896 -1.576,0.9913 l 3.012,4.067 h -3.787 l -2.4784,-3.5205 h -3.0884 v 3.5205 H 42.2809 V 3.8821 h 7.9431 c 1.576,0 2.606,0.3813 3.203,1.0167 z m 6.186,7.1172 h 5.389 l 0.877,1.8429 h 3.673 L 64.519,3.8821 h -4.105 l -5.325,9.9768 h 3.597 z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 87.764999 42.259899\"\n   fill=\"none\">\n  <path\n     d=\"M 80.798,7.3518 C 81.186,5.7277 80.397,4.2122 79.575,2.9837 78.67,1.6312 77.158,0.432 75.469,0 c 0.306,1.5328 1.199,2.8552 2.059,4.0988 0.854,1.2353 1.931,2.4866 3.27,3.253 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 8.2075,2.9821 C 7.384,4.2099 6.5934,5.7248 6.9804,7.3492 8.3199,6.5839 9.3984,5.3334 10.2535,4.0987 11.1144,2.8559 12.0088,1.534 12.3157,0.0015 10.6265,0.4323 9.114,1.6304 8.2075,2.9821 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 5.8019,10.4651 C 6.104,9.1787 6.0973,7.7704 5.8097,6.5638 5.5568,5.5034 5.1888,4.0044 3.9776,3.4986 3.0972,4.9108 2.7433,6.8339 3.2564,8.2749 3.6274,9.3172 4.2946,10.6953 5.6783,10.9086 6.948,11.2013 8.2319,10.524 9.2459,9.9648 10.3734,9.3431 11.4778,8.354 12.1488,7.1781 10.9179,6.5568 9.5161,7.061 8.4615,7.5442 7.3247,8.0651 6.2804,9.1827 5.8019,10.4651 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 30.4431,5.2424 v 6.4586 h -2.205 V 9.3562 h -3.3075 v 2.3448 h -2.205 V 5.2424 h 2.205 v 2.3531 h 3.3075 V 5.2424 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 37.7547,5.2424 H 40.19 L 36.7345,9.5701 V 11.701 H 34.5213 V 9.5783 L 31.1069,5.2424 h 2.5093 l 2.0405,2.5834 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 48.5523,7.5708 c 0,-0.8474 -0.2468,-1.4316 -0.6829,-1.7772 C 47.4498,5.4234 46.7751,5.2424 45.8866,5.2424 H 40.876 v 6.4586 h 2.2132 v -1.81 c 0,0 2.5341,0.0082 2.8303,0 0.9544,-0.0083 1.6866,-0.2386 2.1309,-0.7487 0.3291,-0.3621 0.5019,-0.8804 0.5019,-1.5715 z m -2.2214,0.0329 c 0,0.2057 -0.0329,0.3538 -0.0988,0.469 -0.1316,0.2057 -0.4031,0.3126 -0.8639,0.3126 H 43.0728 V 6.8056 h 2.3119 c 0.4278,0 0.6911,0.0988 0.831,0.3045 0.074,0.0987 0.1152,0.2797 0.1152,0.4936 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 56.237,10.0966 V 11.701 H 49.433 V 5.2424 H 56.18 V 6.855 h -4.575 v 0.831 h 4.443 v 1.5714 h -4.443 v 0.8392 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"M 64.934,7.2088 C 64.934,6.6246 64.795,6.205 64.498,5.9006 64.112,5.4892 63.445,5.2424 62.425,5.2424 H 57.283 V 11.701 H 59.48 V 9.422 h 1.999 l 1.604,2.279 h 2.452 l -1.95,-2.6328 c 0.436,-0.0658 0.79,-0.3291 1.02,-0.6417 0.206,-0.288 0.329,-0.7158 0.329,-1.2177 z m -2.139,0.2057 c 0,0.1069 -0.016,0.2386 -0.074,0.3373 -0.082,0.1646 -0.296,0.2304 -0.65,0.2304 H 59.488 V 6.8056 h 2.542 c 0.346,0 0.576,0.0576 0.691,0.2715 0.058,0.0823 0.074,0.214 0.074,0.3374 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 55.059,19.8017 c 0,-1.4763 -0.938,-2.2522 -3.1256,-2.4893 -0.3556,-0.0431 -1.4009,-0.1509 -2.0583,-0.2048 -1.6919,-0.1832 -2.1983,-0.2801 -2.1983,-0.7112 0,-0.3879 0.3987,-0.5711 1.9181,-0.5711 1.0777,0 1.6812,0.2047 1.9182,0.5172 0.1186,0.1509 0.1617,0.2694 0.1725,0.388 h 3.1036 c -0.0324,-0.2587 -0.1401,-0.6251 -0.3126,-0.9483 -0.5603,-1.0777 -1.9074,-1.9398 -4.8062,-1.9398 -3.2653,0 -5.0541,1.1531 -5.0541,2.6618 0,1.4548 1.0129,2.3061 3.7501,2.554 0.3159,0.027 1.0019,0.0919 1.552,0.1439 l 0.0061,6e-4 0.0024,2e-4 0.2931,0.0277 c 1.4332,0.1509 1.8212,0.2478 1.8212,0.7005 0,0.4202 -0.3772,0.6465 -1.9613,0.6465 -1.2285,0 -1.9505,-0.1832 -2.2092,-0.4957 -0.1077,-0.1293 -0.1832,-0.3233 -0.2047,-0.4526 h -3.1036 c 0.0323,0.2155 0.0862,0.5604 0.2047,0.8406 0.5281,1.1854 1.9075,2.0906 5.108,2.0906 3.4377,0 5.1839,-0.9699 5.1839,-2.7588 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 33.5418,20.0388 c 0,0.5819 -0.1616,1.1531 -0.4849,1.5303 -0.4957,0.6034 -1.4225,0.8621 -2.6187,0.8621 h -7.5111 v -8.4595 h 7.3064 c 1.1638,0 1.9074,0.2802 2.3169,0.7005 0.3664,0.3664 0.528,0.8513 0.528,1.4009 0,0.5496 -0.1293,1.0022 -0.4095,1.3363 -0.2263,0.2802 -0.6142,0.4957 -1.0237,0.5496 0.6034,0.0754 1.1746,0.3771 1.4979,0.7974 0.2694,0.3125 0.3987,0.7867 0.3987,1.2824 z m -3.6316,-2.9635 c 0.1077,-0.1185 0.1724,-0.2909 0.1724,-0.4957 0,-0.2048 -0.0647,-0.3772 -0.2048,-0.4957 -0.1508,-0.1401 -0.431,-0.194 -0.8405,-0.194 h -3.2868 v 1.3794 h 3.3622 c 0.3664,0 0.6466,-0.0539 0.7975,-0.194 z m -0.485,3.4377 c 0.5065,0 0.8083,-0.0647 0.9807,-0.2263 0.1077,-0.1078 0.1508,-0.2694 0.1508,-0.4742 0,-0.2155 -0.0538,-0.3772 -0.1832,-0.5065 -0.1616,-0.1401 -0.4418,-0.2047 -0.9159,-0.2047 h -3.7071 v 1.4117 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 43.6889,20.3298 v 2.1014 h -8.912 v -8.4595 h 8.8366 v 2.1122 h -5.9917 v 1.0884 h 5.8193 v 2.0583 h -5.8193 v 1.0992 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 65.545,13.9717 v 2.123 h -3.578 v 6.3365 h -2.952 v -6.3365 h -3.567 v -2.123 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 65.289,29.8853 v 0.0315 H 64.814 L 64.78,29.4594 c -0.145,0.2316 -0.452,0.5095 -1.1,0.5095 -1.095,0 -1.604,-0.6601 -1.604,-2.3451 0,-1.3028 0.324,-2.3508 1.661,-2.3508 1.159,0 1.512,0.7585 1.529,1.5749 H 64.687 C 64.67,26.3152 64.432,25.823 63.749,25.823 c -0.822,0 -1.06,0.4922 -1.06,1.8182 0,1.3839 0.296,1.8182 1.072,1.8182 0.544,0 0.862,-0.3011 0.967,-0.6601 v -0.8628 h -1.17 v -0.5269 h 1.725 v 1.3318 c 0,0.4785 0.005,0.9956 0.006,1.1377 v 0.0038 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 24.658,28.7645 h -1.6213 l -0.3475,1.1523 h -0.608 l 1.4361,-4.5859 h 0.7469 l 1.3434,4.5859 h -0.6138 z m -1.465,-0.5153 h 1.3202 c 0,0 -0.5385,-1.8645 -0.5443,-1.8934 l -0.0285,-0.136 -0.0641,-0.3041 c 0,0 -0.0927,0.4111 -0.0985,0.4401 -0.0116,0.0405 -0.5848,1.8934 -0.5848,1.8934 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 30.0025,25.3309 h 0.5559 l -1.0828,4.5859 h -0.6891 c 0,0 -0.7701,-3.5668 -0.7701,-3.7174 -0.0058,0.1506 -0.7933,3.7174 -0.7933,3.7174 h -0.689 l -1.0828,-4.5859 h 0.6253 c 0,0 0.8396,3.6305 0.8396,3.7753 0,-0.1448 0.7702,-3.7753 0.7702,-3.7753 h 0.689 c 0,0 0.7701,3.6363 0.7701,3.7753 0,-0.139 0.857,-3.7753 0.857,-3.7753 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 31.315,28.7645 h 1.6213 l 0.3359,1.1523 h 0.6138 l -1.3434,-4.5859 h -0.747 l -1.436,4.5859 h 0.608 z m 1.4766,-0.5153 h -1.3202 c 0,0 0.5732,-1.8529 0.5848,-1.8934 0.0058,-0.029 0.0984,-0.4401 0.0984,-0.4401 l 0.0489,0.2314 0.0438,0.2087 c 0.0058,0.0289 0.5443,1.8934 0.5443,1.8934 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 36.117,25.3309 c 0.7064,0 1.0886,0.33 1.0886,1.2912 0,0.8165 -0.3069,1.0886 -0.6254,1.1812 l 0.8802,2.1135 h -0.637 L 36.007,27.9192 h -1.1117 v 1.9976 h -0.5791 v -4.5859 z m -0.0868,2.0671 c 0.4574,0 0.5674,-0.2374 0.5674,-0.7585 0,-0.5906 -0.1737,-0.7701 -0.5964,-0.7701 H 34.901 v 1.5286 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 40.7481,29.4015 c 0.2316,-0.3301 0.3126,-0.7701 0.3126,-1.8529 0,-0.9786 -0.0694,-1.3955 -0.301,-1.7313 -0.2085,-0.3127 -0.6601,-0.4864 -1.2392,-0.4864 h -1.5344 v 4.5859 h 1.5749 c 0.5907,0 0.9555,-0.1968 1.1871,-0.5153 z m -0.5096,-0.3243 c -0.1505,0.2027 -0.4458,0.2953 -0.799,0.2953 h -0.8686 v -3.4916 h 0.857 c 0.3532,0 0.6543,0.0927 0.8106,0.3069 0.1679,0.249 0.2085,0.637 0.2085,1.3608 0,0.8627 -0.0463,1.3086 -0.2085,1.5286 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 47.17,25.3309 h 0.5559 l -1.0828,4.5859 H 45.954 c 0,0 -0.7701,-3.5668 -0.7701,-3.7174 -0.0058,0.1506 -0.7933,3.7174 -0.7933,3.7174 h -0.689 l -1.0828,-4.5859 h 0.6253 c 0,0 0.8396,3.6305 0.8396,3.7753 0,-0.1448 0.7701,-3.7753 0.7701,-3.7753 h 0.6891 c 0,0 0.7701,3.6363 0.7701,3.7753 0,-0.139 0.857,-3.7753 0.857,-3.7753 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 48.7497,29.9168 v -4.5859 h -0.6022 v 4.5859 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 52.5195,25.3309 v 4.5859 h -0.6659 l -1.7082,-3.5553 v 3.5553 h -0.5617 v -4.5859 h 0.7007 l 1.6676,3.5031 v -3.5031 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 56.274,29.9168 v -4.5859 h -0.567 v 3.5031 l -1.6679,-3.5031 h -0.7007 v 4.5859 h 0.5617 v -3.5553 l 1.7079,3.5553 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 57.695,25.3309 v 4.5859 h -0.602 v -4.5859 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 61.465,29.9168 V 25.3309 H 60.898 V 28.834 L 59.23,25.3309 h -0.701 v 4.5859 h 0.562 v -3.5553 l 1.708,3.5553 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 29.5553,38.9554 -0.6635,-2.0422 -0.6636,2.0422 H 26.081 l 1.7371,1.2622 -0.6635,2.0422 1.7372,-1.2622 1.7372,1.2622 -0.6636,-2.0422 1.7372,-1.2622 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 36.5517,36.9134 0.6771,2.0422 h 2.1911 l -1.7726,1.2621 0.6771,2.0422 -1.7727,-1.2621 -1.7726,1.2621 0.6771,-2.0422 -1.7727,-1.2621 h 2.1911 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 44.8289,38.9556 -0.6771,-2.0422 -0.6771,2.0422 h -2.1911 l 1.7726,1.2621 -0.6771,2.0422 1.7727,-1.2621 1.7726,1.2621 -0.6771,-2.0422 1.7727,-1.2621 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 51.7517,36.9134 0.6771,2.0422 h 2.1911 l -1.7727,1.2621 0.6771,2.0422 -1.7726,-1.2621 -1.7727,1.2621 0.6771,-2.0422 -1.7726,-1.2621 h 2.1911 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 60.075,38.9556 -0.663,-2.0422 -0.664,2.0422 h -2.147 l 1.737,1.2621 -0.663,2.0422 1.737,-1.2621 1.737,1.2621 -0.664,-2.0422 1.738,-1.2621 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 4.8917,16.0483 c -1.4088,0.034 -2.375,-1.1592 -2.9994,-2.1118 -0.8235,-1.256 -0.9868,-3.1526 -0.475,-4.7027 1.299,0.2692 2.0271,1.6158 2.5496,2.612 0.5715,1.0897 0.926,2.4424 0.9381,3.7521 0.1614,-1.3073 0.9127,-2.5805 1.8896,-3.2762 0.9355,-0.6661 2.19,-1.3723 3.5003,-0.9911 -0.3577,1.2425 -1.205,2.3918 -2.1437,3.1777 -0.8716,0.7297 -1.9784,1.604 -3.2595,1.54 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 5.3085,21.1789 C 4.001,21.398 2.7256,20.5969 1.8973,19.6546 0.8309,18.4414 0.1964,16.8139 0.3258,15.1846 c 1.3432,0.0341 2.3605,1.1952 3.1124,2.0732 0.8098,0.9456 1.4733,2.1897 1.7916,3.4731 -0.14,-1.279 0.2894,-2.6601 1.0865,-3.5135 0.7694,-0.8238 1.8472,-1.7216 3.1882,-1.5775 -0.0289,1.2969 -0.679,2.5325 -1.3495,3.4579 -0.625,0.8624 -1.5878,1.9291 -2.8465,2.0811 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 7.0927,26.461 C 5.5578,27.0483 4.0973,26.2723 2.8931,25.4883 1.3957,24.5135 0.2811,22.6186 0,20.7921 c 1.4774,-0.1835 2.9442,0.7921 3.9625,1.7182 1.1202,1.0188 2.1777,2.1214 2.9008,3.4841 -0.4894,-1.3246 -0.3672,-2.8284 0.2699,-4.0918 0.6094,-1.2085 1.7568,-2.1985 3.1405,-2.3213 0.2412,1.3492 -0.1072,2.7706 -0.6288,4.0033 -0.4924,1.1634 -1.293,2.4309 -2.5522,2.8764 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 10.1944,31.3988 c 1.185,-0.7084 1.6619,-2.199 1.8568,-3.4763 0.2101,-1.3775 0.2011,-2.8967 -0.371,-4.2035 -1.3748,0.384 -2.3185,1.6214 -2.6301,2.9767 -0.3292,1.4319 -0.0514,2.958 0.7494,4.1772 C 8.735,29.6516 7.3195,28.6432 5.963,27.9361 4.6527,27.2531 3.0452,26.4293 1.4716,26.9268 c 0.7588,1.8519 2.382,3.5761 4.181,4.2893 1.3932,0.5522 3.0881,1.0983 4.5418,0.1827 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 14.9489,35.9176 c 1.0323,-1.0234 1.0372,-2.7098 0.8633,-4.0394 -0.1952,-1.4932 -0.6323,-3.0661 -1.5657,-4.2912 -1.337,0.6823 -1.9583,2.2137 -1.9199,3.6451 0.0427,1.6004 0.915,3.1882 2.1122,4.27 -1.5002,-1.0658 -3.294,-1.8458 -4.9773,-2.3301 L 9.3754,33.1473 C 7.8674,32.713 6.0045,32.1765 4.4813,33.0152 c 1.2472,1.8773 3.5742,3.2872 5.6414,3.6775 1.5398,0.2905 3.5362,0.5453 4.8262,-0.7751 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 21.8033,39.6824 c 0.7602,-1.4471 0.007,-3.1455 -0.5932,-4.4008 -0.7096,-1.484 -1.6791,-2.9964 -3.0666,-4.0826 -1.3323,1.1482 -1.2056,2.7911 -0.8095,4.2189 0.471,1.6977 2.1039,3.1449 3.7948,3.9696 -1.9583,-0.7303 -4.097,-1.1686 -6.1318,-1.298 l -0.2061,-0.0133 c -1.6347,-0.1065 -3.7628,-0.2451 -5.0654,0.9512 1.9695,1.6743 4.767,2.6403 7.2326,2.5901 1.6523,-0.0336 3.9193,-0.2291 4.8452,-1.9351 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 79.317,7.5455 c 1.136,0.5219 2.18,1.6409 2.657,2.9242 C 81.673,9.1827 81.681,7.7739 81.97,6.567 82.223,5.5067 82.593,4.0081 83.805,3.503 84.684,4.9161 85.036,6.8396 84.521,8.2799 84.149,9.3222 83.48,10.7 82.096,10.912 80.826,11.2035 79.543,10.5253 78.53,9.9655 77.403,9.3429 76.3,8.353 75.63,7.1766 76.861,6.5564 78.262,7.0615 79.317,7.5455 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 80.979,12.3244 c 0.976,0.696 1.725,1.9685 1.886,3.2749 0.014,-1.309 0.37,-2.6604 0.942,-3.749 0.523,-0.9959 1.253,-2.3419 2.552,-2.6102 0.51,1.5506 0.345,3.4471 -0.48,4.7024 -0.624,0.9509 -1.59,2.1416 -2.996,2.1097 -1.283,0.0655 -2.391,-0.8109 -3.263,-1.5421 -0.938,-0.7867 -1.784,-1.9366 -2.14,-3.1793 1.31,-0.3804 2.564,0.3268 3.499,0.9936 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 81.452,17.2202 c 0.798,0.8551 1.226,2.2391 1.083,3.5192 0.319,-1.2849 0.984,-2.5304 1.796,-3.4766 0.753,-0.8774 1.771,-2.0376 3.115,-2.0708 0.127,1.6295 -0.509,3.2565 -1.576,4.4688 -0.83,0.9422 -2.107,1.7429 -3.415,1.5214 -1.258,-0.1537 -2.219,-1.2204 -2.843,-2.0829 -0.67,-0.9259 -1.319,-2.1621 -1.346,-3.459 1.341,-0.1431 2.418,0.7555 3.186,1.5799 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 80.631,21.905 c 0.636,1.2641 0.757,2.7682 0.266,4.0924 0.724,-1.3625 1.783,-2.4644 2.904,-3.4825 1.019,-0.9254 2.487,-1.8997 3.964,-1.7152 -0.282,1.8264 -1.399,3.7205 -2.897,4.6941 -1.204,0.782 -2.663,1.5564 -4.196,0.9715 -1.261,-0.4447 -2.062,-1.7148 -2.554,-2.8802 -0.521,-1.2331 -0.868,-2.6547 -0.625,-4.0038 1.383,0.1239 2.53,1.1148 3.138,2.3237 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 78.71,26.6968 c 0.327,1.4312 0.048,2.9558 -0.752,4.1738 1.065,-1.2193 2.481,-2.2256 3.837,-2.9313 1.311,-0.682 2.919,-1.5046 4.492,-1.0061 -0.76,1.8515 -2.385,3.5745 -4.185,4.2864 -1.395,0.552 -3.094,1.0978 -4.549,0.175 -1.178,-0.711 -1.652,-2.1986 -1.846,-3.4734 -0.208,-1.3778 -0.198,-2.8969 0.375,-4.2031 1.375,0.385 2.318,1.6231 2.628,2.9787 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 71.942,31.8743 c -0.175,1.3293 -0.172,3.0156 0.86,4.0399 1.288,1.3214 3.285,1.068 4.825,0.7785 2.068,-0.3887 4.396,-1.7971 5.645,-3.6733 -1.522,-0.8397 -3.386,-0.3048 -4.894,0.1283 l -0.087,0.0248 c -1.683,0.4828 -3.477,1.2612 -4.978,2.3254 1.198,-1.0809 2.071,-2.6674 2.115,-4.2672 0.04,-1.4313 -0.58,-2.9632 -1.916,-3.6466 -0.935,1.2244 -1.373,2.7971 -1.57,4.2902 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 65.944,39.6737 c 0.924,1.7068 3.191,1.9039 4.843,1.9388 2.466,0.052 5.264,-0.9121 7.235,-2.5847 -1.301,-1.197 -3.429,-1.0602 -5.064,-0.955 l -0.207,0.0132 c -2.035,0.128 -4.174,0.5647 -6.133,1.2935 1.692,-0.8233 3.326,-2.2695 3.799,-3.9669 0.397,-1.4274 0.526,-3.0702 -0.806,-4.2193 -1.388,1.085 -2.359,2.5967 -3.07,4.0802 -0.598,1.2479 -1.348,2.9341 -0.61,4.3768 z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 70.343002 57.2183\"\n   fill=\"none\">\n  <path\n     d=\"m 22.5459,19.621 c 0,-0.1524 0,-2.3697 0,-2.3697 h -1.3176 c 0,0 0,2.1829 0,2.2518 0,0.4031 -0.3736,0.6735 -1.0029,0.6735 -0.6588,0 -1.0177,-0.2606 -1.0177,-0.6785 0,-0.0688 0,-2.2468 0,-2.2468 h -1.3324 c 0,0 0,2.0698 0,2.2468 0,1.1701 0.9587,1.6667 2.296,1.6667 1.4307,0 2.3746,-0.5015 2.3746,-1.5438 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 26.9833,21.1107 v -1.0275 h -2.35 v -2.8319 h -1.3324 v 3.8594 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 30.943,18.2199 v -0.9686 h -4.6067 v 0.9686 h 1.6273 v 2.8908 h 1.3471 v -2.8908 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 32.7143,21.1107 v -3.8594 h -1.352 v 3.8594 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 38.9172,21.1107 v -3.8594 h -1.6667 l -1.0521,2.3157 -1.0029,-2.3157 h -1.7208 v 3.8594 h 1.2537 v -2.0845 l 0.9046,2.0845 h 1.121 l 0.9144,-2.0845 v 2.0845 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 41.0054,20.3978 H 43.09 l 0.3393,0.7129 h 1.4208 l -1.9469,-3.8594 h -1.588 l -2.06,3.8594 h 1.3913 z m 1.6667,-0.8653 h -1.234 l 0.4867,-0.9292 0.1475,-0.3539 0.1377,0.349 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 49.029,18.2199 v -0.9686 h -4.6065 v 0.9686 h 1.6273 v 2.8908 h 1.3472 v -2.8908 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 53.509,21.1107 V 20.152 h -2.767 v -0.5015 h 2.654 v -0.939 h -2.654 v -0.4966 h 2.733 v -0.9636 h -4.031 v 3.8594 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 27.9232,23.1623 h -1.2734 c 0,0 -0.8309,2.4287 -0.8309,2.4877 0,-0.059 -0.7768,-2.4877 -0.7768,-2.4877 h -1.3815 c 0,0 -0.7719,2.4287 -0.7719,2.4877 0,-0.059 -0.8358,-2.4877 -0.8358,-2.4877 h -1.4307 l 1.4455,3.8594 h 1.4405 c 0,0 0.7768,-2.3058 0.7817,-2.3697 0.0049,0.0639 0.7768,2.3697 0.7768,2.3697 h 1.4454 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 29.6655,27.0217 v -3.8594 h -1.352 v 3.8594 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 34.9245,27.0217 v -3.8594 h -1.2586 v 2.0993 l -1.8535,-2.0993 h -1.3865 v 3.8594 h 1.2685 v -2.1485 l 1.9125,2.1485 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 40.1914,27.0217 v -3.8594 h -1.2586 v 2.0993 l -1.8535,-2.0993 h -1.3864 v 3.8594 h 1.2684 v -2.1485 l 1.9125,2.1485 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 45.0257,27.0217 V 26.063 h -2.7679 v -0.5015 h 2.6548 v -0.939 h -2.6548 v -0.4966 h 2.7335 v -0.9636 h -4.0315 v 3.8594 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 50.223,24.3373 c 0,-0.349 -0.084,-0.5998 -0.261,-0.7817 -0.231,-0.2458 -0.629,-0.3933 -1.239,-0.3933 h -3.0724 v 3.8594 h 1.3127 v -1.3618 h 1.1947 l 0.959,1.3618 h 1.465 l -1.165,-1.5733 c 0.26,-0.0393 0.472,-0.1966 0.609,-0.3834 0.123,-0.1721 0.197,-0.4278 0.197,-0.7277 z m -1.278,0.1229 c 0,0.064 -0.01,0.1426 -0.045,0.2016 -0.049,0.0983 -0.177,0.1377 -0.388,0.1377 h -1.5438 v -0.7031 h 1.5188 c 0.207,0 0.345,0.0344 0.413,0.1623 0.035,0.0491 0.045,0.1278 0.045,0.2015 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 23.1002,30.8187 c 0,-0.0631 0,-1.8859 0,-1.8859 h -0.4603 c 0,0 0,1.8153 0,1.8562 0,0.438 -0.4121,0.6868 -1.0061,0.6868 -0.7016,0 -1.0469,-0.2673 -1.0469,-0.6905 0,-0.0409 0,-1.8525 0,-1.8525 h -0.464 c 0,0 0,1.7671 0,1.8376 0,0.7722 0.6014,1.1137 1.4924,1.1137 0.9206,0 1.4849,-0.3638 1.4849,-1.0654 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 26.4031,31.847 v -0.4269 h -2.0084 v -2.4873 h -0.464 v 2.9142 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 29.0399,29.356 v -0.4232 h -3.0962 v 0.4232 h 1.3142 v 2.491 h 0.4678 v -2.491 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 32.3395,29.7569 c 0,-0.2079 -0.0446,-0.3601 -0.1225,-0.4826 -0.1374,-0.2042 -0.401,-0.3415 -0.839,-0.3415 h -1.8859 v 2.9142 h 0.4566 v -1.2288 h 1.329 l 0.813,1.2288 h 0.5346 l -0.8798,-1.3068 c 0.2227,-0.0259 0.3972,-0.1522 0.49,-0.3155 0.0669,-0.1114 0.104,-0.2747 0.104,-0.4678 z m -0.4604,0.0371 c 0,0.0817 -0.0185,0.182 -0.0519,0.2488 -0.0594,0.1076 -0.1968,0.1633 -0.4195,0.167 h -1.4553 c 0,-0.0074 0,-0.8612 0,-0.8612 h 1.3699 c 0.2784,0 0.4269,0.0668 0.5049,0.193 0.0334,0.0594 0.0519,0.1596 0.0519,0.2524 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 33.6606,31.1268 h 1.8154 l 0.3712,0.7202 h 0.4975 l -1.4776,-2.9142 h -0.5457 l -1.5258,2.9142 h 0.4863 z m 1.6223,-0.4121 h -1.4218 l 0.5902,-1.1174 0.13,-0.271 0.1299,0.271 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 41.053,31.5686 c 0.1151,-0.1337 0.1671,-0.323 0.1671,-0.5272 0,-0.193 -0.0557,-0.3861 -0.1708,-0.5049 -0.1151,-0.1113 -0.3007,-0.2041 -0.5049,-0.2227 0.1188,-0.0186 0.2116,-0.0928 0.2747,-0.1708 0.1003,-0.1151 0.1596,-0.3007 0.1596,-0.4863 0,-0.1968 -0.0593,-0.375 -0.1856,-0.4975 -0.1373,-0.1373 -0.3712,-0.2264 -0.6979,-0.2264 H 38.135 v 2.9142 h 2.105 c 0.3935,0 0.6682,-0.1002 0.813,-0.2784 z m -0.5532,-1.8191 c 0,0.1299 -0.0408,0.245 -0.1113,0.3118 -0.0706,0.078 -0.1894,0.1114 -0.3156,0.1114 h -1.485 v -0.839 h 1.3996 c 0.1708,0 0.3007,0.0334 0.3898,0.1151 0.078,0.0742 0.1225,0.1819 0.1225,0.3007 z m 0.1485,1.5369 c -0.0928,0.104 -0.2524,0.156 -0.4863,0.156 h -1.5741 v -0.865 h 1.5853 c 0.2153,0 0.3638,0.0445 0.4529,0.1299 0.0816,0.078 0.1151,0.1782 0.1151,0.2933 0,0.1188 -0.026,0.219 -0.0929,0.2858 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 44.5903,31.847 v -0.4269 h -2.2645 v -0.8316 h 2.1754 V 30.1653 H 42.3258 V 29.356 h 2.2385 v -0.4232 h -2.6915 v 2.9142 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 48.217,30.9857 c 0,-0.4752 -0.315,-0.7202 -1.091,-0.8093 -0.1303,-0.0185 -0.4125,-0.0482 -0.5647,-0.0668 -0.7202,-0.0854 -0.9392,-0.1819 -0.9392,-0.4306 0,-0.2413 0.2413,-0.3787 0.9689,-0.3787 0.564,0 0.854,0.1114 0.999,0.3118 0.041,0.0557 0.063,0.1226 0.074,0.1745 h 0.497 c -0.014,-0.0854 -0.048,-0.2042 -0.1,-0.3007 -0.2,-0.3452 -0.612,-0.594 -1.47,-0.594 -1.0246,-0.0037 -1.4478,0.3676 -1.4478,0.8279 0,0.4603 0.3304,0.6942 1.188,0.7945 0.1485,0.0185 0.412,0.0482 0.542,0.0631 0.6648,0.0816 0.8728,0.1819 0.8728,0.4603 0,0.2562 -0.238,0.4418 -0.9991,0.4418 -0.6236,0 -0.9578,-0.1114 -1.0914,-0.3267 -0.0408,-0.0594 -0.0668,-0.1522 -0.0705,-0.2153 h -0.4901 c 0.0112,0.1336 0.0483,0.2784 0.1151,0.3935 0.1931,0.3527 0.646,0.5569 1.5221,0.5569 1.0469,0 1.4849,-0.3379 1.4849,-0.9022 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 51.546,29.356 V 28.9328 H 48.45 v 0.4232 h 1.314 v 2.491 h 0.468 v -2.491 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 18.8088,34.38 c 0,-0.297 -0.0594,-0.4975 -0.1597,-0.6497 -0.141,-0.2191 -0.4158,-0.3341 -0.8947,-0.3341 h -1.8413 v 2.9142 h 0.4603 V 35.36 c 0,0 1.2994,0 1.3625,0 0.4492,-0.0037 0.7573,-0.1076 0.9207,-0.3452 0.1039,-0.1448 0.1522,-0.3527 0.1522,-0.6348 z m -0.4678,0 c 0,0.1484 -0.0149,0.2598 -0.0631,0.3341 -0.0854,0.1373 -0.2599,0.2227 -0.62,0.2227 -0.0334,0 -1.2845,0 -1.2845,0 V 33.812 h 1.2994 c 0.3378,0 0.5123,0.0779 0.6051,0.2301 0.0445,0.0668 0.0631,0.1894 0.0631,0.3379 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 22.169,36.3104 v -0.4269 h -2.2646 v -0.8316 h 2.1755 v -0.4232 h -2.1755 v -0.8093 h 2.2386 v -0.4232 h -2.6915 v 2.9142 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 25.7104,34.2203 c 0,-0.2079 -0.0445,-0.3601 -0.1225,-0.4826 -0.1374,-0.2042 -0.4009,-0.3415 -0.839,-0.3415 H 22.863 v 2.9142 h 0.4566 v -1.2288 h 1.3291 l 0.813,1.2288 h 0.5346 l -0.8799,-1.3068 c 0.2228,-0.0259 0.3973,-0.1522 0.4901,-0.3155 0.0668,-0.1114 0.1039,-0.2747 0.1039,-0.4678 z m -0.4603,0.0371 c 0,0.0817 -0.0186,0.182 -0.052,0.2488 -0.0594,0.1076 -0.1968,0.1633 -0.4195,0.167 h -1.4553 c 0,-0.0074 0,-0.8612 0,-0.8612 h 1.3699 c 0.2784,0 0.4269,0.0668 0.5049,0.193 0.0334,0.0594 0.052,0.1596 0.052,0.2524 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 29.1522,33.8194 v -0.4232 h -2.5913 v 2.9142 h 0.4603 v -1.2399 h 2.0345 v -0.4344 h -2.0345 v -0.8167 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 31.2651,33.3442 c -0.62,0 -1.0469,0.1522 -1.3514,0.4715 -0.2561,0.2487 -0.3675,0.594 -0.3675,1.0283 0,0.4752 0.1448,0.8316 0.4121,1.0729 0.2859,0.2859 0.7239,0.4343 1.3068,0.4343 0.6014,0 1.0691,-0.1484 1.3476,-0.4492 0.2413,-0.245 0.3675,-0.5939 0.3675,-1.0617 0,-0.4529 -0.1077,-0.7982 -0.3638,-1.0432 -0.2933,-0.3044 -0.7314,-0.4529 -1.3513,-0.4529 z m 0,2.5913 c -0.4084,0 -0.698,-0.0891 -0.917,-0.2673 -0.2227,-0.1819 -0.3304,-0.4604 -0.3304,-0.8168 0,-0.3341 0.0928,-0.6125 0.271,-0.7796 0.2042,-0.193 0.516,-0.3081 0.9727,-0.3081 0.4714,0 0.7647,0.1114 0.9837,0.3044 0.1857,0.1634 0.2673,0.4529 0.2673,0.7796 0,0.3304 -0.0853,0.6126 -0.2747,0.7833 -0.219,0.2042 -0.5271,0.3045 -0.9726,0.3045 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 36.4634,34.2203 c 0,-0.2079 -0.0446,-0.3601 -0.1225,-0.4826 -0.1374,-0.2042 -0.401,-0.3415 -0.839,-0.3415 H 33.616 v 2.9142 h 0.4566 v -1.2288 h 1.329 l 0.8131,1.2288 h 0.5345 l -0.8798,-1.3068 c 0.2227,-0.0259 0.3972,-0.1522 0.49,-0.3155 0.0669,-0.1114 0.104,-0.2747 0.104,-0.4678 z m -0.4604,0.0371 c 0,0.0817 -0.0185,0.182 -0.0519,0.2488 -0.0594,0.1076 -0.1968,0.1633 -0.4195,0.167 h -1.4553 c 0,-0.0074 0,-0.8612 0,-0.8612 h 1.3699 c 0.2784,0 0.4269,0.0668 0.5049,0.193 0.0334,0.0594 0.0519,0.1596 0.0519,0.2524 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 40.9038,36.3104 v -2.9142 h -0.6014 l -1.1991,2.3982 -1.1769,-2.3982 h -0.6125 v 2.9142 h 0.4418 v -2.2423 l 1.0988,2.2423 h 0.4826 l 1.1249,-2.2423 v 2.2423 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 42.2075,35.5902 h 1.8154 l 0.3712,0.7202 h 0.4975 L 43.414,33.3962 h -0.5457 l -1.5258,2.9142 h 0.4863 z m 1.6223,-0.4121 H 42.408 l 0.5902,-1.1174 0.13,-0.271 0.1299,0.271 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 48.236,36.3104 v -2.9142 h -0.442 v 2.2645 l -1.93,-2.2645 h -0.5235 v 2.9142 h 0.4492 V 34.031 l 1.9453,2.2794 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 52.241,35.2227 h -0.483 c -0.015,0.1336 -0.067,0.2673 -0.16,0.3675 -0.2,0.2339 -0.519,0.3341 -1.009,0.3341 -0.412,0 -0.854,-0.1151 -1.066,-0.4158 -0.111,-0.141 -0.182,-0.3489 -0.182,-0.6608 0,-0.2784 0.049,-0.4863 0.156,-0.6274 0.178,-0.2858 0.553,-0.4343 1.081,-0.4343 0.512,0 0.835,0.141 1.006,0.3378 0.096,0.1039 0.152,0.2265 0.17,0.3712 h 0.483 c -0.015,-0.1633 -0.067,-0.3564 -0.178,-0.5197 -0.238,-0.3527 -0.676,-0.6311 -1.478,-0.6311 -0.764,0 -1.221,0.245 -1.474,0.6125 -0.163,0.2116 -0.245,0.5086 -0.245,0.8873 0,0.4232 0.101,0.7351 0.275,0.9541 0.253,0.3453 0.739,0.5531 1.474,0.5531 0.754,0 1.203,-0.2264 1.426,-0.5865 0.126,-0.1745 0.189,-0.3824 0.204,-0.542 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 55.563,36.3104 v -0.4269 h -2.265 v -0.8316 h 2.176 v -0.4232 h -2.176 v -0.8093 h 2.239 v -0.4232 h -2.692 v 2.9142 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 21.6118,39.2054 0.5552,1.7088 h 1.7967 l -1.4535,1.0561 0.5552,1.7087 -1.4536,-1.056 -1.4536,1.056 0.5553,-1.7087 -1.4536,-1.0561 h 1.7967 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 28.0214,39.2055 0.5665,1.7087 h 1.8334 l -1.4832,1.0561 0.5665,1.7088 -1.4832,-1.0561 -1.4832,1.0561 0.5665,-1.7088 -1.4832,-1.0561 h 1.8334 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 34.3803,39.2055 0.5666,1.7087 h 1.8333 l -1.4832,1.0561 0.5666,1.7088 -1.4833,-1.0561 -1.4832,1.0561 0.5665,-1.7088 -1.4832,-1.0561 h 1.8334 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 40.7394,39.2055 0.5665,1.7087 h 1.8334 l -1.4832,1.0561 0.5665,1.7088 -1.4832,-1.0561 -1.4832,1.0561 0.5665,-1.7088 -1.4832,-1.0561 h 1.8334 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 47.149,39.2055 0.555,1.7087 h 1.797 l -1.454,1.0561 0.555,1.7088 -1.453,-1.0561 -1.4537,1.0561 0.5553,-1.7088 -1.4536,-1.0561 h 1.7967 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 24.726,10.3762 0.4198,1.292 h 1.3585 l -1.099,0.7985 0.4198,1.2919 -1.0991,-0.7984 -1.099,0.7984 0.4198,-1.2919 -1.099,-0.7985 h 1.3585 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 29.5723,10.3744 0.4284,1.292 h 1.3861 l -1.1214,0.7985 0.4283,1.2919 -1.1214,-0.7985 -1.1215,0.7985 0.4284,-1.2919 -1.1215,-0.7985 h 1.3862 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 34.3801,10.3744 0.4283,1.292 h 1.3862 l -1.1214,0.7985 0.4283,1.2919 -1.1214,-0.7985 -1.1215,0.7985 0.4284,-1.2919 -1.1215,-0.7985 h 1.3862 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 39.1886,10.3744 0.4283,1.292 h 1.3862 l -1.1214,0.7985 0.4283,1.2919 -1.1214,-0.7985 -1.1215,0.7985 0.4284,-1.2919 -1.1215,-0.7985 h 1.3862 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 44.0341,10.3744 0.4198,1.292 h 1.3585 l -1.099,0.7985 0.4198,1.2919 -1.0991,-0.7985 -1.099,0.7985 0.4198,-1.2919 -1.099,-0.7985 h 1.3584 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"M 5.3764,33.6304 C 3.5238,22.0395 8.9306,10.5717 19.7547,5.6471 l 0.0999,0.2196 C 9.1394,10.7417 3.7773,22.0973 5.6146,33.5923 7.6473,46.3096 17.9067,53.9366 30.4702,54.3043 l -0.0071,0.2412 C 17.8017,54.1749 7.43,46.4789 5.3764,33.6304 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 17.4078,8.6052 c -2.0003,0.0456 -4.3414,1.1736 -5.7228,2.812 1.1078,1.0287 2.8902,0.6484 4.1729,0.438 1.8307,-0.3002 3.7775,-0.8818 5.505,-1.7051 -0.7103,-1.512 -2.6237,-1.5752 -3.9551,-1.5449 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 15.8347,6.1376 c -1.1848,1.8456 -2.5968,3.6799 -4.1334,5.2952 -1.2856,-1.2068 -0.5096,-3.2151 0.0151,-4.464 0.9505,-2.263 3.2294,-4.2145 5.6119,-5.213 0.6539,1.4877 -0.7664,3.249 -1.4936,4.3818 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 11.6194,13.7807 c -1.873,0.6658 -3.4825,2.54 -4.2906,4.4216 1.3468,0.6262 2.8779,-0.2781 3.998,-0.8802 1.538,-0.8268 3.1071,-1.9676 4.3417,-3.2878 -1.1155,-1.177 -2.8093,-0.6942 -4.0491,-0.2536 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 9.349,11.9365 C 8.939,14.0415 8.2516,16.2233 7.3488,18.2119 5.773,17.4687 5.833,15.3401 5.9005,13.9855 6.0157,11.6734 7.3092,9.0368 9.1101,7.3612 c 1.1025,1.182 0.5001,3.2344 0.2389,4.5753 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 8.0155,20.4625 c -1.5607,1.2312 -2.5067,3.5129 -2.7258,5.5504 1.4764,0.1695 2.6565,-1.1741 3.5346,-2.0959 1.1955,-1.2551 2.3272,-2.8293 3.0459,-4.4762 -1.4074,-0.7678 -2.8381,0.2197 -3.8547,1.0217 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 5.3115,19.4231 c 0.2783,2.1257 0.2789,4.4254 5e-4,6.5926 -1.717,-0.2109 -2.2865,-2.2725 -2.6229,-3.5658 -0.5808,-2.2324 -0.1914,-5.116 0.94,-7.2862 1.4139,0.7827 1.5046,2.9007 1.6824,4.2594 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 6.7907,27.756 c -1.235,1.8091 -1.6693,4.6442 -1.1139,6.923 1.632,-0.3864 2.441,-2.2341 3.0906,-3.539 0.8633,-1.7343 1.593,-3.7576 1.8542,-5.7427 -1.7701,-0.3684 -3.0174,1.1669 -3.8309,2.3587 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 3.5487,27.5731 c 0.9622,2.2277 1.7131,4.6796 2.1525,7.1004 C 3.8295,35.0756 2.4824,33.1102 1.6998,31.807 0.3065,29.4872 -0.0994,26.2713 0.411,23.4961 c 1.7131,0.3435 2.5514,2.72 3.1377,4.077 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 7.6546,35.6271 c -0.6631,2.1946 -0.2022,5.1781 1.1404,7.2413 1.4754,-0.9606 1.6796,-3.0748 1.8887,-4.5907 0.2757,-2.0004 0.4055,-4.2164 0.063,-6.2907 -1.8871,0.2409 -2.6492,2.174 -3.0921,3.6401 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 4.3752,36.5666 C 6.0308,38.4663 7.558,40.6323 8.8175,42.8542 7.1093,43.9206 5.1048,42.4637 3.8891,41.4327 1.7324,39.6038 0.332,36.4953 0,33.5647 c 1.7948,-0.2412 3.3765,1.8558 4.3752,3.0019 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 11.1341,43.0967 c 0.1423,2.5545 1.8054,5.235 4.0198,6.7607 1.0694,-1.4641 0.3991,-3.7074 0.0343,-5.2733 -0.4911,-2.1083 -1.1708,-4.3037 -2.1809,-6.2517 -1.7614,0.9308 -1.9669,3.082 -1.8732,4.7643 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 8.1558,45.2545 c 2.3991,1.3331 4.7913,2.9062 7.0155,4.5801 -1.332,1.754 -3.9944,1.0546 -5.6448,0.4908 C 6.6181,49.3319 4.0252,46.7129 2.6709,43.8032 4.388,42.9187 6.7386,44.467 8.1558,45.2545 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 17.9669,49.3374 c 1.4399,2.6278 4.7212,4.3421 7.8112,4.7548 0.3326,-1.9104 -1.7345,-3.8019 -2.8609,-5.0393 -1.6037,-1.7617 -3.2748,-3.5899 -5.1484,-5.1131 -1.4037,1.6298 -0.6616,3.8287 0.1981,5.3976 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 15.9105,52.6678 c 3.2731,0.3403 6.6017,0.8302 9.8729,1.3951 -0.3123,2.4104 -4.1374,2.7994 -5.8739,2.9417 -3.5605,0.2918 -7.5213,-1.1394 -10.2792,-3.5488 1.3698,-1.6118 4.5367,-0.9692 6.2802,-0.788 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 22.2149,3.624 C 20.0174,4.2509 17.4452,5.4402 16.1745,7.6356 18.481,7.3842 20.7479,6.5635 22.9648,5.9382 25.448,5.2377 28.0627,4.7138 30.4669,3.7469 27.8339,2.6935 24.7301,2.9064 22.2149,3.624 Z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"M 64.728,33.5923 C 66.565,22.0973 61.203,10.7419 50.488,5.8667 l 0.1,-0.2196 C 61.412,10.5718 66.819,22.0395 64.966,33.6304 62.913,46.4789 52.541,54.1749 39.8796,54.5455 l -0.007,-0.2412 C 52.436,53.9366 62.695,46.3096 64.728,33.5923 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 52.935,8.6052 c 2,0.0456 4.341,1.1736 5.723,2.812 -1.108,1.0287 -2.891,0.6484 -4.173,0.438 -1.831,-0.3002 -3.778,-0.8818 -5.505,-1.7051 0.71,-1.512 2.623,-1.5752 3.955,-1.5449 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 54.508,6.1376 c 1.185,1.8456 2.597,3.6799 4.133,5.2952 1.286,-1.2068 0.51,-3.2151 -0.015,-4.464 -0.95,-2.263 -3.229,-4.2145 -5.612,-5.213 -0.654,1.4877 0.767,3.249 1.494,4.3818 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 58.724,13.7807 c 1.873,0.6658 3.482,2.54 4.29,4.4216 -1.347,0.6262 -2.878,-0.2781 -3.998,-0.8802 -1.538,-0.8268 -3.107,-1.9676 -4.341,-3.2878 1.115,-1.177 2.809,-0.6942 4.049,-0.2536 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 60.994,11.9365 c 0.41,2.105 1.097,4.2868 2,6.2754 1.576,-0.7432 1.516,-2.8718 1.448,-4.2264 -0.115,-2.3121 -1.408,-4.9487 -3.209,-6.6243 -1.103,1.182 -0.5,3.2344 -0.239,4.5753 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 62.327,20.4625 c 1.561,1.2312 2.507,3.5129 2.726,5.5504 -1.476,0.1695 -2.656,-1.1741 -3.534,-2.0959 -1.196,-1.2551 -2.328,-2.8293 -3.046,-4.4762 1.407,-0.7678 2.838,0.2197 3.854,1.0217 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 65.032,19.4231 c -0.279,2.1255 -0.279,4.4254 -10e-4,6.5926 1.717,-0.2109 2.287,-2.2725 2.623,-3.5658 0.581,-2.2324 0.191,-5.116 -0.94,-7.2862 -1.414,0.7827 -1.505,2.9007 -1.682,4.2594 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 63.552,27.756 c 1.235,1.8091 1.669,4.6442 1.114,6.923 -1.632,-0.3864 -2.441,-2.234 -3.091,-3.539 -0.863,-1.7343 -1.593,-3.7576 -1.854,-5.7427 1.77,-0.3684 3.018,1.1669 3.831,2.3587 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 66.794,27.5731 c -0.962,2.2277 -1.713,4.6796 -2.152,7.1004 1.871,0.4021 3.218,-1.5633 4.001,-2.8665 1.393,-2.3198 1.799,-5.5357 1.289,-8.3109 -1.713,0.3435 -2.552,2.72 -3.138,4.077 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 62.688,35.6271 c 0.663,2.1946 0.203,5.1781 -1.14,7.2413 -1.475,-0.9606 -1.68,-3.0748 -1.889,-4.5907 -0.275,-2.0004 -0.405,-4.2164 -0.063,-6.2907 1.887,0.2409 2.649,2.174 3.092,3.6401 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 65.967,36.5666 c -1.655,1.8998 -3.182,4.0657 -4.442,6.2876 1.708,1.0664 3.713,-0.3905 4.929,-1.4215 2.156,-1.8289 3.557,-4.9374 3.889,-7.868 -1.795,-0.2412 -3.377,1.8558 -4.376,3.0019 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 59.208,43.0967 c -0.142,2.5545 -1.805,5.235 -4.019,6.7607 -1.07,-1.4641 -0.399,-3.7073 -0.035,-5.2733 0.491,-2.1083 1.171,-4.3037 2.181,-6.2517 1.762,0.9308 1.967,3.082 1.873,4.7643 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 62.187,45.2545 c -2.399,1.3331 -4.791,2.9062 -7.015,4.5801 1.332,1.754 3.994,1.0546 5.644,0.4908 2.909,-0.9935 5.502,-3.6125 6.856,-6.5222 -1.717,-0.8845 -4.068,0.6638 -5.485,1.4513 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 52.376,49.3374 c -1.44,2.6278 -4.721,4.3421 -7.8114,4.7548 -0.3326,-1.9104 1.7344,-3.8019 2.8614,-5.0393 1.603,-1.7617 3.274,-3.5899 5.148,-5.1131 1.404,1.6298 0.661,3.8287 -0.198,5.3976 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 54.432,52.6678 c -3.273,0.3403 -6.601,0.8302 -9.8728,1.3951 0.3124,2.4104 4.1378,2.7994 5.8738,2.9417 3.561,0.2918 7.522,-1.1394 10.279,-3.5488 -1.369,-1.6118 -4.536,-0.9692 -6.28,-0.788 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 48.128,3.624 c 2.197,0.6269 4.77,1.8162 6.04,4.0116 C 51.862,7.3842 49.595,6.5635 47.378,5.9382 44.8948,5.2377 42.2801,4.7138 39.8759,3.7469 42.509,2.6935 45.6127,2.9064 48.128,3.624 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 36.6004,2.4879 35.4729,0 34.3666,2.4416 31.7937,0.8464 33.447,4.3207 h 4.1116 l 1.5936,-3.4743 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 37.5322,4.8606 h -4.1181 v 0.6077 h 4.1181 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 35.7674,51.8718 0.6636,2.0422 h 2.1473 l -1.7372,1.2621 0.6635,2.0422 -1.7372,-1.2621 -1.7372,1.2621 0.6636,-2.0422 -1.7372,-1.2621 h 2.1473 z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 97.668839 46.443401\"\n   fill=\"none\">\n  <path\n     d=\"m 5.0312209,9.1781 c -0.6353,-1.6146 -0.3595,-3.4711 0.2257,-5.0325 0.6157,-1.643 1.6878,-3.2815 3.2902,-4.1456 0.0795,1.7314 -0.4494,3.442 -1.0273,4.9845 -0.5197,1.3874 -1.1574,2.8655 -2.2104,4.0129 -0.1618,0.8694 -0.2858,1.7364 -0.373,2.5994 0.349,-0.9117 0.9149,-1.7427 1.621,-2.4109 0.9091,-0.8604 2.2614,-1.5243 3.5308001,-1.1317 -0.3718001,1.4032 -1.2193001,2.7483 -2.2230001,3.6919 -0.79,0.7427 -1.8329,1.6944 -3.0613,1.7318 -0.0506,1.27 -0.022,2.5284 0.0825,3.7697 0.1733,-0.9084 0.5446,-1.7638 1.0811,-2.4008 0.737,-0.8753 1.8298,-1.9447 3.2254,-1.7658 -0.0762,1.4202 -0.6427,2.8753 -1.4316,3.9687 -0.6269,0.8689 -1.4545,1.9763 -2.6292,2.2624 0.1881,1.2197 0.4501,2.4192 0.7825,3.5929 0.0032,-0.8987 0.2017,-1.7808 0.5955,-2.4883 0.555,-0.9977 1.4194,-2.2419 2.8166,-2.3392 0.2048,1.3933 -0.0727,2.9164 -0.6325,4.1278 -0.4474,0.9683 -1.0439,2.2031 -2.1312,2.714 0.4566,1.2628 0.9969,2.4903 1.6164,3.6751 -0.2175,-1.0212 -0.2088,-2.0973 0.0486,-3.0655 0.3547,-1.3348 1.2352,-2.7369 2.6488001,-3.1438 0.4997,1.4736 0.4308,3.1182 0.1405,4.616 -0.2389,1.2332 -0.7083,2.6816 -1.7605001,3.4827 0.6879,1.1101 1.4489001,2.1755 2.2788001,3.1892 -0.4459,-0.9942 -0.6675,-2.0815 -0.5486,-3.077 0.1732,-1.4502 0.5807,-3.0016 2.062,-3.7748 0.8404,1.45 1.0351,3.0767 1.1065,4.6834 0.0577,1.2989 -0.1294,2.901 -1.0315,3.9577 0.9923,1.0317 2.063,1.9973 3.2066,2.8877 -0.7383,-0.9471 -1.2553,-2.0585 -1.3648,-3.1576 -0.1546,-1.5529 -0.079,-3.2624 1.2991,-4.402 1.1786,1.231 1.8819,3.0439 2.2266,4.6185 0.3048,1.3922 0.623,3.04 -0.1027,4.4101 1.4554,0.95 3.0091,1.787 4.6518,2.4958 -1.1559,-0.8237 -2.1021,-1.9538 -2.5529,-3.1206 -0.5907,-1.5295 -0.9561,-3.352 0.1946,-4.8838 1.5417,0.9875 2.6748,2.6723 3.5675,4.2089 0.766,1.3185 1.5589,3.1383 1.1655,4.7086 0.9095,0.3086 1.8425,0.5796 2.7978,0.8108 l -0.0568,0.2345 c -0.9589,-0.2321 -1.8955,-0.504 -2.8087,-0.8135 -0.6398,1.8907 -2.7357,2.5153 -4.4307,2.7911 -2.4151,0.3929 -5.2908,-0.3684 -7.3526,-1.902 1.0882,-1.5379 3.3085,-1.6939 4.9827,-1.8116 l 0.0218,-0.0015 c 1.8341,-0.1289 3.8178,0.0433 5.6622,0.5225 -2.1307,-0.8111 -4.1244,-1.8309 -5.9628,-3.0298 l -0.0271,0.0428 c -1.0074,1.6335 -3.03,1.6972 -4.6176,1.5939 -2.1543,-0.1402 -4.6415001,-1.4501 -6.0810001,-3.2608 1.354,-1.188 3.3539001,-0.8555 4.9035001,-0.5979 l 0.0075,0.0012 c 1.7295,0.2875 3.6194,0.9147 5.2058,1.8804 -0.1511,-0.119 -0.299,-0.2449 -0.4427,-0.3769 -1.5424,-1.0997 -2.9652,-2.3298 -4.2563,-3.671 -0.015,0.015 -0.0302,0.0299 -0.0455,0.0447 -1.2554,1.2629 -3.0838001,0.9322 -4.5107001,0.5212 -1.9095,-0.55 -3.8898,-2.2093 -4.8388,-4.1142 1.4706,-0.824 3.2288,-0.145 4.5964,0.3921 1.501,0.5895 3.0891001,1.5325 4.3102001,2.7346 -0.1259,-0.1588 -0.246,-0.3247 -0.3595,-0.4964 -1.135,-1.281 -2.1560001,-2.6527 -3.0536001,-4.0998 l -0.045,0.0282 c -1.4202,0.9165 -3.0293,0.2528 -4.3046,-0.3999 -1.7291,-0.8849 -3.1186,-2.8297 -3.719,-4.7423 1.5339,-0.4913 3.0494,0.473 4.2275,1.2367 1.2885,0.8352 2.5937,2.0264 3.4896,3.3925 -0.0658,-0.1346 -0.1271,-0.2722 -0.1836,-0.4124 -0.8608,-1.5018 -1.5921,-3.0784 -2.1841,-4.7139 l -0.0305,0.0104 -0.0025,9e-4 c -1.2913,0.4909 -2.7293,-0.2723 -3.6668,-1.1093 -1.303,-1.1632 -2.2214,-2.9515 -2.4367,-4.6986 1.3463,-0.1744 2.6147,0.8672 3.4819,1.7556 0.9982,1.0225 1.8941,2.231 2.4449,3.5733 -0.0402,-0.1458 -0.0747,-0.2939 -0.1037,-0.4435 -0.5012,-1.5369 -0.8809,-3.1219 -1.1312,-4.7423 l -0.0195,0.0024 -0.0066,0.0011 c -1.3652,0.2279 -2.6274,-0.81 -3.3815,-1.8173 -1.058,-1.4135 -1.6034,-3.3698 -1.4667,-5.1429 1.3599,0.0951 2.3954,1.3888 3.0669,2.4353 0.7772,1.2115 1.4217,2.5826 1.704,4.017 -0.0086,-0.1141 -0.0137,-0.2289 -0.0155,-0.344 -0.2073,-1.6492 -0.2812,-3.3322 -0.2136,-5.036 l -0.0039,-2e-4 c -1.388,-0.05 -2.4138,-1.3387 -2.9434,-2.4818 -0.7578,-1.6358 -0.8798,-3.7035 -0.374,-5.4461 1.3229,0.3713 2.0604,1.8888 2.4957,3.0569 0.5019,1.3468 0.8522,2.8157 0.855,4.2761 0.0722,-1.2252 0.2176,-2.4601 0.4393,-3.7001 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 32.368421,6.1554 v 5.8498 c 0,2.5729 -2.3302,3.8108 -5.8619,3.8108 -3.3011,0 -5.6677,-1.2257 -5.6677,-4.1142 V 6.1554 h 3.289 v 5.5464 c 0,1.0316 0.8859,1.6748 2.5122,1.6748 1.5535,0 2.4759,-0.6675 2.4759,-1.6627 V 6.1554 Z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 43.322321,13.146 v 2.5365 h -9.0902 V 6.1554 h 3.289 v 6.9906 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 53.096821,8.5463 V 6.1554 h -11.3719 v 2.3909 h 4.0172 v 7.1362 h 3.3254 V 8.5463 Z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 64.763021,7.1264 c 0.437,0.449 0.644,1.068 0.644,1.9296 0,0.7404 -0.182,1.3715 -0.486,1.7962 -0.34,0.4612 -0.862,0.8496 -1.505,0.9467 l 2.877,3.8836 h -3.617 l -2.367,-3.3618 h -2.9488 v 3.3618 h -3.2405 V 6.1554 h 7.5853 c 1.505,0 2.488,0.3641 3.058,0.971 z m -2.621,2.7307 c 0.085,-0.1457 0.109,-0.3399 0.109,-0.4976 0,-0.1821 -0.024,-0.3763 -0.109,-0.4976 -0.17,-0.3156 -0.51,-0.4005 -1.02,-0.4005 h -3.7497 v 1.7355 h 3.8107 c 0.522,0 0.838,-0.0971 0.959,-0.3398 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 70.671021,13.9228 h 5.146 l 0.837,1.7597 h 3.508 l -4.806,-9.5271 h -3.92 l -5.085,9.5271 h 3.434 z m 4.114,-2.1361 h -3.046 l 1.202,-2.2937 0.364,-0.8739 0.34,0.8617 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 64.416021,17.4768 c -2.036,0 -3.107,0.965 -3.107,2.383 0,1.6005 1.124,2.4124 3.107,2.4124 2.183,0 3.101,-0.9414 3.101,-2.4124 0,-1.4945 -1.036,-2.383 -3.101,-2.383 z m 0,3.6128 c -1.159,0 -1.495,-0.4766 -1.495,-1.2121 0,-0.7237 0.365,-1.2003 1.489,-1.2003 1.23,0 1.506,0.5354 1.506,1.2003 0,0.7061 -0.335,1.2121 -1.5,1.2121 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 58.291321,22.2016 v -2.736 h -3.0714 V 20.46 h 1.6416 c -0.0117,0.0765 -0.0706,0.2236 -0.1471,0.3118 -0.1706,0.2001 -0.6237,0.3766 -1.2121,0.3766 -0.6119,0 -1.0061,-0.1589 -1.2179,-0.406 -0.1412,-0.1824 -0.2236,-0.4413 -0.2236,-0.8296 0,-0.406 0.0824,-0.6825 0.2412,-0.8649 0.2295,-0.2589 0.6178,-0.3707 1.1886,-0.3707 0.5119,0 0.8649,0.1176 1.0297,0.2647 0.1059,0.0883 0.1882,0.2119 0.2059,0.2942 h 1.5239 c -0.0058,-0.1471 -0.0529,-0.3824 -0.1353,-0.553 -0.3648,-0.7414 -1.2121,-1.1827 -2.6536,-1.1827 -1.2533,0 -2.0947,0.3824 -2.5595,0.9591 -0.306,0.3942 -0.4472,0.8884 -0.4472,1.4415 0,0.612 0.1647,1.1356 0.4354,1.4828 0.4589,0.5943 1.2768,0.8884 2.2594,0.8884 0.865,0 1.4592,-0.2059 1.8358,-0.5177 l 0.0412,0.4471 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 42.263221,19.4068 c 1.1944,0.1294 1.7063,0.5531 1.7063,1.3592 0,0.9767 -0.9532,1.5062 -2.8302,1.5062 -1.7475,0 -2.5006,-0.4942 -2.789,-1.1414 -0.0647,-0.153 -0.0941,-0.3413 -0.1118,-0.459 h 1.6946 c 0.0118,0.0706 0.053,0.1765 0.1118,0.2471 0.1412,0.1707 0.5354,0.2707 1.2062,0.2707 0.865,0 1.0709,-0.1236 1.0709,-0.353 0,-0.2472 -0.2118,-0.3001 -0.9944,-0.3825 -0.3118,-0.0294 -0.8061,-0.0765 -1.012,-0.0941 -1.4945,-0.1354 -2.0476,-0.6002 -2.0476,-1.3945 0,-0.8238 0.9767,-1.4533 2.7595,-1.4533 1.5828,0 2.3183,0.4707 2.6243,1.0591 0.0941,0.1765 0.1529,0.3765 0.1706,0.5177 h -1.6946 c -0.0059,-0.0647 -0.0294,-0.1294 -0.0941,-0.2118 -0.1295,-0.1706 -0.459,-0.2824 -1.0474,-0.2824 -0.8296,0 -1.0473,0.1 -1.0473,0.3118 0,0.2354 0.2766,0.2884 1.2003,0.3884 0.3589,0.0294 0.9297,0.0882 1.1239,0.1118 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 25.370721,17.977 c 0.3118,0.2471 0.4883,0.6649 0.4883,1.2709 0,0.4943 -0.1235,0.8649 -0.3589,1.1238 -0.3177,0.3648 -0.8414,0.5296 -1.5239,0.5355 -0.2119,0.0059 -2.0241,0 -2.0241,0 v 1.2944 h -1.5828 v -4.6188 h 3.5833 c 0.6355,0 1.118,0.1294 1.4181,0.3942 z m -1.1709,1.6298 c 0.047,-0.0823 0.0706,-0.1883 0.0706,-0.3354 0,-0.1529 -0.0295,-0.2824 -0.0824,-0.353 -0.1,-0.1471 -0.2883,-0.2177 -0.5943,-0.2177 h -1.6534 v 1.1297 h 1.6416 c 0.3295,0 0.5237,-0.0765 0.6179,-0.2236 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 31.649021,18.0535 c 0.2119,0.2177 0.3119,0.5178 0.3119,0.9355 0,0.3589 -0.0883,0.6649 -0.2354,0.8708 -0.1647,0.2236 -0.4177,0.4119 -0.7296,0.459 l 1.3945,1.8828 h -1.7534 l -1.1474,-1.6298 h -1.4298 v 1.6298 h -1.571 v -4.6188 h 3.6775 c 0.7296,0 1.2062,0.1765 1.4827,0.4707 z m -1.2709,1.3239 c 0.0412,-0.0706 0.0529,-0.1648 0.0529,-0.2413 0,-0.0882 -0.0117,-0.1824 -0.0529,-0.2412 -0.0824,-0.153 -0.2471,-0.1942 -0.4942,-0.1942 h -1.8182 v 0.8414 h 1.8476 c 0.253,0 0.406,-0.0471 0.4648,-0.1647 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 37.761621,22.2016 v -1.1473 h -3.3126 v -0.6002 h 3.1773 v -1.1238 h -3.1773 V 18.736 h 3.2714 v -1.1532 h -4.8248 v 4.6188 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 49.695221,18.7419 v -1.1591 h -5.5132 v 1.1591 h 1.9475 v 3.4597 h 1.6122 v -3.4597 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 51.815121,17.5828 v 4.6188 h -1.6181 v -4.6188 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 60.670021,17.5828 v 4.6188 h -1.6184 v -4.6188 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 73.760021,17.5828 v 2.836 c 0,1.2474 -1.13,1.8476 -2.842,1.8476 -1.6,0 -2.748,-0.5943 -2.748,-1.9947 v -2.6889 h 1.595 v 2.6889 c 0,0.5001 0.429,0.812 1.218,0.812 0.753,0 1.2,-0.3236 1.2,-0.8061 v -2.6948 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 80.112021,20.766 c 0,-0.8061 -0.512,-1.2298 -1.706,-1.3592 -0.195,-0.0236 -0.765,-0.0824 -1.124,-0.1118 -0.924,-0.1 -1.201,-0.153 -1.201,-0.3884 0,-0.2118 0.218,-0.3118 1.048,-0.3118 0.588,0 0.918,0.1118 1.047,0.2824 0.065,0.0824 0.088,0.1471 0.094,0.2118 h 1.695 c -0.018,-0.1412 -0.077,-0.3412 -0.171,-0.5177 -0.306,-0.5884 -1.041,-1.0591 -2.624,-1.0591 -1.783,0 -2.76,0.6295 -2.76,1.4533 0,0.7943 0.554,1.2591 2.048,1.3945 l 0.096,0.0085 0.16,0.0146 0.756,0.071 c 0.783,0.0824 0.994,0.1353 0.994,0.3825 0,0.2294 -0.205,0.353 -1.07,0.353 -0.671,0 -1.065,-0.1 -1.207,-0.2707 -0.058,-0.0706 -0.1,-0.1765 -0.111,-0.2471 h -1.695 c 0.018,0.1177 0.047,0.306 0.112,0.459 0.288,0.6472 1.041,1.1414 2.789,1.1414 1.877,0 2.83,-0.5295 2.83,-1.5062 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 38.966621,23.9701 c -1.3231,0 -2.0191,0.6272 -2.0191,1.5488 0,1.0401 0.7304,1.5678 2.0191,1.5678 1.4188,0 2.0153,-0.6118 2.0153,-1.5678 0,-0.9713 -0.673,-1.5488 -2.0153,-1.5488 z m 0,2.348 c -0.7533,0 -0.9713,-0.3098 -0.9713,-0.7878 0,-0.4703 0.2371,-0.7801 0.9675,-0.7801 0.7992,0 0.979,0.348 0.979,0.7801 0,0.4589 -0.218,0.7878 -0.9752,0.7878 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 31.608521,26.1078 c 0,-0.5239 -0.3327,-0.7993 -1.109,-0.8834 -0.1262,-0.0153 -0.4971,-0.0535 -0.7304,-0.0726 -0.6004,-0.0651 -0.7801,-0.0995 -0.7801,-0.2524 0,-0.1377 0.1415,-0.2027 0.6807,-0.2027 0.3824,0 0.5965,0.0726 0.6807,0.1835 0.042,0.0536 0.0573,0.0956 0.0612,0.1377 h 1.1013 c -0.0115,-0.0918 -0.0497,-0.2218 -0.1109,-0.3365 -0.1989,-0.3824 -0.6769,-0.6883 -1.7056,-0.6883 -1.1586,0 -1.7934,0.4091 -1.7934,0.9445 0,0.5163 0.3594,0.8184 1.3307,0.9063 0.1339,0.0115 0.4551,0.0421 0.6578,0.0612 0.5086,0.0535 0.6462,0.088 0.6462,0.2486 0,0.1491 -0.1338,0.2294 -0.6959,0.2294 -0.436,0 -0.6922,-0.065 -0.784,-0.1759 -0.0382,-0.0459 -0.065,-0.1147 -0.0726,-0.1606 h -1.1014 c 0.0115,0.0765 0.0306,0.1988 0.0727,0.2983 0.1874,0.4206 0.6769,0.7418 1.8126,0.7418 1.2199,0 1.8394,-0.3441 1.8394,-0.9789 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 23.973121,26.1919 c 0,0.2065 -0.0574,0.4092 -0.1721,0.543 -0.1759,0.2142 -0.5048,0.3059 -0.9292,0.3059 h -2.6654 v -3.0019 h 2.5927 c 0.413,0 0.6769,0.0995 0.8222,0.2486 0.13,0.13 0.1874,0.3021 0.1874,0.4971 0,0.1951 -0.0459,0.3557 -0.1453,0.4742 -0.0804,0.0995 -0.218,0.1759 -0.3633,0.1951 0.2141,0.0267 0.4168,0.1338 0.5315,0.2829 0.0956,0.1109 0.1415,0.2792 0.1415,0.4551 z m -1.2887,-1.0516 c 0.0382,-0.0421 0.0612,-0.1033 0.0612,-0.1759 0,-0.0727 -0.023,-0.1339 -0.0727,-0.1759 -0.0535,-0.0498 -0.153,-0.0689 -0.2983,-0.0689 h -1.1663 v 0.4895 h 1.1931 c 0.13,0 0.2295,-0.0191 0.283,-0.0688 z m -0.1721,1.2199 c 0.1797,0 0.2868,-0.023 0.348,-0.0803 0.0382,-0.0383 0.0535,-0.0956 0.0535,-0.1683 0,-0.0765 -0.0191,-0.1338 -0.065,-0.1797 -0.0573,-0.0497 -0.1568,-0.0727 -0.325,-0.0727 h -1.3155 v 0.501 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 27.573921,26.2952 v 0.7456 h -3.1625 v -3.0019 h 3.1357 v 0.7496 h -2.1262 v 0.3862 h 2.065 v 0.7304 h -2.065 v 0.3901 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 35.329721,24.0389 v 0.7534 h -1.2696 v 2.2485 h -1.0477 v -2.2485 h -1.2658 v -0.7534 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 44.481221,24.0389 v 0.761 h -2.0382 v 0.4245 h 1.9426 v 0.7534 h -1.9426 v 1.063 h -1.0287 v -3.0019 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 49.662521,24.7923 v -0.7534 h -3.5831 v 0.7534 h 1.2658 v 2.2485 h 1.0478 v -2.2485 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 53.571921,24.0389 v 3.0019 h -1.0249 V 25.951 h -1.5373 v 1.0898 h -1.0248 v -3.0019 h 1.0248 v 1.0937 h 1.5373 v -1.0937 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 57.341221,27.0408 v -0.7456 h -2.153 v -0.3901 h 2.065 v -0.7304 h -2.065 v -0.3862 h 2.1262 v -0.7496 h -3.1357 v 3.0019 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 63.681021,24.0389 h 0.99 l -1.097,3.0019 h -1.124 c 0,0 -0.601,-1.7934 -0.605,-1.8432 -0.003,0.0498 -0.608,1.8432 -0.608,1.8432 h -1.12 l -1.1243,-3.0019 h 1.1123 c 0,0 0.651,1.8891 0.651,1.935 0,-0.0459 0.6,-1.935 0.6,-1.935 h 1.075 c 0,0 0.604,1.8891 0.604,1.935 0,-0.0459 0.646,-1.935 0.646,-1.935 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 66.635021,23.9701 c -1.323,0 -2.019,0.6272 -2.019,1.5488 0,1.0401 0.73,1.5678 2.019,1.5678 1.419,0 2.015,-0.6118 2.015,-1.5678 0,-0.9713 -0.673,-1.5488 -2.015,-1.5488 z m 0,2.348 c -0.753,0 -0.971,-0.3098 -0.971,-0.7878 0,-0.4703 0.237,-0.7801 0.967,-0.7801 0.8,0 0.979,0.348 0.979,0.7801 0,0.4589 -0.218,0.7878 -0.975,0.7878 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 72.437021,24.3449 c 0.137,0.1415 0.202,0.3365 0.202,0.608 0,0.2333 -0.057,0.4321 -0.153,0.566 -0.107,0.1453 -0.271,0.2677 -0.474,0.2982 l 0.906,1.2237 h -1.139 l -0.746,-1.0592 h -0.929 v 1.0592 h -1.021 v -3.0019 h 2.39 c 0.474,0 0.784,0.1148 0.964,0.306 z m -0.826,0.8604 c 0.026,-0.0459 0.034,-0.1071 0.034,-0.1568 0,-0.0574 -0.008,-0.1185 -0.034,-0.1568 -0.054,-0.0994 -0.161,-0.1262 -0.322,-0.1262 h -1.181 v 0.5469 h 1.2 c 0.165,0 0.264,-0.0306 0.303,-0.1071 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 76.111021,27.0408 v -0.7992 h -1.828 v -2.2027 h -1.036 v 3.0019 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 80.166021,25.4844 c 0,0.4666 -0.046,0.719 -0.183,0.9561 -0.207,0.3785 -0.616,0.6003 -1.339,0.6003 h -2.126 v -3.0019 h 2.103 c 0.719,0 1.144,0.2027 1.354,0.5507 0.149,0.2333 0.191,0.4818 0.191,0.8948 z m -1.717,0.8184 c 0.325,0 0.509,-0.0765 0.62,-0.2447 0.069,-0.1033 0.088,-0.3442 0.088,-0.5545 -0.004,-0.1912 -0.027,-0.3939 -0.088,-0.4857 -0.119,-0.1797 -0.298,-0.2447 -0.612,-0.2447 h -0.914 v 1.5296 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 39.144921,41.6405 h -1.5846 c 0,0 -1.034,3.0225 -1.034,3.0959 0,-0.0734 -0.9667,-3.0959 -0.9667,-3.0959 h -1.7193 c 0,0 -0.9606,3.0225 -0.9606,3.0959 0,-0.0734 -1.0401,-3.0959 -1.0401,-3.0959 h -1.7805 l 1.7988,4.8029 h 1.7927 c 0,0 0.9667,-2.8695 0.9728,-2.949 0.0062,0.0795 0.9667,2.949 0.9667,2.949 h 1.7988 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 41.313321,46.4434 v -4.8029 h -1.6826 v 4.8029 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 47.857921,41.6405 v 4.8029 h -1.6398 l -2.38,-2.6737 v 2.6737 h -1.5785 v -4.8029 h 1.7253 l 2.3066,2.6126 v -2.6126 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 54.412421,46.4434 v -4.8029 h -1.5663 v 2.6126 l -2.3066,-2.6126 h -1.7254 v 4.8029 h 1.5785 v -2.6737 l 2.3801,2.6737 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 60.429021,45.2503 v 1.1931 h -5.0604 v -4.8029 h 5.0174 v 1.1992 h -3.4021 v 0.618 h 3.3041 v 1.1686 h -3.3041 v 0.624 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 66.896021,43.1028 c 0,-0.4344 -0.104,-0.7464 -0.324,-0.9728 -0.288,-0.3059 -0.783,-0.4895 -1.542,-0.4895 h -3.824 v 4.8029 h 1.634 v -1.6948 h 1.487 l 1.193,1.6948 h 1.823 l -1.45,-1.9578 c 0.324,-0.049 0.587,-0.2448 0.759,-0.4773 0.152,-0.2141 0.244,-0.5323 0.244,-0.9055 z m -1.591,0.153 c 0,0.0795 -0.012,0.1774 -0.055,0.2508 -0.061,0.1224 -0.22,0.1713 -0.483,0.1713 h -1.921 V 42.803 h 1.89 c 0.257,0 0.429,0.0428 0.514,0.2019 0.043,0.0612 0.055,0.1591 0.055,0.2509 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 34.259521,33.1669 -0.6635,-2.0422 -0.6636,2.0422 h -2.1473 l 1.7372,1.2621 -0.6635,2.0422 1.7372,-1.2621 1.7371,1.2621 -0.6635,-2.0422 1.7372,-1.2621 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 41.256521,31.1234 0.6771,2.0422 h 2.1911 l -1.7726,1.2622 0.6771,2.0421 -1.7727,-1.2621 -1.7726,1.2621 0.6771,-2.0421 -1.7727,-1.2622 h 2.1911 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 49.533021,33.1656 -0.677,-2.0422 -0.6771,2.0422 h -2.1912 l 1.7727,1.2622 -0.6771,2.0421 1.7727,-1.2621 1.7726,1.2621 -0.6771,-2.0421 1.7727,-1.2622 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 56.455821,31.1234 0.6771,2.0422 h 2.1911 l -1.7726,1.2622 0.6771,2.0421 -1.7727,-1.2621 -1.7726,1.2621 0.6771,-2.0421 -1.7727,-1.2622 h 2.1912 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 64.780021,33.1656 -0.664,-2.0422 -0.664,2.0422 h -2.147 l 1.737,1.2622 -0.663,2.0421 1.737,-1.2621 1.737,1.2621 -0.663,-2.0421 1.737,-1.2622 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 92.638021,9.2224 c 0.635,-1.6145 0.359,-3.4712 -0.226,-5.0326 -0.616,-1.6429 -1.688,-3.2816 -3.29,-4.1457 -0.08,1.7315 0.449,3.442 1.027,4.9845 0.52,1.3873 1.157,2.8653 2.21,4.0126 0.162,0.8692 0.286,1.736 0.373,2.5988 -0.349,-0.9113 -0.914,-1.7419 -1.62,-2.4099 -0.909,-0.8605 -2.262,-1.5243 -3.531,-1.1317 0.372,1.4031 1.219,2.7483 2.223,3.6919 0.79,0.7427 1.833,1.6943 3.061,1.7318 0.051,1.2701 0.022,2.5286 -0.083,3.77 -0.173,-0.9084 -0.544,-1.7638 -1.081,-2.4008 -0.737,-0.8754 -1.83,-1.9447 -3.225,-1.7658 0.076,1.4202 0.643,2.8753 1.432,3.9687 0.626,0.8689 1.454,1.9764 2.629,2.2625 -0.188,1.2195 -0.45,2.4188 -0.783,3.5924 -0.003,-0.8986 -0.201,-1.7807 -0.595,-2.4882 -0.555,-0.9976 -1.42,-2.2419 -2.817,-2.3392 -0.205,1.3933 0.073,2.9164 0.633,4.1278 0.447,0.9683 1.044,2.2031 2.131,2.714 -0.457,1.263 -0.997,2.4908 -1.617,3.6757 0.218,-1.0214 0.209,-2.0977 -0.048,-3.0662 -0.355,-1.3348 -1.235,-2.737 -2.649,-3.1438 -0.5,1.4738 -0.431,3.1182 -0.14,4.616 0.239,1.2333 0.708,2.6817 1.76,3.4828 -0.688,1.1107 -1.449,2.1766 -2.28,3.1908 0.447,-0.9946 0.668,-2.0825 0.549,-3.0784 -0.173,-1.4504 -0.58,-3.0017 -2.061,-3.7747 -0.841,1.45 -1.036,3.0767 -1.107,4.6834 -0.058,1.299 0.129,2.9012 1.032,3.958 -0.993,1.0314 -2.063,1.9967 -3.206,2.8869 0.738,-0.9471 1.255,-2.0584 1.364,-3.1574 0.155,-1.5529 0.08,-3.2623 -1.299,-4.402 -1.178,1.231 -1.882,3.0439 -2.226,4.6185 -0.305,1.3921 -0.623,3.04 0.102,4.4101 -1.455,0.9502 -3.009,1.7873 -4.652,2.4963 1.156,-0.8238 2.102,-1.9541 2.553,-3.1211 0.591,-1.5294 0.956,-3.352 -0.194,-4.8838 -1.542,0.9875 -2.675,2.6722 -3.568,4.2089 -0.766,1.3186 -1.559,3.1385 -1.165,4.7088 -0.91,0.3086 -1.843,0.5796 -2.798,0.8108 l 0.057,0.2345 c 0.958,-0.2321 1.895,-0.504 2.808,-0.8135 0.64,1.8906 2.736,2.5154 4.431,2.7911 2.415,0.3929 5.291,-0.3683 7.353,-1.902 -1.089,-1.5379 -3.309,-1.6939 -4.983,-1.8116 l -0.022,-0.0015 c -1.834,-0.1289 -3.818,0.0433 -5.662,0.5226 2.13,-0.8111 4.124,-1.8311 5.963,-3.0301 l 0.025,0.04 c 1.007,1.6362 3.031,1.7002 4.619,1.5968 2.155,-0.1402 4.642,-1.4501 6.081,-3.2608 -1.354,-1.1878 -3.353,-0.8555 -4.903,-0.598 l -0.008,0.0014 c -1.729,0.2874 -3.618,0.9143 -5.204,1.8797 0.151,-0.1189 0.298,-0.2446 0.442,-0.3765 1.542,-1.0995 2.964,-2.3294 4.255,-3.6704 0.018,0.0179 0.036,0.0355 0.054,0.053 1.256,1.2531 3.079,0.9225 4.503,0.5124 1.91,-0.55 3.89,-2.2093 4.839,-4.1142 -1.471,-0.824 -3.229,-0.1451 -4.596,0.3921 -1.503,0.59 -3.092,1.5341 -4.314,2.7378 0.126,-0.159 0.247,-0.3252 0.361,-0.4972 1.135,-1.2817 2.157,-2.6542 3.055,-4.1022 l 0.039,0.0241 0.01,0.0063 c 1.419,0.9132 3.027,0.2501 4.301,-0.4021 1.729,-0.8849 3.119,-2.8297 3.719,-4.7423 -1.534,-0.4913 -3.049,0.473 -4.227,1.2367 -1.29,0.8357 -2.596,2.0277 -3.492,3.3948 0.066,-0.1349 0.128,-0.2729 0.185,-0.4134 0.861,-1.5023 1.592,-3.0793 2.184,-4.7152 l 0.031,0.0104 0.005,0.002 c 1.291,0.4887 2.728,-0.274 3.665,-1.1104 1.302,-1.1632 2.221,-2.9515 2.436,-4.6986 -1.346,-0.1744 -2.615,0.8672 -3.482,1.7555 -0.998,1.0232 -1.895,2.2325 -2.446,3.5759 0.041,-0.1466 0.076,-0.2955 0.105,-0.446 0.501,-1.5368 0.881,-3.1217 1.131,-4.7419 l 0.038,0.005 c 1.36,0.2202 2.618,-0.8147 3.37,-1.8192 1.058,-1.4135 1.603,-3.3698 1.466,-5.143 -1.359,0.0952 -2.395,1.3888 -3.066,2.4354 -0.778,1.2121 -1.423,2.584 -1.705,4.0193 0.009,-0.1148 0.014,-0.2302 0.016,-0.346 0.207,-1.6493 0.281,-3.3324 0.213,-5.0362 1.389,-0.0487 2.418,-1.3383 2.948,-2.4819 0.757,-1.6357 0.879,-3.7035 0.374,-5.446 -1.323,0.3713 -2.061,1.8886 -2.496,3.0567 -0.502,1.3468 -0.852,2.8159 -0.855,4.2763 -0.072,-1.2252 -0.218,-2.4602 -0.439,-3.7003 z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color = '#394149';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 126.20127 41.429298\"\n   fill=\"none\">\n  <path\n     d=\"m 10.761974,17.2335 c -0.0365,0.8568 -0.0547,1.9416 -0.0547,3.2542 0,1.3126 0.0182,2.4064 0.0547,3.2815 0.0364,0.8569 0.1093,1.5405 0.2187,2.051 0.1276,0.5104 0.3008,0.8659 0.5196,1.0665 0.237,0.2005 0.5469,0.3008 0.9298,0.3008 0.3828,0 0.6836,-0.1003 0.9024,-0.3008 0.237,-0.2006 0.4102,-0.5561 0.5196,-1.0665 0.1276,-0.5105 0.2096,-1.1941 0.2461,-2.051 0.0365,-0.8751 0.0547,-1.9689 0.0547,-3.2815 0,-1.3126 -0.0182,-2.3974 -0.0547,-3.2542 -0.0365,-0.8751 -0.1185,-1.5679 -0.2461,-2.0783 -0.1094,-0.5105 -0.2826,-0.866 -0.5196,-1.0665 -0.2188,-0.2006 -0.5196,-0.3009 -0.9024,-0.3009 -0.3829,0 -0.6928,0.1003 -0.9298,0.3009 -0.2188,0.2005 -0.392,0.556 -0.5196,1.0665 -0.1094,0.5104 -0.1823,1.2032 -0.2187,2.0783 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"M 11.730774,0.1733 C 5.136974,0.3144 -0.10422603,5.7556 0.00157397,12.35 l 0.13,8.1024 -0.13,8.1024 c -0.1058,6.5945 5.13540003,12.0357 11.72920003,12.1767 l 8.1036,0.1734 8.1036,-0.1734 c 6.5938,-0.141 11.8351,-5.5822 11.7293,-12.1767 l -0.13,-8.1024 0.13,-8.1024 c 0.1058,-6.5944 -5.1355,-12.0356 -11.7293,-12.1767 L 19.834374,0 Z m 8.3836,30.5965 -3.0628,2.6526 -2.7893,-3.0081 c -0.2188,0.0365 -0.4376,0.0639 -0.6563,0.0821 -0.2006,0.0364 -0.4285,0.0547 -0.6837,0.0547 h -0.4922 c -1.2944,0 -2.3883,-0.1732 -3.2816,-0.5196 -0.8933,-0.3464 -1.6134,-0.9207 -2.1603,-1.7228 -0.5469,-0.8204 -0.9389,-1.8687 -1.1759,-3.1448 -0.237,-1.2944 -0.3555,-2.8532 -0.3555,-4.6762 0,-1.8231 0.1185,-3.3727 0.3555,-4.6489 0.237,-1.2944 0.629,-2.3426 1.1759,-3.1448 0.5469,-0.8204 1.267,-1.4129 2.1603,-1.7775 0.8933,-0.3829 1.9872,-0.5743 3.2816,-0.5743 1.2944,0 2.3882,0.1914 3.2815,0.5743 0.8933,0.3646 1.6135,0.9571 2.1604,1.7775 0.5469,0.8022 0.9389,1.8504 1.1759,3.1448 0.237,1.2762 0.3555,2.8258 0.3555,4.6489 0,1.8777 -0.1276,3.4638 -0.3829,4.7582 -0.2552,1.2944 -0.6745,2.3518 -1.2579,3.1722 z m 8.6322,-13.0168 v -1.0938 c 0,-1.1121 -0.1094,-1.8687 -0.3282,-2.2697 -0.2187,-0.4011 -0.5742,-0.6017 -1.0665,-0.6017 -0.3828,0 -0.6927,0.1003 -0.9297,0.3009 -0.2188,0.2005 -0.392,0.556 -0.5196,1.0665 -0.1094,0.5104 -0.1823,1.2032 -0.2188,2.0783 -0.0365,0.8568 -0.0547,1.9416 -0.0547,3.2542 0,1.3126 0.0182,2.4064 0.0547,3.2815 0.0365,0.8569 0.1094,1.5405 0.2188,2.051 0.1276,0.5104 0.3008,0.8659 0.5196,1.0665 0.237,0.2005 0.5469,0.3008 0.9297,0.3008 0.3099,0 0.5652,-0.0729 0.7657,-0.2188 0.2006,-0.1641 0.3555,-0.4284 0.4649,-0.793 0.1094,-0.3646 0.1823,-0.8478 0.2188,-1.4494 0.0547,-0.6198 0.082,-1.3946 0.082,-2.3244 h 4.9223 v 1.4494 c 0,1.3673 -0.1823,2.4885 -0.5469,3.3635 -0.3646,0.8751 -0.8477,1.5679 -1.4493,2.0783 -0.6017,0.4923 -1.2944,0.8204 -2.0784,0.9845 -0.7656,0.1823 -1.5587,0.2735 -2.3791,0.2735 -1.422,0 -2.5887,-0.1732 -3.5003,-0.5196 -0.9115,-0.3464 -1.6225,-0.9207 -2.133,-1.7228 -0.5105,-0.8204 -0.866,-1.8687 -1.0665,-3.1448 -0.1823,-1.2944 -0.2735,-2.8532 -0.2735,-4.6762 0,-1.8596 0.1094,-3.4365 0.3282,-4.7309 0.237,-1.2944 0.629,-2.3427 1.1759,-3.1448 0.5469,-0.8022 1.267,-1.3765 2.1603,-1.7229 0.8933,-0.3646 1.9963,-0.5469 3.3089,-0.5469 1.1486,0 2.1239,0.1459 2.9261,0.4376 0.8021,0.2917 1.4493,0.711 1.9416,1.2579 0.5104,0.5287 0.875,1.1759 1.0938,1.9416 0.237,0.7474 0.3555,1.5952 0.3555,2.5432 v 1.2305 z\"\n     fill=\"{color}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 63.565174,13.9364 4.4582,4.6265 4.4582,-4.6265 h 7.7457 l -8.3369,7.9312 8.3369,7.9311 h -7.7457 l -4.4582,-4.6383 -4.4582,4.6383 h -7.7575 l 8.337,-7.9311 -8.337,-7.9312 z m -0.4298,7.9312 -9.0675,-8.6261 h 9.7937 l 4.1618,4.3189 4.1618,-4.3189 h 9.4441 v -0.0118 h 16.006 c 3.659996,-0.0374 6.757996,3.0232 6.707996,6.6955 -0.001,1.3209 -0.358,2.5385 -1.073,3.6222 -0.538,0.8203 -1.22,1.4952 -2.037,2.0084 l 3.413,4.3821 V 27.096 c 0,-2.2266 1.664,-3.6461 3.578,-4.5875 1.933,-0.9504 4.372,-1.5442 6.403,-2.0246 0.001,-2e-4 0.002,-5e-4 0.003,-7e-4 l 0.023,-0.0058 c 1.252,-0.3079 2.318,-0.57 3.077,-0.8527 0.384,-0.1433 0.636,-0.273 0.78,-0.3832 0.018,-0.014 0.033,-0.0264 0.046,-0.0371 -0.044,-0.0404 -0.134,-0.1007 -0.311,-0.1702 -0.413,-0.1617 -1.118,-0.2835 -2.186,-0.2838 -1.141,0.0118 -2.111,0.1046 -2.773,0.3368 -0.326,0.1145 -0.523,0.2449 -0.634,0.3673 -0.094,0.1051 -0.15,0.2298 -0.145,0.4254 l 0.017,0.7116 h -7.63 v -0.6949 c 0,-1.4266 0.28,-2.6194 0.84,-3.5967 0.563,-0.9817 1.383,-1.6985 2.383,-2.2126 1.962,-1.0087 4.665,-1.2589 7.679,-1.2589 3.086,0 5.648,0.3561 7.462,1.2729 0.918,0.4646 1.664,1.0829 2.177,1.887 0.514,0.8062 0.766,1.7552 0.766,2.8343 0,1.9969 -1.205,3.2688 -2.682,4.0978 -1.434,0.8049 -3.239,1.262 -4.738,1.6277 h 7.16 v 5.922 h -20.881 l 0.009,0.0118 h -8.363996 l -2.992,-3.8712 h -4.495 v 3.8712 h -7.264 l 0.013,0.0118 h -9.7826 l -4.1613,-4.3294 -4.1613,4.3294 h -9.7942 z m 18.4939,8.3043 V 13.5632 l -8.7297,8.3044 z m 12.427,-4.2561 2.992,3.8711 h 6.597996 l -3.465,-4.4495 c 0.217,-0.1005 0.424,-0.2117 0.623,-0.3333 0.758,-0.4642 1.388,-1.0809 1.884,-1.8383 0.639,-0.9678 0.958,-2.0536 0.958,-3.2456 0.048,-3.2811 -2.731,-6.031 -6.006996,-5.9956 h -15.314 v 15.8623 h 6.196 V 25.9158 Z M 115.13427,25.243 c 0.217,-0.2653 0.61,-0.4909 1.132,-0.6949 0.615,-0.2408 1.407,-0.4516 2.297,-0.6623 3.051,-0.7436 6.942,-1.7586 6.942,-5.0632 0,-3.8712 -3.595,-5.2993 -9.709,-5.2993 -5.749,0 -9.826,0.9366 -10.18,5.6783 -0.017,0.2232 -0.026,0.4547 -0.026,0.695 h 6.221 c -10e-4,-0.0262 -10e-4,-0.052 0,-0.0774 0.034,-1.4099 1.98,-1.7406 4.245,-1.7638 2.211,0 3.228,0.4957 3.228,1.1685 0,0.8304 -1.962,1.3131 -4.426,1.919 l -0.067,0.0165 c -4.092,0.9678 -9.449,2.3133 -9.449,5.9366 v 2.6791 h 19.902 V 25.243 Z m 3.461,-5.9853 c -0.001,2e-4 -0.004,-0.0044 -0.006,-0.0146 0.006,0.0092 0.007,0.0143 0.006,0.0146 z m -21.852996,0.6625 c 0,-0.3715 -0.292,-0.6623 -0.664,-0.6623 h -6.86 v 1.3128 h 6.86 c 0.2,0 0.34,-0.0607 0.465,-0.1859 0.143,-0.1426 0.199,-0.2852 0.199,-0.4646 z m 0.696,0 c 0,-0.7554 -0.603,-1.3573 -1.36,-1.3573 h -7.557 v 2.7027 h 7.557 c 0.378,0 0.698,-0.1298 0.958,-0.3894 0.272,-0.2715 0.402,-0.5901 0.402,-0.956 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 56.381174,41.2423 h 2.9679 v -4.0637 l 2.9734,4.0637 h 1.4839 l 2.9735,-4.0637 v 4.0637 h 2.9679 v -7.6174 h -3.7098 l -2.9735,3.8087 -2.9678,-3.8087 h -3.7155 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 76.000274,33.4379 c -2.8656,0.0057 -5.2104,0.8331 -5.1991,3.718 v 0.5554 c -0.0113,2.8792 2.3335,3.7124 5.1991,3.718 2.86,-0.0056 5.205,-0.8388 5.194,-3.718 v -0.5554 c 0,-2.8792 -2.328,-3.718 -5.194,-3.718 z m 2.226,4.0864 c 0.017,1.2469 -1.014,1.4736 -2.226,1.4906 -1.2174,-0.017 -2.2483,-0.2437 -2.2313,-1.4906 v -0.187 c -0.017,-1.2413 1.0139,-1.468 2.2313,-1.485 1.212,0.017 2.243,0.2437 2.226,1.485 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 89.508274,37.445 c 0,0.7651 -0.436,1.3942 -1.206,1.3942 h -3.251 v -2.7885 h 3.251 c 0.77,0 1.206,0.6234 1.206,1.3943 z m -7.425,-3.8087 v 7.6173 h 6.774 c 2.09,0.0284 3.642,-1.7399 3.625,-3.8086 0.017,-2.0801 -1.535,-3.8371 -3.625,-3.8087 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 100.74527,37.53 c 0.017,1.2525 -1.012996,1.4679 -2.225996,1.4849 -1.217,-0.017 -2.242,-0.2324 -2.231,-1.4849 v -3.9051 h -2.968 v 4.0921 c -0.011,2.8792 2.345,3.7067 5.199,3.7123 2.854996,-0.0056 5.210996,-0.8331 5.199996,-3.7123 v -4.0921 h -2.974 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 105.05527,33.6249 v 7.6174 h 8.91 v -2.4144 h -5.942 v -5.203 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 114.97827,41.2536 h 8.91 v -1.9553 h -5.942 v -0.9749 h 5.942 v -1.7626 h -5.942 v -0.9749 h 5.942 v -1.9496 h -8.91 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"M 58.089974,4.6056 V 3.0003 h 4.3989 c 0.2131,0 0.3986,0.0771 0.5498,0.2383 0.1581,0.1543 0.2337,0.3435 0.2337,0.5678 0,0.2174 -0.0756,0.4066 -0.2337,0.5679 -0.1512,0.1542 -0.3367,0.2313 -0.5498,0.2313 z m -3.6015,-4.3602 v 9.4214 h 3.6015 V 7.3675 h 5.2993 c 1.9039,0.0281 3.5191,-1.6193 3.4916,-3.5611 0.0275,-1.9487 -1.5877,-3.5821 -3.4916,-3.561 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 74.049574,0 c -3.4778,0.007 -6.3233,1.0305 -6.3096,4.5986 v 0.687 c -0.0137,3.5611 2.8318,4.5915 6.3096,4.5985 3.4707,-0.007 6.3167,-1.0374 6.3027,-4.5985 v -0.687 c 0,-3.5611 -2.825,-4.5986 -6.3027,-4.5986 z m 2.7007,5.0542 c 0.021,1.5422 -1.23,1.8226 -2.7007,1.8437 -1.4777,-0.0211 -2.7286,-0.3015 -2.708,-1.8437 V 4.8229 c -0.0206,-1.5352 1.2303,-1.8156 2.708,-1.8366 1.4707,0.021 2.7217,0.3014 2.7007,1.8366 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 94.394274,6.2109 -2.138,-5.9655 h -4.055 l -2.144,5.9655 -2.138,-5.9655 h -4.055 l 4.055,9.4214 h 4.282 l 2.028,-4.7107 2.027,4.7107 h 4.282 l 4.055996,-9.4214 h -4.055996 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 100.86927,9.6668 h 10.811 V 7.2484 h -7.21 V 6.0426 h 7.21 V 3.8625 h -7.21 V 2.6568 h 7.21 V 0.2454 h -10.811 z\"\n     fill=\"{color}\" />\n  <path\n     d=\"m 113.59827,0.2383 v 9.4215 h 3.601 V 7.3605 h 3.217 l 1.739,2.2993 h 3.835 l -2.014,-2.6428 c 0.605,-0.2874 1.093,-0.722 1.457,-1.2898 0.372,-0.5748 0.557,-1.2197 0.557,-1.9278 0.028,-1.9488 -1.588,-3.5821 -3.491,-3.5611 z m 7.993,2.755 c 0.44,0 0.791,0.3575 0.791,0.8061 0,0.2173 -0.076,0.4066 -0.234,0.5678 -0.151,0.1543 -0.337,0.2314 -0.557,0.2314 h -4.392 V 2.9933 Z\"\n     fill=\"{color}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#555555';\n   export let color2 = '#000000';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 91.995796 45\"\n   fill=\"none\">\n  <path\n     d=\"m 22.2752,22.0345 -0.1987,0.0421 6.1648,6.1648 V 45 h -5.2759 l -6.2069,-6.2069 h 5.2759 V 22.0344 h -5.2759 v -5.2757 h 5.2759 V 0 l 6.2069,6.2069 v 10.5517 l -6.2069,10e-5 v 5.2757 z\"\n     fill=\"{color1}\"\n     id=\"path2607\" />\n  <path\n     d=\"m 38.7932,22.0345 6.2069,6.2069 v -5.2758 l -6.2069,-6.207 z\"\n     fill=\"{color1}\"\n     id=\"path2609\" />\n  <path\n     d=\"m 22.0764,22.0766 0.1987,-0.0421 h 16.5181 l 6.2069,6.2069 H 28.2415 Z\"\n     fill=\"{color2}\"\n     id=\"path2611\" />\n  <path\n     d=\"M 16.7587,22.0344 0,22.0345 6.2069,28.2414 h 10.5516 z\"\n     fill=\"{color2}\"\n     id=\"path2613\" />\n  <path\n     d=\"m 50.7681,4.2047 h 2.574 v 7.9985 h 4.4207 v 2.1669 h -6.9947 z\"\n     fill=\"{color2}\"\n     id=\"path2615\" />\n  <path\n     d=\"m 62.4368,14.5882 c -0.863,0 -1.619,-0.1551 -2.269,-0.4654 -0.649,-0.3199 -1.154,-0.7561 -1.512,-1.3088 -0.349,-0.5623 -0.524,-1.207 -0.524,-1.9342 0,-0.7271 0.175,-1.367 0.524,-1.9196 0.358,-0.5623 0.863,-0.9986 1.512,-1.3088 0.65,-0.32 1.406,-0.48 2.269,-0.48 0.863,0 1.619,0.16 2.269,0.48 0.649,0.3102 1.148,0.7465 1.498,1.3088 0.358,0.5526 0.538,1.1925 0.538,1.9196 0,0.7272 -0.18,1.3719 -0.538,1.9342 -0.35,0.5527 -0.849,0.9889 -1.498,1.3088 -0.65,0.3103 -1.406,0.4654 -2.269,0.4654 z m 0,-1.9923 c 0.514,0 0.921,-0.1503 1.222,-0.4508 0.31,-0.3103 0.465,-0.732 0.465,-1.2653 0,-0.5332 -0.155,-0.9501 -0.465,-1.2507 -0.301,-0.3102 -0.708,-0.4653 -1.222,-0.4653 -0.514,0 -0.926,0.1551 -1.236,0.4653 -0.301,0.3006 -0.451,0.7175 -0.451,1.2507 0,0.5333 0.15,0.955 0.451,1.2653 0.31,0.3005 0.722,0.4508 1.236,0.4508 z\"\n     fill=\"{color2}\"\n     id=\"path2617\" />\n  <path\n     d=\"m 71.5488,17.7149 c -0.465,0 -0.935,-0.0436 -1.41,-0.1309 -0.466,-0.0872 -0.868,-0.2036 -1.207,-0.349 v -1.7742 c 0.766,0.3296 1.638,0.4945 2.617,0.4945 0.708,0 1.217,-0.1455 1.527,-0.4364 0.32,-0.2908 0.48,-0.7173 0.48,-1.2797 v -0.4218 c -0.281,0.2424 -0.63,0.4315 -1.046,0.5672 -0.408,0.1358 -0.845,0.2036 -1.31,0.2036 -0.736,0 -1.386,-0.1551 -1.948,-0.4654 -0.563,-0.3102 -1.003,-0.7465 -1.324,-1.3088 -0.31,-0.5623 -0.465,-1.207 -0.465,-1.9342 0,-0.7368 0.155,-1.3864 0.465,-1.9487 0.311,-0.5623 0.747,-0.9937 1.309,-1.2943 0.562,-0.3102 1.207,-0.4654 1.934,-0.4654 0.999,0 1.823,0.3054 2.473,0.9162 v -0.698 h 2.472 v 6.5006 c 0,1.2119 -0.373,2.1523 -1.12,2.8213 -0.737,0.6689 -1.886,1.0034 -3.447,1.0034 z m 0.291,-5.1045 c 0.398,0 0.752,-0.1018 1.062,-0.3054 0.31,-0.2036 0.528,-0.475 0.654,-0.8144 v -1.2215 c -0.135,-0.3394 -0.359,-0.606 -0.669,-0.7999 -0.31,-0.2036 -0.659,-0.3054 -1.047,-0.3054 -0.523,0 -0.945,0.1551 -1.265,0.4653 -0.32,0.3006 -0.48,0.7127 -0.48,1.2362 0,0.5332 0.16,0.9598 0.48,1.2798 0.32,0.3102 0.742,0.4653 1.265,0.4653 z\"\n     fill=\"{color2}\"\n     id=\"path2619\" />\n  <path\n     d=\"m 81.0698,14.5882 c -0.863,0 -1.62,-0.1551 -2.269,-0.4654 -0.65,-0.3199 -1.154,-0.7561 -1.513,-1.3088 -0.349,-0.5623 -0.523,-1.207 -0.523,-1.9342 0,-0.7271 0.174,-1.367 0.523,-1.9196 0.359,-0.5623 0.863,-0.9986 1.513,-1.3088 0.649,-0.32 1.406,-0.48 2.269,-0.48 0.863,0 1.618,0.16 2.269,0.48 0.649,0.3102 1.148,0.7465 1.497,1.3088 0.359,0.5526 0.539,1.1925 0.539,1.9196 0,0.7272 -0.18,1.3719 -0.539,1.9342 -0.349,0.5527 -0.848,0.9889 -1.497,1.3088 -0.651,0.3103 -1.406,0.4654 -2.269,0.4654 z m 0,-1.9923 c 0.514,0 0.92,-0.1503 1.221,-0.4508 0.311,-0.3103 0.466,-0.732 0.466,-1.2653 0,-0.5332 -0.155,-0.9501 -0.466,-1.2507 -0.301,-0.3102 -0.707,-0.4653 -1.221,-0.4653 -0.514,0 -0.926,0.1551 -1.237,0.4653 -0.3,0.3006 -0.45,0.7175 -0.45,1.2507 0,0.5333 0.15,0.955 0.45,1.2653 0.311,0.3005 0.723,0.4508 1.237,0.4508 z\"\n     fill=\"{color2}\"\n     id=\"path2621\" />\n  <path\n     d=\"m 50.7681,18.1115 h 2.574 v 10.1654 h -2.574 z\"\n     fill=\"{color2}\"\n     id=\"path2623\" />\n  <path\n     d=\"m 54.6453,21.2964 h 2.472 v 0.698 c 0.6495,-0.6108 1.4745,-0.9162 2.4725,-0.9162 0.727,0 1.372,0.1552 1.934,0.4654 0.562,0.3006 0.998,0.732 1.309,1.2943 0.31,0.5526 0.465,1.1974 0.465,1.9342 0,0.7271 -0.155,1.3767 -0.465,1.9487 -0.311,0.5623 -0.747,0.9986 -1.309,1.3088 -0.552,0.3103 -1.197,0.4654 -1.934,0.4654 -0.466,0 -0.911,-0.0727 -1.338,-0.2181 -0.417,-0.1357 -0.7659,-0.3248 -1.0469,-0.5672 v 3.7521 h -2.5596 z m 4.2755,5.2063 c 0.524,0 0.945,-0.1552 1.265,-0.4654 0.32,-0.3102 0.48,-0.732 0.48,-1.2652 0,-0.5333 -0.16,-0.9501 -0.48,-1.2507 -0.32,-0.3102 -0.741,-0.4653 -1.265,-0.4653 -0.388,0 -0.737,0.1018 -1.047,0.3054 -0.31,0.1938 -0.5333,0.4605 -0.6689,0.7998 v 1.2361 c 0.1356,0.3394 0.3589,0.6108 0.6689,0.8144 0.31,0.1939 0.659,0.2909 1.047,0.2909 z\"\n     fill=\"{color2}\"\n     id=\"path2625\" />\n  <path\n     d=\"m 67.1138,28.495 c -0.562,0 -1.149,-0.0582 -1.759,-0.1745 -0.611,-0.1066 -1.096,-0.2617 -1.454,-0.4653 v -1.8761 c 0.397,0.2327 0.872,0.4266 1.424,0.5818 0.563,0.1454 1.077,0.2181 1.542,0.2181 0.339,0 0.587,-0.0243 0.742,-0.0727 0.155,-0.0485 0.232,-0.1454 0.232,-0.2909 0,-0.1163 -0.053,-0.2084 -0.16,-0.2763 -0.097,-0.0776 -0.281,-0.1551 -0.552,-0.2327 -0.262,-0.0873 -0.567,-0.1793 -0.916,-0.2763 -0.592,-0.1745 -1.057,-0.3539 -1.397,-0.5381 -0.339,-0.1842 -0.591,-0.4168 -0.756,-0.698 -0.164,-0.2811 -0.247,-0.6351 -0.247,-1.0617 0,-0.7562 0.295,-1.3185 0.887,-1.6869 0.601,-0.3781 1.421,-0.5672 2.458,-0.5672 0.504,0 1.032,0.0534 1.585,0.16 0.562,0.1066 0.984,0.2472 1.265,0.4218 v 1.8469 c -0.291,-0.1939 -0.678,-0.3539 -1.163,-0.48 -0.475,-0.126 -0.921,-0.189 -1.338,-0.189 -0.33,0 -0.587,0.0339 -0.771,0.1018 -0.184,0.0582 -0.276,0.1648 -0.276,0.32 0,0.1454 0.092,0.2569 0.276,0.3344 0.184,0.0776 0.514,0.1746 0.989,0.2909 0.31,0.0775 0.441,0.1115 0.393,0.1018 0.62,0.1648 1.1,0.349 1.439,0.5526 0.339,0.2036 0.577,0.446 0.713,0.7272 0.145,0.2714 0.218,0.6204 0.218,1.047 0,0.669 -0.29,1.2022 -0.872,1.5997 -0.573,0.3878 -1.406,0.5817 -2.502,0.5817 z\"\n     fill=\"{color2}\"\n     id=\"path2627\" />\n  <path\n     d=\"m 74.3098,28.495 c -0.96,0 -1.682,-0.2666 -2.167,-0.7998 -0.475,-0.5333 -0.713,-1.2361 -0.713,-2.1087 v -4.2901 h 2.56 v 3.9992 c 0,0.8048 0.364,1.2071 1.09,1.2071 0.331,0 0.631,-0.0776 0.902,-0.2327 0.272,-0.1551 0.494,-0.383 0.669,-0.6835 v -4.2901 h 2.56 v 6.9805 h -2.472 v -0.7562 c -0.301,0.32 -0.664,0.5623 -1.091,0.7271 -0.427,0.1648 -0.873,0.2472 -1.338,0.2472 z\"\n     fill=\"{color2}\"\n     id=\"path2629\" />\n  <path\n     d=\"m 80.5208,21.2964 h 2.371 v 0.7562 c 0.29,-0.3102 0.625,-0.5478 1.003,-0.7126 0.378,-0.1745 0.781,-0.2618 1.207,-0.2618 0.524,0 0.941,0.0776 1.251,0.2327 0.32,0.1551 0.576,0.3878 0.77,0.6981 0.291,-0.2909 0.645,-0.5187 1.062,-0.6836 0.417,-0.1648 0.839,-0.2472 1.265,-0.2472 0.921,0 1.576,0.2376 1.964,0.7126 0.388,0.4654 0.582,1.1392 0.582,2.0215 v 4.4646 h -2.444 v -4.1011 c 0,-0.3877 -0.073,-0.6689 -0.218,-0.8435 -0.145,-0.1744 -0.388,-0.2617 -0.727,-0.2617 -0.436,0 -0.79,0.1551 -1.061,0.4653 0.009,0.1649 0.014,0.417 0.014,0.7563 v 3.9847 h -2.443 v -4.2028 c 0,-0.3588 -0.064,-0.6157 -0.189,-0.7708 -0.126,-0.1552 -0.349,-0.2327 -0.669,-0.2327 -0.495,0 -0.922,0.2763 -1.28,0.8289 v 4.3774 h -2.458 z\"\n     fill=\"{color2}\"\n     id=\"path2631\" />\n  <path\n     d=\"m 51.1316,33.0485 h 3.7665 c 1.0662,0 1.8951,0.2521 2.4868,0.7563 0.6009,0.5041 0.9019,1.2506 0.9019,2.2395 0,0.9986 -0.296,1.7452 -0.8873,2.2396 -0.5917,0.4945 -1.4254,0.7417 -2.5014,0.7417 h -2.6322 v 4.1883 h -1.1343 z m 3.6792,5.0173 c 0.7272,0 1.2996,-0.1454 1.7161,-0.4363 0.4172,-0.3005 0.6251,-0.8289 0.6251,-1.5852 0,-0.7659 -0.2079,-1.2943 -0.6251,-1.5851 -0.4165,-0.3006 -0.9889,-0.4508 -1.7161,-0.4508 h -2.5449 v 4.0574 z\"\n     fill=\"{color1}\"\n     id=\"path2633\" />\n  <path\n     d=\"m 59.7378,32.4668 h 1.12 v 10.7471 h -1.12 z\"\n     fill=\"{color1}\"\n     id=\"path2635\" />\n  <path\n     d=\"m 65.7128,43.432 c -0.931,0 -1.649,-0.252 -2.153,-0.7562 -0.495,-0.5041 -0.741,-1.1779 -0.741,-2.0214 v -4.421 h 1.119 v 4.4792 c 0,1.2215 0.635,1.8323 1.905,1.8323 0.534,0 0.999,-0.1163 1.397,-0.349 0.406,-0.2327 0.77,-0.6011 1.09,-1.1052 v -4.8573 h 1.12 v 6.9805 h -1.091 v -1.0471 c -0.63,0.8435 -1.512,1.2652 -2.646,1.2652 z\"\n     fill=\"{color1}\"\n     id=\"path2637\" />\n  <path\n     d=\"m 73.9118,43.432 c -0.456,0 -0.946,-0.0678 -1.469,-0.2036 -0.524,-0.126 -0.931,-0.2859 -1.222,-0.4799 v -0.9452 c 0.369,0.223 0.791,0.4023 1.266,0.538 0.484,0.1358 0.949,0.2036 1.396,0.2036 0.601,0 1.032,-0.0824 1.294,-0.2472 0.272,-0.1745 0.407,-0.4314 0.407,-0.7708 0,-0.2617 -0.058,-0.4653 -0.174,-0.6107 -0.117,-0.1552 -0.31,-0.2909 -0.582,-0.4072 -0.271,-0.1164 -0.693,-0.2521 -1.265,-0.4072 -0.563,-0.1552 -1.013,-0.3151 -1.352,-0.4799 -0.33,-0.1746 -0.582,-0.3927 -0.757,-0.6545 -0.175,-0.2617 -0.261,-0.5963 -0.261,-1.0034 0,-0.6302 0.251,-1.1101 0.755,-1.4398 0.514,-0.3393 1.193,-0.5089 2.036,-0.5089 0.456,0 0.883,0.0436 1.28,0.1308 0.407,0.0776 0.747,0.1891 1.018,0.3346 v 0.9452 c -0.281,-0.1551 -0.62,-0.2763 -1.018,-0.3636 -0.397,-0.0969 -0.81,-0.1454 -1.236,-0.1454 -0.562,0 -0.989,0.0824 -1.28,0.2472 -0.291,0.1649 -0.436,0.4315 -0.436,0.7999 0,0.2521 0.049,0.4459 0.145,0.5817 0.107,0.1357 0.296,0.2618 0.568,0.3781 0.281,0.1067 0.727,0.2424 1.338,0.4072 0.872,0.2424 1.478,0.5284 1.817,0.858 0.349,0.32 0.524,0.766 0.524,1.3379 0,0.5914 -0.232,1.0568 -0.698,1.3962 -0.456,0.3393 -1.154,0.5089 -2.094,0.5089 z\"\n     fill=\"{color1}\"\n     id=\"path2639\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#4f9e91';\n   export let color2 = '#ebe1c5';\n   export let color3 = '#ebcc6e';\n   export let color4 = '#ed834e';\n   export let color5 = '#3d3a2c';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 143.52139 39.886002\"\n   fill=\"none\">\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 71.1431,4.3505 c 1.3878,-1.3877 3.6378,-1.3877 5.0256,0 1.3878,1.3878 1.3878,3.6378 0,5.0256 L 67.7078,17.837 C 65.2786,14.5814 65.5425,9.9512 68.4995,6.9942 Z\"\n     fill=\"{color1}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 83.2384,23.4397 c 1.388,1.3877 1.388,3.6378 0,5.0255 -1.387,1.3878 -3.6374,1.3878 -5.0252,0 l -8.4609,-8.4608 c 3.2556,-2.4292 7.8858,-2.1654 10.8428,0.7916 z\"\n     fill=\"{color2}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 64.1495,35.5354 c -1.3877,1.3878 -3.6378,1.3878 -5.0255,0 -1.3878,-1.3878 -1.3878,-3.6378 0,-5.0256 l 8.4608,-8.4608 c 2.4292,3.2556 2.1654,7.8858 -0.7916,10.8427 z\"\n     fill=\"{color3}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 52.054,16.4462 c -1.3878,-1.3878 -1.3878,-3.6378 0,-5.0256 1.3878,-1.3878 3.6378,-1.3878 5.0256,0 l 8.4609,8.4609 c -3.2556,2.4292 -7.8859,2.1653 -10.8428,-0.7916 z\"\n     fill=\"{color4}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 69.2522,34.4992 c 2.0463,-2.2752 2.9974,-5.1865 2.8531,-8.0529 l 4.0634,4.0634 c 0.0101,0.0101 0.0203,0.0202 0.0305,0.0303 v 2.901 c 0,1.9626 -1.591,3.5536 -3.5536,3.5536 -1.5941,0 -2.943,-1.0496 -3.3934,-2.4954 z\"\n     fill=\"{color4}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 53.0901,21.5488 c 2.2751,2.0464 5.1864,2.9975 8.0528,2.8532 l -4.0633,4.0634 c -0.0102,0.0101 -0.0203,0.0203 -0.0303,0.0304 h -2.901 c -1.9626,10e-5 -3.5536,-1.591 -3.5536,-3.5536 0,-1.594 1.0496,-2.943 2.4954,-3.3934 z\"\n     fill=\"{color1}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 82.2024,18.3372 c -2.2749,-2.0464 -5.1862,-2.9975 -8.0526,-2.8533 l 4.0633,-4.0633 c 0.0102,-0.0101 0.0202,-0.0203 0.0303,-0.0305 h 2.9011 c 1.9629,0 3.5539,1.5911 3.5539,3.5537 0,1.5941 -1.05,2.943 -2.496,3.3934 z\"\n     fill=\"{color3}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 66.0405,5.3867 c -2.0464,2.2751 -2.9974,5.1864 -2.8532,8.0529 L 59.124,9.3762 C 59.1138,9.3661 59.1037,9.356 59.0935,9.3459 v -2.901 c 0,-1.9626 1.591,-3.5537 3.5536,-3.5537 1.5941,0 2.943,1.0497 3.3934,2.4955 z\"\n     fill=\"{color2}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"m 62.6471,0 c -3.5594,0 -6.4449,2.8855 -6.4449,6.4449 v 1.2535 c -2.1414,-0.5595 -4.5146,-3e-4 -6.1927,1.6778 -2.5169,2.5169 -2.5169,6.5976 0,9.1145 l 0.8863,0.8863 c -1.9098,1.1186 -3.1924,3.1921 -3.1924,5.5652 0,3.5594 2.8855,6.4449 6.4449,6.4449 h 1.2534 c -0.5595,2.1414 -3e-4,4.5146 1.6778,6.1926 2.5169,2.5169 6.5976,2.5169 9.1145,0 l 2.6436,-2.6436 c 2.3321,-2.3321 3.4213,-5.4365 3.2676,-8.4899 l 4.0635,4.0634 c 2.5169,2.5169 6.5977,2.5169 9.1147,0 2.517,-2.5169 2.517,-6.5976 0,-9.1144 l -0.886,-0.8862 c 1.909,-1.1186 3.192,-3.1921 3.192,-5.5652 0,-3.5594 -2.886,-6.4449 -6.445,-6.4449 h -1.2535 c 0.5596,-2.1415 3e-4,-4.5147 -1.6778,-6.1928 -2.5168,-2.5169 -6.5975,-2.5169 -9.1144,0 L 66.455,4.9498 c -2.3321,2.3321 -3.4213,5.4364 -3.2676,8.4898 L 59.124,9.3762 C 59.1138,9.3661 59.1037,9.356 59.0935,9.3459 v -2.901 c 0,-1.9626 1.591,-3.5536 3.5536,-3.5536 1.5941,0 2.943,1.0496 3.3934,2.4954 0.1335,-0.1484 0.2716,-0.2941 0.4144,-0.4369 L 68.2123,3.1924 C 67.0937,1.2826 65.0202,0 62.6471,0 Z m 15.5963,11.3902 c -0.0101,0.0101 -0.0201,0.0203 -0.0303,0.0304 l -4.0633,4.0633 c 2.8665,-0.1442 5.7777,0.8068 8.0526,2.8533 1.446,-0.4504 2.496,-1.7994 2.496,-3.3934 0,-1.9626 -1.591,-3.5536 -3.554,-3.5536 z M 57.0491,28.4958 c 0.0101,-0.0102 0.0202,-0.0204 0.0304,-0.0305 l 4.0633,-4.0634 c -2.8664,0.1443 -5.7776,-0.8068 -8.0527,-2.8531 -1.4458,0.4504 -2.4955,1.7993 -2.4955,3.3934 0,1.9626 1.5911,3.5536 3.5537,3.5536 z m -4.0698,-7.048 c -0.1103,-0.1019 -0.219,-0.2064 -0.3261,-0.3135 v 10e-5 c 0.1071,0.1071 0.2158,0.2115 0.3261,0.3134 z M 72.6456,39.886 c -2.3732,0 -4.4467,-1.2827 -5.5653,-3.1925 l 1.7573,-1.7574 c 0.1429,-0.1428 0.281,-0.2885 0.4145,-0.4369 0.4504,1.4458 1.7993,2.4955 3.3935,2.4955 1.9626,0 3.5536,-1.591 3.5536,-3.5536 v -2.901 c 0.8328,0.8219 1.8338,1.3711 2.8913,1.6474 v 1.2536 c 0,3.5594 -2.8855,6.4449 -6.4449,6.4449 z M 76.1687,4.3505 c -1.3878,-1.3877 -3.6378,-1.3877 -5.0256,0 l -2.6437,2.6437 c -2.9569,2.957 -3.2208,7.5872 -0.7916,10.8428 l 8.4609,-8.4609 c 1.3878,-1.3878 1.3878,-3.6378 0,-5.0256 z m 7.0697,24.1147 c 1.388,-1.3878 1.388,-3.6378 0,-5.0256 L 80.595,20.7959 C 77.6381,17.839 73.0078,17.5751 69.7522,20.0043 l 8.4609,8.4609 c 1.3878,1.3878 3.6383,1.3878 5.0253,0 z m -19.0889,7.0701 c -1.3878,1.3878 -3.6378,1.3878 -5.0256,0 -1.3877,-1.3878 -1.3877,-3.6378 0,-5.0256 l 8.4609,-8.4609 c 2.4292,3.2556 2.1653,7.8859 -0.7916,10.8428 z M 52.0539,11.4206 c -1.3877,1.3878 -1.3877,3.6378 0,5.0256 l 2.6437,2.6437 c 2.957,2.9569 7.5872,3.2208 10.8428,0.7916 l -8.4609,-8.4609 c -1.3878,-1.3877 -3.6378,-1.3877 -5.0256,0 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"M 0,13.0328 H 3.1606 V 22.854 H 8.589 v 2.6606 H 0 Z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 14.3276,25.7825 c -1.0595,0 -1.9881,-0.1905 -2.7857,-0.5714 C 10.7443,24.8182 10.1253,24.2825 9.6848,23.604 9.2563,22.9135 9.042,22.1219 9.042,21.229 c 0,-0.8928 0.2143,-1.6785 0.6428,-2.357 0.4405,-0.6905 1.0595,-1.2262 1.8571,-1.6071 0.7976,-0.3929 1.7262,-0.5893 2.7857,-0.5893 1.0595,0 1.988,0.1964 2.7856,0.5893 0.7976,0.3809 1.4107,0.9166 1.8392,1.6071 0.4405,0.6785 0.6607,1.4642 0.6607,2.357 0,0.8929 -0.2202,1.6845 -0.6607,2.375 -0.4285,0.6785 -1.0416,1.2142 -1.8392,1.6071 -0.7976,0.3809 -1.7261,0.5714 -2.7856,0.5714 z m 0,-2.4464 c 0.6309,0 1.1309,-0.1845 1.4999,-0.5535 0.381,-0.381 0.5714,-0.8988 0.5714,-1.5536 0,-0.6547 -0.1904,-1.1666 -0.5714,-1.5356 -0.369,-0.381 -0.869,-0.5714 -1.4999,-0.5714 -0.631,0 -1.1369,0.1904 -1.5178,0.5714 -0.3691,0.369 -0.5536,0.8809 -0.5536,1.5356 0,0.6548 0.1845,1.1726 0.5536,1.5536 0.3809,0.369 0.8868,0.5535 1.5178,0.5535 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 25.5166,29.6217 c -0.5714,0 -1.1488,-0.0536 -1.7321,-0.1607 -0.5714,-0.1072 -1.0655,-0.25 -1.4821,-0.4286 v -2.1785 c 0.9404,0.4047 2.0118,0.6071 3.2142,0.6071 0.869,0 1.494,-0.1786 1.8749,-0.5357 0.3929,-0.3571 0.5893,-0.8809 0.5893,-1.5714 v -0.5178 c -0.3452,0.2976 -0.7738,0.5297 -1.2857,0.6964 -0.5,0.1667 -1.0357,0.25 -1.6071,0.25 -0.9047,0 -1.7023,-0.1905 -2.3928,-0.5714 -0.6904,-0.381 -1.2321,-0.9167 -1.6249,-1.6071 -0.381,-0.6905 -0.5714,-1.4821 -0.5714,-2.375 0,-0.9047 0.1904,-1.7023 0.5714,-2.3927 0.3809,-0.6905 0.9166,-1.2203 1.6071,-1.5893 0.6904,-0.3809 1.4821,-0.5714 2.3749,-0.5714 1.2262,0 2.238,0.375 3.0356,1.125 v -0.8572 h 3.0357 v 7.982 c 0,1.488 -0.4584,2.6428 -1.375,3.4642 -0.9047,0.8214 -2.3154,1.2321 -4.232,1.2321 z m 0.3571,-6.2677 c 0.4881,0 0.9226,-0.125 1.3035,-0.375 0.381,-0.25 0.6488,-0.5833 0.8036,-1 V 20.4791 C 27.8141,20.0624 27.5403,19.735 27.1594,19.4969 26.7784,19.247 26.3499,19.122 25.8737,19.122 c -0.6428,0 -1.1607,0.1904 -1.5535,0.5714 -0.3929,0.369 -0.5893,0.8749 -0.5893,1.5178 0,0.6547 0.1964,1.1785 0.5893,1.5714 0.3928,0.3809 0.9107,0.5714 1.5535,0.5714 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 37.2064,25.7825 c -1.0595,0 -1.988,-0.1905 -2.7856,-0.5714 -0.7976,-0.3929 -1.4167,-0.9286 -1.8571,-1.6071 -0.4286,-0.6905 -0.6429,-1.4821 -0.6429,-2.375 0,-0.8928 0.2143,-1.6785 0.6429,-2.357 0.4404,-0.6905 1.0595,-1.2262 1.8571,-1.6071 0.7976,-0.3929 1.7261,-0.5893 2.7856,-0.5893 1.0595,0 1.988,0.1964 2.7856,0.5893 0.7976,0.3809 1.4107,0.9166 1.8393,1.6071 0.4404,0.6785 0.6607,1.4642 0.6607,2.357 0,0.8929 -0.2203,1.6845 -0.6607,2.375 -0.4286,0.6785 -1.0417,1.2142 -1.8393,1.6071 -0.7976,0.3809 -1.7261,0.5714 -2.7856,0.5714 z m 0,-2.4464 c 0.6309,0 1.1309,-0.1845 1.5,-0.5535 0.3809,-0.381 0.5714,-0.8988 0.5714,-1.5536 0,-0.6547 -0.1905,-1.1666 -0.5714,-1.5356 -0.3691,-0.381 -0.8691,-0.5714 -1.5,-0.5714 -0.6309,0 -1.1369,0.1904 -1.5178,0.5714 -0.3691,0.369 -0.5536,0.8809 -0.5536,1.5356 0,0.6548 0.1845,1.1726 0.5536,1.5536 0.3809,0.369 0.8869,0.5535 1.5178,0.5535 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 92.8994,13.0328 h 3.161 v 12.4818 h -3.161 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 97.6604,16.9434 h 3.036 v 0.8572 c 0.797,-0.75 1.809,-1.125 3.035,-1.125 0.893,0 1.685,0.1905 2.375,0.5714 0.691,0.369 1.226,0.8988 1.607,1.5893 0.381,0.6785 0.572,1.4702 0.572,2.3749 0,0.8928 -0.191,1.6904 -0.572,2.3928 -0.381,0.6904 -0.916,1.2261 -1.607,1.6071 -0.678,0.3809 -1.47,0.5714 -2.375,0.5714 -0.571,0 -1.119,-0.0893 -1.642,-0.2679 -0.512,-0.1666 -0.941,-0.3988 -1.286,-0.6964 v 4.607 h -3.143 z m 5.25,6.3927 c 0.643,0 1.161,-0.1904 1.553,-0.5714 0.393,-0.3809 0.59,-0.8988 0.59,-1.5535 0,-0.6548 -0.197,-1.1666 -0.59,-1.5357 -0.392,-0.3809 -0.91,-0.5714 -1.553,-0.5714 -0.476,0 -0.905,0.125 -1.286,0.375 -0.381,0.2381 -0.654,0.5655 -0.821,0.9821 v 1.5178 c 0.167,0.4167 0.44,0.75 0.821,1 0.381,0.2381 0.81,0.3571 1.286,0.3571 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 112.9704,25.7825 c -0.69,0 -1.41,-0.0714 -2.16,-0.2143 -0.75,-0.1309 -1.346,-0.3214 -1.786,-0.5714 v -2.3035 c 0.488,0.2857 1.071,0.5238 1.75,0.7143 0.69,0.1785 1.321,0.2678 1.893,0.2678 0.416,0 0.72,-0.0298 0.91,-0.0893 0.191,-0.0595 0.286,-0.1785 0.286,-0.3571 0,-0.1429 -0.065,-0.256 -0.196,-0.3393 -0.119,-0.0952 -0.346,-0.1905 -0.679,-0.2857 -0.321,-0.1071 -0.696,-0.2202 -1.125,-0.3393 -0.726,-0.2143 -1.297,-0.4345 -1.714,-0.6607 -0.417,-0.2262 -0.726,-0.5119 -0.929,-0.8571 -0.202,-0.3452 -0.303,-0.7797 -0.303,-1.3035 0,-0.9286 0.363,-1.619 1.089,-2.0714 0.738,-0.4643 1.744,-0.6964 3.018,-0.6964 0.619,0 1.268,0.0655 1.946,0.1964 0.691,0.131 1.208,0.3036 1.554,0.5179 v 2.2678 c -0.357,-0.2381 -0.834,-0.4346 -1.429,-0.5893 -0.583,-0.1548 -1.131,-0.2321 -1.643,-0.2321 -0.404,0 -0.72,0.0416 -0.946,0.1249 -0.226,0.0715 -0.339,0.2024 -0.339,0.3929 0,0.1786 0.113,0.3155 0.339,0.4107 0.226,0.0952 0.631,0.2143 1.214,0.3571 0.381,0.0953 0.542,0.1369 0.482,0.125 0.762,0.2024 1.351,0.4286 1.768,0.6786 0.417,0.25 0.708,0.5476 0.875,0.8928 0.179,0.3333 0.268,0.7619 0.268,1.2857 0,0.8214 -0.357,1.4761 -1.071,1.9642 -0.703,0.4762 -1.727,0.7143 -3.072,0.7143 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 121.8054,25.7825 c -1.178,0 -2.065,-0.3274 -2.66,-0.9821 -0.583,-0.6548 -0.875,-1.5178 -0.875,-2.5892 v -5.2678 h 3.143 v 4.9106 c 0,0.9881 0.446,1.4821 1.339,1.4821 0.405,0 0.774,-0.0952 1.107,-0.2857 0.333,-0.1905 0.607,-0.4702 0.821,-0.8392 v -5.2678 h 3.143 v 8.5712 h -3.035 v -0.9285 c -0.369,0.3928 -0.816,0.6904 -1.34,0.8928 -0.523,0.2024 -1.071,0.3036 -1.643,0.3036 z\"\n     fill=\"{color5}\" />\n  <path\n     d=\"m 129.4324,16.9434 h 2.911 v 0.9286 c 0.357,-0.3809 0.768,-0.6726 1.232,-0.875 0.464,-0.2143 0.958,-0.3214 1.482,-0.3214 0.643,0 1.155,0.0952 1.536,0.2857 0.393,0.1905 0.708,0.4762 0.946,0.8571 0.357,-0.3571 0.792,-0.6369 1.304,-0.8392 0.512,-0.2024 1.03,-0.3036 1.553,-0.3036 1.131,0 1.935,0.2917 2.411,0.875 0.476,0.5714 0.714,1.3987 0.714,2.482 v 5.482 h -3 v -5.0355 c 0,-0.4762 -0.089,-0.8214 -0.268,-1.0357 -0.178,-0.2143 -0.476,-0.3214 -0.892,-0.3214 -0.536,0 -0.971,0.1904 -1.304,0.5714 0.012,0.2023 0.018,0.5119 0.018,0.9285 v 4.8927 h -3 v -5.1605 c 0,-0.4405 -0.077,-0.756 -0.232,-0.9464 -0.155,-0.1905 -0.429,-0.2857 -0.821,-0.2857 -0.608,0 -1.131,0.3392 -1.572,1.0178 v 5.3748 h -3.018 z\"\n     fill=\"{color5}\" />\n</svg>\n","<script>\n   export let id = '';\n   let customClass = '';\n   export { customClass as class };\n   export let color1 = '#ffad64';\n   export let color2 = '#add4d3';\n   export let color3 = '#fb8351';\n   export let color4 = '#333237';\n</script>\n\n<svg\n   {id}\n   class=\"{customClass}\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 152.4921 41.270199\"\n   fill=\"none\">\n  <path\n     d=\"M 12.5812,39.4482 8.4059,32.2163 14.5334,21.6322 18.4272,28.377 41.413,28.3646 34.8907,39.548 Z\"\n     fill=\"{color1}\" />\n  <path\n     d=\"M 45.5174,21.1835 41.3421,28.4153 29.1123,28.4009 33.0065,21.6563 21.5029,1.7562 34.4492,1.813 Z\"\n     fill=\"{color2}\" />\n  <path\n     d=\"m 13.2248,1.7177 h 8.3506 l 6.1024,10.5987 -7.7882,-3e-4 L 8.4075,32.2286 1.9835,20.9884 Z\"\n     fill=\"{color3}\" />\n  <path\n     fill-rule=\"evenodd\"\n     clip-rule=\"evenodd\"\n     d=\"M 22.5933,0.0432 22.5684,0 H 12.2381 L 0,20.9796 l 8.4008,14.699 0.0103,-0.0178 3.1758,5.5007 24.2879,0.1087 8.5294,-14.6249 H 44.3474 L 47.4983,21.1879 35.4485,0.0996 Z m 7.9912,13.9909 h 0.0644 l -6.0725,-10.5467 8.8734,0.0389 10.0867,17.6527 -3.1572,5.4685 -8.2738,0.0044 2.8848,-4.9962 z M 20.4896,3.4354 l 4.1407,7.1631 -5.733,-2e-4 L 9.0823,27.6195 8.4128,28.776 3.967,20.9971 14.2113,3.4354 Z m -3.981,18.1826 4.3733,-7.5842 5.7344,2e-4 4.4064,7.6227 -2.8854,4.9974 -8.7186,0.0047 z m -6.1153,10.6052 1.6638,-2.8853 2.4742,-4.2737 2.9045,5.0311 8.7173,-0.0047 -0.0141,0.0244 12.2562,0.0145 -4.4886,7.6964 -20.3311,-0.091 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 57.503,35.294 v -8.0417 h -2.9722 v -0.9028 h 7.0834 v 0.9028 h -2.9723 v 8.0417 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 64.7787,35.4329 c -1.176,0 -2.0556,-0.2824 -2.6389,-0.8472 -0.5834,-0.5648 -0.875,-1.4352 -0.875,-2.6112 0,-1.0555 0.25,-1.8842 0.75,-2.4861 0.5092,-0.6111 1.3102,-0.9167 2.4028,-0.9167 0.6481,0 1.1805,0.1204 1.5972,0.3612 0.4259,0.2314 0.7408,0.5555 0.9445,0.9722 0.2129,0.4074 0.3194,0.8704 0.3194,1.3889 v 1.2361 h -4.875 c 0.037,0.5 0.1435,0.8935 0.3194,1.1806 0.1852,0.287 0.4583,0.4953 0.8195,0.625 0.3703,0.1203 0.8565,0.1805 1.4583,0.1805 0.6759,0 1.2963,-0.1157 1.8611,-0.3472 v 0.8889 c -0.287,0.1204 -0.6111,0.213 -0.9722,0.2778 -0.3519,0.0648 -0.7222,0.0972 -1.1111,0.0972 z m -2.375,-3.7222 h 3.8611 V 31.169 c 0,-0.5371 -0.1435,-0.9491 -0.4306,-1.2361 -0.2777,-0.2963 -0.7407,-0.4445 -1.3889,-0.4445 -0.787,0 -1.324,0.1852 -1.6111,0.5556 -0.287,0.3703 -0.4305,0.9259 -0.4305,1.6667 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 72.0593,35.4329 c -1.1481,0 -2,-0.2963 -2.5555,-0.8889 -0.5556,-0.6018 -0.8334,-1.4491 -0.8334,-2.5417 0,-1.1574 0.3148,-2.0185 0.9445,-2.5833 0.6296,-0.5648 1.4768,-0.8473 2.5417,-0.8473 0.4352,0 0.7963,0.0324 1.0833,0.0973 0.287,0.0555 0.5648,0.1481 0.8333,0.2777 v 0.9028 c -0.5,-0.2407 -1.0694,-0.3611 -1.7083,-0.3611 -0.8148,0 -1.4445,0.1945 -1.8889,0.5834 -0.4445,0.3796 -0.6667,1.0231 -0.6667,1.9305 0,0.8704 0.1945,1.5093 0.5834,1.9167 0.3889,0.3982 1.0324,0.5972 1.9305,0.5972 0.6389,0 1.2269,-0.1203 1.7639,-0.3611 v 0.9167 c -0.287,0.1204 -0.5972,0.2083 -0.9305,0.2639 -0.3241,0.0648 -0.6898,0.0972 -1.0973,0.0972 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 75.3637,35.294 v -9.3612 h 1.1389 v 3.4862 c 0.3056,-0.25 0.6621,-0.4537 1.0695,-0.6111 0.4167,-0.1575 0.8981,-0.2362 1.4444,-0.2362 0.7963,0 1.3936,0.1945 1.7917,0.5834 0.3982,0.3889 0.5972,1 0.5972,1.8333 v 4.3056 h -1.1388 v -4.2639 c 0,-0.5741 -0.1297,-0.9722 -0.3889,-1.1945 -0.25,-0.2314 -0.6667,-0.3472 -1.2501,-0.3472 -0.3703,0 -0.7546,0.0833 -1.1527,0.25 -0.3889,0.1574 -0.713,0.3658 -0.9723,0.625 v 4.9306 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 85.9478,35.433 c -0.9259,0 -1.6667,-0.2037 -2.2222,-0.6112 -0.5556,-0.4074 -0.8334,-0.9537 -0.8334,-1.6389 0,-0.6296 0.1945,-1.1713 0.5834,-1.625 0.3888,-0.4537 0.9213,-0.8565 1.5972,-1.2083 -0.3611,-0.3611 -0.6667,-0.6991 -0.9167,-1.0139 -0.25,-0.3148 -0.375,-0.6945 -0.375,-1.1389 0,-0.5556 0.1898,-1.0232 0.5695,-1.4028 0.3889,-0.3889 0.9352,-0.5833 1.6389,-0.5833 0.6852,0 1.2176,0.1805 1.5972,0.5416 0.3794,0.3611 0.5694,0.8426 0.5694,1.4445 0,0.5 -0.134,0.9213 -0.403,1.2639 -0.2683,0.3426 -0.6525,0.6898 -1.1525,1.0417 l 2.3055,2.3472 c 0.157,-0.3426 0.236,-0.7778 0.236,-1.3056 v -0.1944 h 0.903 v 0.1944 c 0,0.3612 -0.042,0.713 -0.125,1.0556 -0.083,0.3426 -0.204,0.6389 -0.361,0.8889 l 1.25,1.2639 -0.695,0.625 -1.111,-1.0972 c -0.324,0.3981 -0.745,0.6898 -1.2636,0.875 -0.5185,0.1852 -1.1158,0.2778 -1.7917,0.2778 z m -0.0556,-5.4862 c 0.4352,-0.2685 0.7639,-0.5231 0.9862,-0.7639 0.2222,-0.25 0.3333,-0.5648 0.3333,-0.9444 0,-0.3519 -0.0972,-0.6297 -0.2917,-0.8334 -0.1852,-0.2129 -0.4953,-0.3194 -0.9305,-0.3194 -0.4445,0 -0.7686,0.1111 -0.9723,0.3333 -0.1944,0.2222 -0.2916,0.4954 -0.2916,0.8195 0,0.2963 0.1018,0.5694 0.3055,0.8194 0.213,0.25 0.5,0.5463 0.8611,0.8889 z m 0.0556,4.6667 c 0.537,0 0.9954,-0.0787 1.375,-0.2361 0.3889,-0.1667 0.7173,-0.412 0.9863,-0.7361 L 85.7672,31.044 c -0.6018,0.2778 -1.0509,0.5787 -1.3472,0.9028 -0.287,0.3148 -0.4306,0.7176 -0.4306,1.2084 0,0.4814 0.1852,0.8472 0.5556,1.0972 0.3704,0.2407 0.838,0.3611 1.4028,0.3611 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"M 54.9795,19.857 V 7.4723 h 3.6154 v 9.6154 h 5.577 v 2.7693 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 69.988,20.0493 c -1.8205,0 -3.1667,-0.4039 -4.0385,-1.2116 -0.8589,-0.8077 -1.2884,-1.9872 -1.2884,-3.5385 0,-1.5384 0.4359,-2.7115 1.3077,-3.5192 0.8718,-0.8205 2.2115,-1.2308 4.0192,-1.2308 1.8206,0 3.1667,0.4103 4.0385,1.2308 0.8847,0.8077 1.327,1.9808 1.327,3.5192 0,1.5513 -0.4359,2.7308 -1.3077,3.5385 -0.8718,0.8077 -2.2244,1.2116 -4.0578,1.2116 z m 0,-2.6347 c 0.5898,0 1.0129,-0.1666 1.2693,-0.5 0.2692,-0.3333 0.4038,-0.8718 0.4038,-1.6154 0,-0.7307 -0.1346,-1.2628 -0.4038,-1.5961 -0.2564,-0.3462 -0.6795,-0.5193 -1.2693,-0.5193 -0.5769,0 -0.9936,0.1731 -1.25,0.5193 -0.2564,0.3333 -0.3846,0.8654 -0.3846,1.5961 0,0.7436 0.1282,1.2821 0.3846,1.6154 0.2564,0.3334 0.6731,0.5 1.25,0.5 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 80.7082,23.2416 c -0.4487,0 -0.9359,-0.0192 -1.4615,-0.0577 -0.5257,-0.0256 -1.0257,-0.0769 -1.5,-0.1538 -0.4616,-0.0769 -0.8462,-0.1667 -1.1539,-0.2693 v -2.3077 c 0.3462,0.1154 0.7436,0.2116 1.1923,0.2885 0.4616,0.0769 0.9295,0.1346 1.4039,0.1731 0.4743,0.0384 0.9102,0.0577 1.3077,0.0577 0.6795,0 1.2115,-0.0385 1.5962,-0.1154 0.3974,-0.0641 0.5961,-0.1859 0.5961,-0.3654 0,-0.1538 -0.0641,-0.2564 -0.1923,-0.3077 -0.1282,-0.0385 -0.3718,-0.0577 -0.7308,-0.0577 h -2.4038 c -0.9359,0 -1.6603,-0.1474 -2.1731,-0.4423 -0.5,-0.3077 -0.75,-0.7628 -0.75,-1.3654 0,-0.8462 0.4679,-1.4359 1.4038,-1.7692 -0.5256,-0.2693 -0.9102,-0.609 -1.1538,-1.0193 -0.2436,-0.4102 -0.3654,-0.9295 -0.3654,-1.5577 0,-1.1795 0.3974,-2.0449 1.1923,-2.5962 0.8077,-0.5512 1.968,-0.8269 3.4808,-0.8269 0.3205,0 0.6795,0.0256 1.0769,0.0769 0.3975,0.0385 0.6859,0.077 0.8654,0.1154 h 3.577 l -0.077,2.1923 h -1.2115 c 0.2308,0.2949 0.3462,0.6539 0.3462,1.077 0,0.9359 -0.2757,1.6795 -0.827,2.2308 -0.5384,0.5384 -1.391,0.8077 -2.5577,0.8077 -0.1667,0 -0.3461,-0.0064 -0.5385,-0.0193 -0.1923,-0.0256 -0.3718,-0.0448 -0.5384,-0.0577 -0.2821,0.0257 -0.5257,0.077 -0.7308,0.1539 -0.2051,0.0769 -0.3077,0.2051 -0.3077,0.3846 0,0.1282 0.0577,0.218 0.1731,0.2692 0.1154,0.0385 0.2756,0.0577 0.4808,0.0577 h 2.0961 c 0.9359,0 1.6731,0.218 2.2116,0.6539 0.5385,0.4359 0.8077,1.0769 0.8077,1.9231 0,0.8974 -0.4167,1.5897 -1.25,2.0769 -0.8334,0.5 -2.1282,0.75 -3.8847,0.75 z m 0.3077,-8.1731 c 0.5641,0 0.9552,-0.0962 1.1731,-0.2885 0.218,-0.1923 0.3269,-0.5128 0.3269,-0.9615 0,-0.4488 -0.1089,-0.7757 -0.3269,-0.9808 C 81.9711,12.6326 81.58,12.53 81.0159,12.53 c -0.5256,0 -0.9102,0.1026 -1.1538,0.3077 -0.2308,0.1923 -0.3462,0.5192 -0.3462,0.9808 0,0.4359 0.109,0.7564 0.3269,0.9615 0.2308,0.1923 0.6218,0.2885 1.1731,0.2885 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"m 92.4121,20.0493 c -1.821,0 -3.167,-0.4039 -4.039,-1.2116 -0.859,-0.8077 -1.2885,-1.9872 -1.2885,-3.5385 0,-1.5384 0.4359,-2.7115 1.3075,-3.5192 0.872,-0.8205 2.212,-1.2308 4.02,-1.2308 1.82,0 3.166,0.4103 4.038,1.2308 0.885,0.8077 1.327,1.9808 1.327,3.5192 0,1.5513 -0.436,2.7308 -1.308,3.5385 -0.872,0.8077 -2.224,1.2116 -4.057,1.2116 z m 0,-2.6347 c 0.589,0 1.012,-0.1666 1.269,-0.5 0.269,-0.3333 0.404,-0.8718 0.404,-1.6154 0,-0.7307 -0.135,-1.2628 -0.404,-1.5961 -0.257,-0.3462 -0.68,-0.5193 -1.269,-0.5193 -0.577,0 -0.994,0.1731 -1.251,0.5193 -0.256,0.3333 -0.384,0.8654 -0.384,1.5961 0,0.7436 0.128,1.2821 0.384,1.6154 0.257,0.3334 0.674,0.5 1.251,0.5 z\"\n     fill=\"{color3}\" />\n  <path\n     d=\"M 99.3661,9.5299 V 6.9145 h 3.904 v 2.6154 z m 0.288,10.327 v -6.4808 h -1.326 l 0.307,-2.6346 h 4.635 v 9.1154 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"M 105.0041,24.0108 V 10.7415 h 3.135 l 0.173,0.7307 c 0.371,-0.2948 0.775,-0.5192 1.211,-0.673 0.449,-0.1667 0.968,-0.25 1.558,-0.25 1.359,0 2.404,0.3461 3.135,1.0384 0.743,0.6795 1.115,1.8398 1.115,3.4808 0,1.6283 -0.391,2.8654 -1.173,3.7116 -0.782,0.8462 -1.859,1.2692 -3.231,1.2692 -0.91,0 -1.679,-0.173 -2.308,-0.5192 v 4.4808 z m 5,-6.5962 c 0.526,0 0.93,-0.1859 1.212,-0.5577 0.282,-0.3718 0.423,-0.9487 0.423,-1.7308 0,-0.7564 -0.135,-1.2692 -0.404,-1.5384 -0.257,-0.2693 -0.654,-0.4039 -1.193,-0.4039 -0.538,0 -1.012,0.1795 -1.423,0.5385 v 3.2308 c 0.206,0.1538 0.411,0.2692 0.616,0.3461 0.205,0.0769 0.461,0.1154 0.769,0.1154 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 120.1491,20.0492 c -0.782,0 -1.519,-0.0576 -2.211,-0.173 -0.68,-0.1026 -1.218,-0.2372 -1.616,-0.4039 v -2.5962 c 0.449,0.2052 0.981,0.3654 1.596,0.4808 0.629,0.1154 1.161,0.1731 1.596,0.1731 0.462,0 0.808,-0.0128 1.039,-0.0385 0.244,-0.0256 0.365,-0.1346 0.365,-0.3269 0,-0.2179 -0.211,-0.3846 -0.634,-0.5 -0.423,-0.1154 -0.955,-0.2821 -1.596,-0.5 -0.834,-0.2949 -1.456,-0.641 -1.866,-1.0385 -0.41,-0.3974 -0.615,-0.9743 -0.615,-1.7308 0,-0.9102 0.359,-1.6089 1.077,-2.0961 0.718,-0.5 1.846,-0.75 3.384,-0.75 0.59,0 1.199,0.0448 1.827,0.1346 0.628,0.0897 1.122,0.1923 1.481,0.3077 V 13.53 c -0.385,-0.1667 -0.808,-0.2885 -1.269,-0.3654 -0.449,-0.077 -0.859,-0.1154 -1.231,-0.1154 -0.41,0 -0.776,0.0192 -1.096,0.0577 -0.321,0.0384 -0.481,0.1474 -0.481,0.3269 0,0.2051 0.18,0.3526 0.539,0.4423 0.371,0.0898 0.865,0.2308 1.48,0.4231 0.693,0.2051 1.231,0.4295 1.616,0.6731 0.397,0.2436 0.673,0.5384 0.827,0.8846 0.166,0.3462 0.25,0.7756 0.25,1.2885 0,0.9231 -0.379,1.641 -1.135,2.1538 -0.744,0.5 -1.853,0.75 -3.327,0.75 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 129.2701,20.0492 c -1.064,0 -1.897,-0.3012 -2.5,-0.9038 -0.602,-0.6026 -0.903,-1.4872 -0.903,-2.6539 v -5.75 h 3.615 v 5.4616 c 0,0.7948 0.404,1.1923 1.211,1.1923 0.295,0 0.584,-0.0641 0.866,-0.1923 0.282,-0.1282 0.506,-0.2885 0.673,-0.4808 v -5.9808 h 3.615 v 9.1154 h -3.384 l -0.096,-0.6923 c -0.359,0.2564 -0.802,0.468 -1.327,0.6346 -0.513,0.1667 -1.103,0.25 -1.77,0.25 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 137.5691,19.8569 v -9.1154 h 3.346 l 0.096,0.7307 c 0.398,-0.2692 0.84,-0.4871 1.327,-0.6538 0.5,-0.1795 1.045,-0.2692 1.635,-0.2692 0.589,0 1.051,0.0833 1.384,0.25 0.334,0.1666 0.603,0.4102 0.808,0.7307 0.41,-0.2948 0.872,-0.532 1.385,-0.7115 0.525,-0.1795 1.141,-0.2692 1.846,-0.2692 1.064,0 1.846,0.282 2.346,0.8461 0.5,0.5513 0.75,1.3975 0.75,2.5385 v 5.9231 h -3.558 v -5.5 c 0,-0.4103 -0.083,-0.6987 -0.25,-0.8654 -0.166,-0.1795 -0.442,-0.2692 -0.827,-0.2692 -0.5,0 -0.91,0.1795 -1.23,0.5384 0.025,0.1667 0.038,0.327 0.038,0.4808 0,0.141 0,0.3013 0,0.4808 v 5.1346 h -3.346 v -5.5577 c 0,-0.3718 -0.064,-0.641 -0.192,-0.8077 -0.129,-0.1795 -0.372,-0.2692 -0.731,-0.2692 -0.244,0 -0.481,0.0641 -0.712,0.1923 -0.231,0.1282 -0.436,0.282 -0.615,0.4615 v 5.9808 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 96.6971,35.5476 c -0.963,0 -1.764,-0.1806 -2.403,-0.5417 -0.629,-0.3704 -1.101,-0.8843 -1.416,-1.5417 -0.315,-0.6666 -0.472,-1.4444 -0.472,-2.3333 0,-0.9722 0.148,-1.8195 0.444,-2.5417 0.296,-0.7222 0.759,-1.2778 1.389,-1.6667 0.63,-0.3981 1.444,-0.5972 2.444,-0.5972 0.519,0 0.986,0.037 1.403,0.1111 0.426,0.0741 0.824,0.1759 1.195,0.3056 v 1 c -0.371,-0.1389 -0.764,-0.2454 -1.181,-0.3195 -0.417,-0.0833 -0.856,-0.125 -1.319,-0.125 -0.806,0 -1.445,0.1528 -1.917,0.4584 -0.472,0.3055 -0.81,0.7453 -1.014,1.3194 -0.204,0.5741 -0.306,1.2593 -0.306,2.0556 0,1.1018 0.26,1.9537 0.778,2.5556 0.528,0.5926 1.357,0.8889 2.486,0.8889 0.417,0 0.838,-0.0325 1.264,-0.0973 0.435,-0.0648 0.838,-0.1666 1.209,-0.3055 v 1.0139 c -0.362,0.1111 -0.755,0.199 -1.181,0.2639 -0.417,0.0648 -0.884,0.0972 -1.403,0.0972 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 103.9571,35.5476 c -1.148,0 -1.986,-0.2917 -2.514,-0.875 -0.518,-0.5926 -0.777,-1.4445 -0.777,-2.5556 0,-1.1019 0.264,-1.9491 0.791,-2.5417 0.528,-0.5926 1.362,-0.8889 2.5,-0.8889 1.139,0 1.973,0.2963 2.5,0.8889 0.528,0.5926 0.792,1.4398 0.792,2.5417 0,1.1111 -0.259,1.963 -0.778,2.5556 -0.518,0.5833 -1.356,0.875 -2.514,0.875 z m 0,-0.9722 c 0.787,0 1.343,-0.1945 1.667,-0.5834 0.324,-0.3981 0.486,-1.0231 0.486,-1.875 0,-0.8519 -0.166,-1.4722 -0.5,-1.8611 -0.324,-0.3982 -0.875,-0.5973 -1.653,-0.5973 -0.777,0 -1.333,0.1991 -1.666,0.5973 -0.324,0.3889 -0.486,1.0092 -0.486,1.8611 0,0.8519 0.162,1.4769 0.486,1.875 0.324,0.3889 0.879,0.5834 1.666,0.5834 z\"\n     fill=\"{color4}\" />\n  <path\n     d=\"m 108.6411,35.4087 v -0.9583 h 1.028 v 0.9583 z\"\n     fill=\"{color4}\" />\n</svg>\n","<script>\n\timport * as Logos from 'svelte-logoipsum';\n\n\tconst logos = [];\n\tfor (let i = 1; i <= 26; i++) {\n\t\tconst name = `Logo${i}`;\n\t\tlogos.push({ name: `<${name} />` , component: Logos[name] });\n\t}\n</script>\n\n<main>\n\t<h1>svelte-logoipsum</h1>\n\t<div class=\"logos\">\n\t\t{#each logos as logo}\n\t\t\t<div class=\"logo\">\n\t\t\t\t<span>{logo.name}</span>\n\t\t\t\t<div>\n\t\t\t\t\t<svelte:component this={logo.component} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\ttext-align: center;\n\t}\n\n\t.logos {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmargin: 0 auto;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: space-around;\n\t}\n\n\t.logo {\n\t\tborder: 1px solid black;\n\t\tmargin: 1.5rem 0;\n\t\tmin-width: 240px;\n\t\tmargin: 12px;\n\t\tpadding: 24px;\n\t\tborder-radius: 6px;\t\n\t}\n\n\t.logo span {\n\t\tdisplay: block;\n\t\tmargin-bottom: 1rem;\n\t\tfont-family: monospace;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: 500px;\n\t\t}\n\t}\n\n\t@media (min-width: 1024px) {\n\t\tmain {\n\t\t\tmax-width: 800px;\n\t\t}\n\t}\n\n\t@media (min-width: 1280px) {\n\t\tmain {\n\t\t\tmax-width: 1000px;\n\t\t}\n\t}\n\n\t@media (min-width: 1280px) {\n\t\tmain {\n\t\t\tmax-width: 1000px;\n\t\t}\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","id","customClass","color","color1","color2","color3","color4","color5","iterations","logos","Logos","body"],"mappings":"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"}